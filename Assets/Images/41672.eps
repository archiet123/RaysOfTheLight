%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1509.m00.i125.n010.S.c12.296937170 Futuristic user interface elements vector set.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: Антон
%%CreationDate: 9/28/2015
%%BoundingBox: 0 0 525 350
%%HiResBoundingBox: 0 0 525 350
%%CropBox: 0 0 525 350
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">1509.m00.i125.n002.P.c25.192027149 Hair follicle diagnostics logos set</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2015-09-28T16:36:41+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-09-28T16:36:41+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2015-09-28T16:36:41+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>172</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgArAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A8qYquRHkdURSzsaKqipJ&#xA;PYAYQLQSALKdTeSPNkFgb+bS547ZaVLAB/iNB+7J9Tv/AC5ky0OYR4jE1+OnN18e1tLKfAJxMvx1&#xA;5fakro6MUdSrjYqwoR9BzGIp2AIIsLcCXYquSN5HCRqXdtlVRUk+wGEC0EgCyueCdAxeNlCsUYkE&#xA;UYdVPv7YmJCBMHkVPAydiqYaXoOr6rz/AEfbG49MqrhSoILhiKgkbfAd+mXYtPPJ9ItxtRrMWGvE&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:18f7f62a-fd84-1b40-a811-500744eaf1c3</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:18f7f62a-fd84-1b40-a811-500744eaf1c3</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:8e79a7f6-1191-47a1-b524-615bb1f87fb9</stRef:instanceID>
            <stRef:documentID>xmp.did:34b67c6b-caf0-c746-a850-02a6bdc21f93</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4239c0b2-9560-5644-9c1b-2d4eaefa5ca4</stEvt:instanceID>
                  <stEvt:when>2015-03-29T08:26:58+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:aff6bf30-cc43-d448-a6bd-3eb49aad843a</stEvt:instanceID>
                  <stEvt:when>2015-06-26T18:07:44+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:aab20a66-c3a5-d743-ac57-1f166d5a682d</stEvt:instanceID>
                  <stEvt:when>2015-06-28T17:00:50+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d0259daf-101c-a544-8fb4-42fd99942d7b</stEvt:instanceID>
                  <stEvt:when>2015-08-04T10:47:49+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5c2ab3aa-fe39-5f47-b94e-17ee252dcdd5</stEvt:instanceID>
                  <stEvt:when>2015-08-04T11:53:48+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:18f7f62a-fd84-1b40-a811-500744eaf1c3</stEvt:instanceID>
                  <stEvt:when>2015-09-28T16:36:41+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>525.000000</stDim:w>
            <stDim:h>350.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -350 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 350 li
525 350 li
525 0 li
cp
clp
525 350 mo
0 350 li
0 0 li
525 0 li
525 350 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
f
400.638 264.525 mo
400.638 255.529 li
398.539 255.529 li
398.539 264.525 li
400.638 264.525 li
cp
396.44 263.548 mo
396.44 255.529 li
394.341 255.529 li
394.341 263.548 li
396.44 263.548 li
cp
392.242 262.572 mo
392.242 255.529 li
390.143 255.529 li
390.143 262.572 li
392.242 262.572 li
cp
388.044 263.269 mo
388.044 255.529 li
385.945 255.529 li
385.945 263.269 li
388.044 263.269 li
cp
383.846 262.655 mo
383.846 255.529 li
381.747 255.529 li
381.747 262.655 li
383.846 262.655 li
cp
379.648 260.674 mo
379.648 255.529 li
377.549 255.529 li
377.549 260.674 li
379.648 260.674 li
cp
375.45 258.777 mo
375.45 255.529 li
373.351 255.529 li
373.351 258.777 li
375.45 258.777 li
cp
398.539 228.15 mo
398.539 254.312 li
400.638 254.312 li
400.638 228.15 li
398.539 228.15 li
cp
394.341 230.99 mo
394.341 254.312 li
396.44 254.312 li
396.44 230.99 li
394.341 230.99 li
cp
390.143 233.83 mo
390.143 254.312 li
392.242 254.312 li
392.242 233.83 li
390.143 233.83 li
cp
385.945 231.801 mo
385.945 254.312 li
388.044 254.312 li
388.044 231.801 li
385.945 231.801 li
cp
381.747 233.586 mo
381.747 254.312 li
383.846 254.312 li
383.846 233.586 li
381.747 233.586 li
cp
377.549 239.348 mo
377.549 254.312 li
379.648 254.312 li
379.648 239.348 li
377.549 239.348 li
cp
375.45 244.866 mo
375.45 254.312 li
373.351 254.312 li
373.351 244.866 li
375.45 244.866 li
cp
371.357 264.441 mo
371.357 255.529 li
369.258 255.529 li
369.258 264.441 li
371.357 264.441 li
cp
367.159 262.432 mo
367.159 255.529 li
365.06 255.529 li
365.06 262.432 li
367.159 262.432 li
cp
362.961 255.529 mo
360.862 255.529 li
360.862 265.266 li
362.961 265.266 li
362.961 255.529 li
cp
358.763 263.13 mo
358.763 255.529 li
356.664 255.529 li
356.664 263.13 li
358.763 263.13 li
cp
354.565 262.46 mo
354.565 255.529 li
352.467 255.529 li
352.467 262.46 li
354.565 262.46 li
cp
350.368 259.502 mo
350.368 255.529 li
348.269 255.529 li
348.269 259.502 li
350.368 259.502 li
cp
346.17 260.339 mo
346.17 255.529 li
344.071 255.529 li
344.071 260.339 li
346.17 260.339 li
cp
341.972 263.632 mo
341.972 255.529 li
339.873 255.529 li
339.873 263.632 li
341.972 263.632 li
cp
337.774 264.525 mo
337.774 255.529 li
335.675 255.529 li
335.675 264.525 li
337.774 264.525 li
cp
333.576 263.548 mo
333.576 255.529 li
331.477 255.529 li
331.477 263.548 li
333.576 263.548 li
cp
329.378 262.572 mo
329.378 255.529 li
327.279 255.529 li
327.279 262.572 li
329.378 262.572 li
cp
325.18 263.269 mo
325.18 255.529 li
323.081 255.529 li
323.081 263.269 li
325.18 263.269 li
cp
320.982 262.655 mo
320.982 255.529 li
318.883 255.529 li
318.883 262.655 li
320.982 262.655 li
cp
316.785 260.674 mo
316.785 255.529 li
314.686 255.529 li
314.686 260.674 li
316.785 260.674 li
cp
312.587 258.777 mo
312.587 255.529 li
310.488 255.529 li
310.488 258.777 li
312.587 258.777 li
cp
369.258 228.393 mo
369.258 254.312 li
371.357 254.312 li
371.357 228.393 li
369.258 228.393 li
cp
365.06 234.236 mo
365.06 254.312 li
367.159 254.312 li
367.159 234.236 li
365.06 234.236 li
cp
362.961 225.992 mo
360.862 225.992 li
360.862 254.312 li
362.961 254.312 li
362.961 225.992 li
cp
356.664 232.207 mo
356.664 254.312 li
358.763 254.312 li
358.763 232.207 li
356.664 232.207 li
cp
352.467 234.154 mo
352.467 254.312 li
354.565 254.312 li
354.565 234.154 li
352.467 234.154 li
cp
348.269 242.756 mo
348.269 254.312 li
350.368 254.312 li
350.368 242.756 li
348.269 242.756 li
cp
344.071 240.321 mo
344.071 254.312 li
346.17 254.312 li
346.17 240.321 li
344.071 240.321 li
cp
339.873 230.746 mo
339.873 254.312 li
341.972 254.312 li
341.972 230.746 li
339.873 230.746 li
cp
335.675 228.15 mo
335.675 254.312 li
337.774 254.312 li
337.774 228.15 li
335.675 228.15 li
cp
331.477 230.99 mo
331.477 254.312 li
333.576 254.312 li
333.576 230.99 li
331.477 230.99 li
cp
327.279 233.83 mo
327.279 254.312 li
329.378 254.312 li
329.378 233.83 li
327.279 233.83 li
cp
323.081 231.801 mo
323.081 254.312 li
325.18 254.312 li
325.18 231.801 li
323.081 231.801 li
cp
318.883 233.586 mo
318.883 254.312 li
320.982 254.312 li
320.982 233.586 li
318.883 233.586 li
cp
314.686 239.348 mo
314.686 254.312 li
316.785 254.312 li
316.785 239.348 li
314.686 239.348 li
cp
312.587 244.866 mo
312.587 254.312 li
310.488 254.312 li
310.488 244.866 li
312.587 244.866 li
cp
0 .701961 .921569 rgb
f
428.107 193.527 mo
439.985 191.853 li
444.948 192.559 li
451.153 191.746 li
452.926 192.41 li
458.776 190.369 li
464.094 190.891 li
466.093 187.817 li
469.944 190.657 li
474.375 189.972 li
480.58 191.137 li
485.544 187.832 li
490.153 190.19 li
494.23 184.208 li
498.307 186.305 li
500.966 184.844 li
506.639 188.346 li
513.73 176.261 li
506.639 180.941 li
500.966 180.683 li
498.307 182.437 li
494.23 181.824 li
490.153 184.894 li
485.544 184.476 li
480.58 190.754 li
474.375 187.075 li
469.944 188.511 li
466.093 182.947 li
464.094 189.617 li
458.776 188.569 li
452.926 191.613 li
451.153 191.006 li
444.948 191.738 li
439.985 190.191 li
428.107 192.848 li
423.853 191.707 li
416.068 193.976 li
416.068 193.79 li
423.853 189.135 li
428.107 191.48 li
439.985 184.93 li
444.948 189.349 li
451.153 188.536 li
452.926 190.001 li
458.776 184.605 li
464.094 181.376 li
466.575 178.11 li
469.944 183.888 li
474.375 178.844 li
480.58 186.008 li
485.544 177.132 li
490.153 180.16 li
494.23 175.25 li
498.307 171.049 li
500.966 176.879 li
506.639 170.965 li
513.73 172.923 li
506.639 158.201 li
500.966 166.598 li
498.307 164.135 li
494.23 171.704 li
490.153 176.083 li
485.544 173.941 li
480.58 178.385 li
474.375 171.221 li
469.944 171.548 li
466.575 165.77 li
464.094 176.944 li
458.776 181.237 li
452.926 187.519 li
451.153 185.346 li
444.948 187.222 li
439.985 178.902 li
428.107 188.821 li
423.853 186.121 li
416.068 193.573 li
416.068 158.289 li
415.134 158.289 li
415.134 194.965 li
513.695 194.965 li
513.695 194.031 li
416.305 194.031 li
423.853 192.949 li
428.107 193.527 li
cp
f
238.823 170.343 mo
238.26 170.343 237.803 169.886 237.803 169.323 cv
237.803 160.251 li
237.803 159.687 238.26 159.23 238.823 159.23 cv
238.823 159.23 li
239.387 159.23 239.844 159.687 239.844 160.251 cv
239.844 169.323 li
239.844 169.886 239.387 170.343 238.823 170.343 cv
238.823 170.343 li
cp
f
241.431 170.343 mo
240.868 170.343 240.411 169.886 240.411 169.323 cv
240.411 160.251 li
240.411 159.687 240.868 159.23 241.431 159.23 cv
241.431 159.23 li
241.995 159.23 242.452 159.687 242.452 160.251 cv
242.452 169.323 li
242.452 169.886 241.995 170.343 241.431 170.343 cv
241.431 170.343 li
cp
f
244.04 170.343 mo
243.476 170.343 243.019 169.886 243.019 169.323 cv
243.019 160.251 li
243.019 159.687 243.476 159.23 244.04 159.23 cv
244.04 159.23 li
244.603 159.23 245.06 159.687 245.06 160.251 cv
245.06 169.323 li
245.06 169.886 244.603 170.343 244.04 170.343 cv
244.04 170.343 li
cp
f
246.648 170.343 mo
246.084 170.343 245.627 169.886 245.627 169.323 cv
245.627 160.251 li
245.627 159.687 246.084 159.23 246.648 159.23 cv
246.648 159.23 li
247.211 159.23 247.668 159.687 247.668 160.251 cv
247.668 169.323 li
247.668 169.886 247.211 170.343 246.648 170.343 cv
246.648 170.343 li
cp
f
249.256 170.343 mo
248.692 170.343 248.235 169.886 248.235 169.323 cv
248.235 160.251 li
248.235 159.687 248.692 159.23 249.256 159.23 cv
249.256 159.23 li
249.82 159.23 250.277 159.687 250.277 160.251 cv
250.277 169.323 li
250.277 169.886 249.82 170.343 249.256 170.343 cv
249.256 170.343 li
cp
f
251.864 170.343 mo
251.301 170.343 250.844 169.886 250.844 169.323 cv
250.844 160.251 li
250.844 159.687 251.301 159.23 251.864 159.23 cv
251.864 159.23 li
252.428 159.23 252.885 159.687 252.885 160.251 cv
252.885 169.323 li
252.885 169.886 252.428 170.343 251.864 170.343 cv
251.864 170.343 li
cp
f
254.472 170.343 mo
253.909 170.343 253.452 169.886 253.452 169.323 cv
253.452 160.251 li
253.452 159.687 253.909 159.23 254.472 159.23 cv
254.472 159.23 li
255.036 159.23 255.493 159.687 255.493 160.251 cv
255.493 169.323 li
255.493 169.886 255.036 170.343 254.472 170.343 cv
254.472 170.343 li
cp
f
257.081 170.343 mo
256.517 170.343 256.06 169.886 256.06 169.323 cv
256.06 160.251 li
256.06 159.687 256.517 159.23 257.081 159.23 cv
257.081 159.23 li
257.644 159.23 258.101 159.687 258.101 160.251 cv
258.101 169.323 li
258.101 169.886 257.644 170.343 257.081 170.343 cv
257.081 170.343 li
cp
f
259.689 170.343 mo
259.125 170.343 258.668 169.886 258.668 169.323 cv
258.668 160.251 li
258.668 159.687 259.125 159.23 259.689 159.23 cv
259.689 159.23 li
260.252 159.23 260.709 159.687 260.709 160.251 cv
260.709 169.323 li
260.709 169.886 260.252 170.343 259.689 170.343 cv
259.689 170.343 li
cp
f
262.297 170.343 mo
261.733 170.343 261.276 169.886 261.276 169.323 cv
261.276 160.251 li
261.276 159.687 261.733 159.23 262.297 159.23 cv
262.297 159.23 li
262.861 159.23 263.318 159.687 263.318 160.251 cv
263.318 169.323 li
263.318 169.886 262.861 170.343 262.297 170.343 cv
262.297 170.343 li
cp
f
264.905 170.343 mo
264.341 170.343 263.885 169.886 263.885 169.323 cv
263.885 160.251 li
263.885 159.687 264.341 159.23 264.905 159.23 cv
264.905 159.23 li
265.469 159.23 265.926 159.687 265.926 160.251 cv
265.926 169.323 li
265.926 169.886 265.469 170.343 264.905 170.343 cv
264.905 170.343 li
cp
f
238.823 182.765 mo
238.26 182.765 237.803 182.308 237.803 181.744 cv
237.803 172.672 li
237.803 172.109 238.26 171.652 238.823 171.652 cv
238.823 171.652 li
239.387 171.652 239.844 172.109 239.844 172.672 cv
239.844 181.744 li
239.844 182.308 239.387 182.765 238.823 182.765 cv
238.823 182.765 li
cp
f
241.431 182.765 mo
240.868 182.765 240.411 182.308 240.411 181.744 cv
240.411 172.672 li
240.411 172.109 240.868 171.652 241.431 171.652 cv
241.431 171.652 li
241.995 171.652 242.452 172.109 242.452 172.672 cv
242.452 181.744 li
242.452 182.308 241.995 182.765 241.431 182.765 cv
241.431 182.765 li
cp
f
244.04 182.765 mo
243.476 182.765 243.019 182.308 243.019 181.744 cv
243.019 172.672 li
243.019 172.109 243.476 171.652 244.04 171.652 cv
244.04 171.652 li
244.603 171.652 245.06 172.109 245.06 172.672 cv
245.06 181.744 li
245.06 182.308 244.603 182.765 244.04 182.765 cv
244.04 182.765 li
cp
f
246.648 182.765 mo
246.084 182.765 245.627 182.308 245.627 181.744 cv
245.627 172.672 li
245.627 172.109 246.084 171.652 246.648 171.652 cv
246.648 171.652 li
247.211 171.652 247.668 172.109 247.668 172.672 cv
247.668 181.744 li
247.668 182.308 247.211 182.765 246.648 182.765 cv
246.648 182.765 li
cp
f
249.256 182.765 mo
248.692 182.765 248.235 182.308 248.235 181.744 cv
248.235 172.672 li
248.235 172.109 248.692 171.652 249.256 171.652 cv
249.256 171.652 li
249.82 171.652 250.277 172.109 250.277 172.672 cv
250.277 181.744 li
250.277 182.308 249.82 182.765 249.256 182.765 cv
249.256 182.765 li
cp
f
251.864 182.765 mo
251.301 182.765 250.844 182.308 250.844 181.744 cv
250.844 172.672 li
250.844 172.109 251.301 171.652 251.864 171.652 cv
251.864 171.652 li
252.428 171.652 252.885 172.109 252.885 172.672 cv
252.885 181.744 li
252.885 182.308 252.428 182.765 251.864 182.765 cv
251.864 182.765 li
cp
f
254.472 182.765 mo
253.909 182.765 253.452 182.308 253.452 181.744 cv
253.452 172.672 li
253.452 172.109 253.909 171.652 254.472 171.652 cv
254.472 171.652 li
255.036 171.652 255.493 172.109 255.493 172.672 cv
255.493 181.744 li
255.493 182.308 255.036 182.765 254.472 182.765 cv
254.472 182.765 li
cp
f
257.081 182.765 mo
256.517 182.765 256.06 182.308 256.06 181.744 cv
256.06 172.672 li
256.06 172.109 256.517 171.652 257.081 171.652 cv
257.081 171.652 li
257.644 171.652 258.101 172.109 258.101 172.672 cv
258.101 181.744 li
258.101 182.308 257.644 182.765 257.081 182.765 cv
257.081 182.765 li
cp
f
259.689 182.765 mo
259.125 182.765 258.668 182.308 258.668 181.744 cv
258.668 172.672 li
258.668 172.109 259.125 171.652 259.689 171.652 cv
259.689 171.652 li
260.252 171.652 260.709 172.109 260.709 172.672 cv
260.709 181.744 li
260.709 182.308 260.252 182.765 259.689 182.765 cv
259.689 182.765 li
cp
f
262.297 182.765 mo
261.733 182.765 261.276 182.308 261.276 181.744 cv
261.276 172.672 li
261.276 172.109 261.733 171.652 262.297 171.652 cv
262.297 171.652 li
262.861 171.652 263.318 172.109 263.318 172.672 cv
263.318 181.744 li
263.318 182.308 262.861 182.765 262.297 182.765 cv
262.297 182.765 li
cp
f
264.905 182.765 mo
264.341 182.765 263.885 182.308 263.885 181.744 cv
263.885 172.672 li
263.885 172.109 264.341 171.652 264.905 171.652 cv
264.905 171.652 li
265.469 171.652 265.926 172.109 265.926 172.672 cv
265.926 181.744 li
265.926 182.308 265.469 182.765 264.905 182.765 cv
264.905 182.765 li
cp
f
267.513 182.765 mo
266.95 182.765 266.493 182.308 266.493 181.744 cv
266.493 172.672 li
266.493 172.109 266.95 171.652 267.513 171.652 cv
267.513 171.652 li
268.077 171.652 268.534 172.109 268.534 172.672 cv
268.534 181.744 li
268.534 182.308 268.077 182.765 267.513 182.765 cv
267.513 182.765 li
cp
f
270.122 182.765 mo
269.558 182.765 269.101 182.308 269.101 181.744 cv
269.101 172.672 li
269.101 172.109 269.558 171.652 270.122 171.652 cv
270.122 171.652 li
270.685 171.652 271.142 172.109 271.142 172.672 cv
271.142 181.744 li
271.142 182.308 270.685 182.765 270.122 182.765 cv
270.122 182.765 li
cp
f
238.823 195.187 mo
238.26 195.187 237.803 194.73 237.803 194.166 cv
237.803 185.094 li
237.803 184.53 238.26 184.073 238.823 184.073 cv
238.823 184.073 li
239.387 184.073 239.844 184.53 239.844 185.094 cv
239.844 194.166 li
239.844 194.73 239.387 195.187 238.823 195.187 cv
238.823 195.187 li
cp
f
241.431 195.187 mo
240.868 195.187 240.411 194.73 240.411 194.166 cv
240.411 185.094 li
240.411 184.53 240.868 184.073 241.431 184.073 cv
241.431 184.073 li
241.995 184.073 242.452 184.53 242.452 185.094 cv
242.452 194.166 li
242.452 194.73 241.995 195.187 241.431 195.187 cv
241.431 195.187 li
cp
f
244.04 195.187 mo
243.476 195.187 243.019 194.73 243.019 194.166 cv
243.019 185.094 li
243.019 184.53 243.476 184.073 244.04 184.073 cv
244.04 184.073 li
244.603 184.073 245.06 184.53 245.06 185.094 cv
245.06 194.166 li
245.06 194.73 244.603 195.187 244.04 195.187 cv
244.04 195.187 li
cp
f
246.648 195.187 mo
246.084 195.187 245.627 194.73 245.627 194.166 cv
245.627 185.094 li
245.627 184.53 246.084 184.073 246.648 184.073 cv
246.648 184.073 li
247.211 184.073 247.668 184.53 247.668 185.094 cv
247.668 194.166 li
247.668 194.73 247.211 195.187 246.648 195.187 cv
246.648 195.187 li
cp
f
238.823 207.608 mo
238.26 207.608 237.803 207.151 237.803 206.588 cv
237.803 197.516 li
237.803 196.952 238.26 196.495 238.823 196.495 cv
238.823 196.495 li
239.387 196.495 239.844 196.952 239.844 197.516 cv
239.844 206.588 li
239.844 207.151 239.387 207.608 238.823 207.608 cv
238.823 207.608 li
cp
f
241.431 207.608 mo
240.868 207.608 240.411 207.151 240.411 206.588 cv
240.411 197.516 li
240.411 196.952 240.868 196.495 241.431 196.495 cv
241.431 196.495 li
241.995 196.495 242.452 196.952 242.452 197.516 cv
242.452 206.588 li
242.452 207.151 241.995 207.608 241.431 207.608 cv
241.431 207.608 li
cp
f
244.04 207.608 mo
243.476 207.608 243.019 207.151 243.019 206.588 cv
243.019 197.516 li
243.019 196.952 243.476 196.495 244.04 196.495 cv
244.04 196.495 li
244.603 196.495 245.06 196.952 245.06 197.516 cv
245.06 206.588 li
245.06 207.151 244.603 207.608 244.04 207.608 cv
244.04 207.608 li
cp
f
246.648 207.608 mo
246.084 207.608 245.627 207.151 245.627 206.588 cv
245.627 197.516 li
245.627 196.952 246.084 196.495 246.648 196.495 cv
246.648 196.495 li
247.211 196.495 247.668 196.952 247.668 197.516 cv
247.668 206.588 li
247.668 207.151 247.211 207.608 246.648 207.608 cv
246.648 207.608 li
cp
f
249.256 207.608 mo
248.692 207.608 248.235 207.151 248.235 206.588 cv
248.235 197.516 li
248.235 196.952 248.692 196.495 249.256 196.495 cv
249.256 196.495 li
249.82 196.495 250.277 196.952 250.277 197.516 cv
250.277 206.588 li
250.277 207.151 249.82 207.608 249.256 207.608 cv
249.256 207.608 li
cp
f
251.864 207.608 mo
251.301 207.608 250.844 207.151 250.844 206.588 cv
250.844 197.516 li
250.844 196.952 251.301 196.495 251.864 196.495 cv
251.864 196.495 li
252.428 196.495 252.885 196.952 252.885 197.516 cv
252.885 206.588 li
252.885 207.151 252.428 207.608 251.864 207.608 cv
251.864 207.608 li
cp
f
238.823 220.03 mo
238.26 220.03 237.803 219.573 237.803 219.009 cv
237.803 209.937 li
237.803 209.374 238.26 208.917 238.823 208.917 cv
238.823 208.917 li
239.387 208.917 239.844 209.374 239.844 209.937 cv
239.844 219.009 li
239.844 219.573 239.387 220.03 238.823 220.03 cv
238.823 220.03 li
cp
f
241.431 220.03 mo
240.868 220.03 240.411 219.573 240.411 219.009 cv
240.411 209.937 li
240.411 209.374 240.868 208.917 241.431 208.917 cv
241.431 208.917 li
241.995 208.917 242.452 209.374 242.452 209.937 cv
242.452 219.009 li
242.452 219.573 241.995 220.03 241.431 220.03 cv
241.431 220.03 li
cp
f
244.04 220.03 mo
243.476 220.03 243.019 219.573 243.019 219.009 cv
243.019 209.937 li
243.019 209.374 243.476 208.917 244.04 208.917 cv
244.04 208.917 li
244.603 208.917 245.06 209.374 245.06 209.937 cv
245.06 219.009 li
245.06 219.573 244.603 220.03 244.04 220.03 cv
244.04 220.03 li
cp
f
246.648 220.03 mo
246.084 220.03 245.627 219.573 245.627 219.009 cv
245.627 209.937 li
245.627 209.374 246.084 208.917 246.648 208.917 cv
246.648 208.917 li
247.211 208.917 247.668 209.374 247.668 209.937 cv
247.668 219.009 li
247.668 219.573 247.211 220.03 246.648 220.03 cv
246.648 220.03 li
cp
f
249.256 220.03 mo
248.692 220.03 248.235 219.573 248.235 219.009 cv
248.235 209.937 li
248.235 209.374 248.692 208.917 249.256 208.917 cv
249.256 208.917 li
249.82 208.917 250.277 209.374 250.277 209.937 cv
250.277 219.009 li
250.277 219.573 249.82 220.03 249.256 220.03 cv
249.256 220.03 li
cp
f
251.864 220.03 mo
251.301 220.03 250.844 219.573 250.844 219.009 cv
250.844 209.937 li
250.844 209.374 251.301 208.917 251.864 208.917 cv
251.864 208.917 li
252.428 208.917 252.885 209.374 252.885 209.937 cv
252.885 219.009 li
252.885 219.573 252.428 220.03 251.864 220.03 cv
251.864 220.03 li
cp
f
254.472 220.03 mo
253.909 220.03 253.452 219.573 253.452 219.009 cv
253.452 209.937 li
253.452 209.374 253.909 208.917 254.472 208.917 cv
254.472 208.917 li
255.036 208.917 255.493 209.374 255.493 209.937 cv
255.493 219.009 li
255.493 219.573 255.036 220.03 254.472 220.03 cv
254.472 220.03 li
cp
f
257.081 220.03 mo
256.517 220.03 256.06 219.573 256.06 219.009 cv
256.06 209.937 li
256.06 209.374 256.517 208.917 257.081 208.917 cv
257.081 208.917 li
257.644 208.917 258.101 209.374 258.101 209.937 cv
258.101 219.009 li
258.101 219.573 257.644 220.03 257.081 220.03 cv
257.081 220.03 li
cp
f
259.689 220.03 mo
259.125 220.03 258.668 219.573 258.668 219.009 cv
258.668 209.937 li
258.668 209.374 259.125 208.917 259.689 208.917 cv
259.689 208.917 li
260.252 208.917 260.709 209.374 260.709 209.937 cv
260.709 219.009 li
260.709 219.573 260.252 220.03 259.689 220.03 cv
259.689 220.03 li
cp
f
262.297 220.03 mo
261.733 220.03 261.276 219.573 261.276 219.009 cv
261.276 209.937 li
261.276 209.374 261.733 208.917 262.297 208.917 cv
262.297 208.917 li
262.861 208.917 263.318 209.374 263.318 209.937 cv
263.318 219.009 li
263.318 219.573 262.861 220.03 262.297 220.03 cv
262.297 220.03 li
cp
f
264.905 220.03 mo
264.341 220.03 263.885 219.573 263.885 219.009 cv
263.885 209.937 li
263.885 209.374 264.341 208.917 264.905 208.917 cv
264.905 208.917 li
265.469 208.917 265.926 209.374 265.926 209.937 cv
265.926 219.009 li
265.926 219.573 265.469 220.03 264.905 220.03 cv
264.905 220.03 li
cp
f
267.513 220.03 mo
266.95 220.03 266.493 219.573 266.493 219.009 cv
266.493 209.937 li
266.493 209.374 266.95 208.917 267.513 208.917 cv
267.513 208.917 li
268.077 208.917 268.534 209.374 268.534 209.937 cv
268.534 219.009 li
268.534 219.573 268.077 220.03 267.513 220.03 cv
267.513 220.03 li
cp
f
270.122 220.03 mo
269.558 220.03 269.101 219.573 269.101 219.009 cv
269.101 209.937 li
269.101 209.374 269.558 208.917 270.122 208.917 cv
270.122 208.917 li
270.685 208.917 271.142 209.374 271.142 209.937 cv
271.142 219.009 li
271.142 219.573 270.685 220.03 270.122 220.03 cv
270.122 220.03 li
cp
f
272.73 220.03 mo
272.166 220.03 271.709 219.573 271.709 219.009 cv
271.709 209.937 li
271.709 209.374 272.166 208.917 272.73 208.917 cv
272.73 208.917 li
273.293 208.917 273.75 209.374 273.75 209.937 cv
273.75 219.009 li
273.75 219.573 273.293 220.03 272.73 220.03 cv
272.73 220.03 li
cp
f
275.338 220.03 mo
274.774 220.03 274.317 219.573 274.317 219.009 cv
274.317 209.937 li
274.317 209.374 274.774 208.917 275.338 208.917 cv
275.338 208.917 li
275.902 208.917 276.358 209.374 276.358 209.937 cv
276.358 219.009 li
276.358 219.573 275.902 220.03 275.338 220.03 cv
275.338 220.03 li
cp
f
277.946 220.03 mo
277.382 220.03 276.926 219.573 276.926 219.009 cv
276.926 209.937 li
276.926 209.374 277.382 208.917 277.946 208.917 cv
277.946 208.917 li
278.51 208.917 278.967 209.374 278.967 209.937 cv
278.967 219.009 li
278.967 219.573 278.51 220.03 277.946 220.03 cv
277.946 220.03 li
cp
f
280.554 220.03 mo
279.991 220.03 279.534 219.573 279.534 219.009 cv
279.534 209.937 li
279.534 209.374 279.991 208.917 280.554 208.917 cv
280.554 208.917 li
281.118 208.917 281.575 209.374 281.575 209.937 cv
281.575 219.009 li
281.575 219.573 281.118 220.03 280.554 220.03 cv
280.554 220.03 li
cp
f
283.162 220.03 mo
282.599 220.03 282.142 219.573 282.142 219.009 cv
282.142 209.937 li
282.142 209.374 282.599 208.917 283.162 208.917 cv
283.162 208.917 li
283.726 208.917 284.183 209.374 284.183 209.937 cv
284.183 219.009 li
284.183 219.573 283.726 220.03 283.162 220.03 cv
283.162 220.03 li
cp
f
238.823 232.452 mo
238.26 232.452 237.803 231.995 237.803 231.431 cv
237.803 222.359 li
237.803 221.795 238.26 221.338 238.823 221.338 cv
238.823 221.338 li
239.387 221.338 239.844 221.795 239.844 222.359 cv
239.844 231.431 li
239.844 231.995 239.387 232.452 238.823 232.452 cv
238.823 232.452 li
cp
f
241.431 232.452 mo
240.868 232.452 240.411 231.995 240.411 231.431 cv
240.411 222.359 li
240.411 221.795 240.868 221.338 241.431 221.338 cv
241.431 221.338 li
241.995 221.338 242.452 221.795 242.452 222.359 cv
242.452 231.431 li
242.452 231.995 241.995 232.452 241.431 232.452 cv
241.431 232.452 li
cp
f
244.04 232.452 mo
243.476 232.452 243.019 231.995 243.019 231.431 cv
243.019 222.359 li
243.019 221.795 243.476 221.338 244.04 221.338 cv
244.04 221.338 li
244.603 221.338 245.06 221.795 245.06 222.359 cv
245.06 231.431 li
245.06 231.995 244.603 232.452 244.04 232.452 cv
244.04 232.452 li
cp
f
246.648 232.452 mo
246.084 232.452 245.627 231.995 245.627 231.431 cv
245.627 222.359 li
245.627 221.795 246.084 221.338 246.648 221.338 cv
246.648 221.338 li
247.211 221.338 247.668 221.795 247.668 222.359 cv
247.668 231.431 li
247.668 231.995 247.211 232.452 246.648 232.452 cv
246.648 232.452 li
cp
f
249.256 232.452 mo
248.692 232.452 248.235 231.995 248.235 231.431 cv
248.235 222.359 li
248.235 221.795 248.692 221.338 249.256 221.338 cv
249.256 221.338 li
249.82 221.338 250.277 221.795 250.277 222.359 cv
250.277 231.431 li
250.277 231.995 249.82 232.452 249.256 232.452 cv
249.256 232.452 li
cp
f
251.864 232.452 mo
251.301 232.452 250.844 231.995 250.844 231.431 cv
250.844 222.359 li
250.844 221.795 251.301 221.338 251.864 221.338 cv
251.864 221.338 li
252.428 221.338 252.885 221.795 252.885 222.359 cv
252.885 231.431 li
252.885 231.995 252.428 232.452 251.864 232.452 cv
251.864 232.452 li
cp
f
254.472 232.452 mo
253.909 232.452 253.452 231.995 253.452 231.431 cv
253.452 222.359 li
253.452 221.795 253.909 221.338 254.472 221.338 cv
254.472 221.338 li
255.036 221.338 255.493 221.795 255.493 222.359 cv
255.493 231.431 li
255.493 231.995 255.036 232.452 254.472 232.452 cv
254.472 232.452 li
cp
f
257.081 232.452 mo
256.517 232.452 256.06 231.995 256.06 231.431 cv
256.06 222.359 li
256.06 221.795 256.517 221.338 257.081 221.338 cv
257.081 221.338 li
257.644 221.338 258.101 221.795 258.101 222.359 cv
258.101 231.431 li
258.101 231.995 257.644 232.452 257.081 232.452 cv
257.081 232.452 li
cp
f
259.689 232.452 mo
259.125 232.452 258.668 231.995 258.668 231.431 cv
258.668 222.359 li
258.668 221.795 259.125 221.338 259.689 221.338 cv
259.689 221.338 li
260.252 221.338 260.709 221.795 260.709 222.359 cv
260.709 231.431 li
260.709 231.995 260.252 232.452 259.689 232.452 cv
259.689 232.452 li
cp
f
262.297 232.452 mo
261.733 232.452 261.276 231.995 261.276 231.431 cv
261.276 222.359 li
261.276 221.795 261.733 221.338 262.297 221.338 cv
262.297 221.338 li
262.861 221.338 263.318 221.795 263.318 222.359 cv
263.318 231.431 li
263.318 231.995 262.861 232.452 262.297 232.452 cv
262.297 232.452 li
cp
f
264.905 232.452 mo
264.341 232.452 263.885 231.995 263.885 231.431 cv
263.885 222.359 li
263.885 221.795 264.341 221.338 264.905 221.338 cv
264.905 221.338 li
265.469 221.338 265.926 221.795 265.926 222.359 cv
265.926 231.431 li
265.926 231.995 265.469 232.452 264.905 232.452 cv
264.905 232.452 li
cp
f
267.513 232.452 mo
266.95 232.452 266.493 231.995 266.493 231.431 cv
266.493 222.359 li
266.493 221.795 266.95 221.338 267.513 221.338 cv
267.513 221.338 li
268.077 221.338 268.534 221.795 268.534 222.359 cv
268.534 231.431 li
268.534 231.995 268.077 232.452 267.513 232.452 cv
267.513 232.452 li
cp
f
270.122 232.452 mo
269.558 232.452 269.101 231.995 269.101 231.431 cv
269.101 222.359 li
269.101 221.795 269.558 221.338 270.122 221.338 cv
270.122 221.338 li
270.685 221.338 271.142 221.795 271.142 222.359 cv
271.142 231.431 li
271.142 231.995 270.685 232.452 270.122 232.452 cv
270.122 232.452 li
cp
f
272.73 232.452 mo
272.166 232.452 271.709 231.995 271.709 231.431 cv
271.709 222.359 li
271.709 221.795 272.166 221.338 272.73 221.338 cv
272.73 221.338 li
273.293 221.338 273.75 221.795 273.75 222.359 cv
273.75 231.431 li
273.75 231.995 273.293 232.452 272.73 232.452 cv
272.73 232.452 li
cp
f
275.338 232.452 mo
274.774 232.452 274.317 231.995 274.317 231.431 cv
274.317 222.359 li
274.317 221.795 274.774 221.338 275.338 221.338 cv
275.338 221.338 li
275.902 221.338 276.358 221.795 276.358 222.359 cv
276.358 231.431 li
276.358 231.995 275.902 232.452 275.338 232.452 cv
275.338 232.452 li
cp
f
238.823 244.873 mo
238.26 244.873 237.803 244.416 237.803 243.853 cv
237.803 234.781 li
237.803 234.217 238.26 233.76 238.823 233.76 cv
238.823 233.76 li
239.387 233.76 239.844 234.217 239.844 234.781 cv
239.844 243.853 li
239.844 244.416 239.387 244.873 238.823 244.873 cv
238.823 244.873 li
cp
f
241.431 244.873 mo
240.868 244.873 240.411 244.416 240.411 243.853 cv
240.411 234.781 li
240.411 234.217 240.868 233.76 241.431 233.76 cv
241.431 233.76 li
241.995 233.76 242.452 234.217 242.452 234.781 cv
242.452 243.853 li
242.452 244.416 241.995 244.873 241.431 244.873 cv
241.431 244.873 li
cp
f
244.04 244.873 mo
243.476 244.873 243.019 244.416 243.019 243.853 cv
243.019 234.781 li
243.019 234.217 243.476 233.76 244.04 233.76 cv
244.04 233.76 li
244.603 233.76 245.06 234.217 245.06 234.781 cv
245.06 243.853 li
245.06 244.416 244.603 244.873 244.04 244.873 cv
244.04 244.873 li
cp
f
246.648 244.873 mo
246.084 244.873 245.627 244.416 245.627 243.853 cv
245.627 234.781 li
245.627 234.217 246.084 233.76 246.648 233.76 cv
246.648 233.76 li
247.211 233.76 247.668 234.217 247.668 234.781 cv
247.668 243.853 li
247.668 244.416 247.211 244.873 246.648 244.873 cv
246.648 244.873 li
cp
f
249.256 244.873 mo
248.692 244.873 248.235 244.416 248.235 243.853 cv
248.235 234.781 li
248.235 234.217 248.692 233.76 249.256 233.76 cv
249.256 233.76 li
249.82 233.76 250.277 234.217 250.277 234.781 cv
250.277 243.853 li
250.277 244.416 249.82 244.873 249.256 244.873 cv
249.256 244.873 li
cp
f
251.864 244.873 mo
251.301 244.873 250.844 244.416 250.844 243.853 cv
250.844 234.781 li
250.844 234.217 251.301 233.76 251.864 233.76 cv
251.864 233.76 li
252.428 233.76 252.885 234.217 252.885 234.781 cv
252.885 243.853 li
252.885 244.416 252.428 244.873 251.864 244.873 cv
251.864 244.873 li
cp
f
254.472 244.873 mo
253.909 244.873 253.452 244.416 253.452 243.853 cv
253.452 234.781 li
253.452 234.217 253.909 233.76 254.472 233.76 cv
254.472 233.76 li
255.036 233.76 255.493 234.217 255.493 234.781 cv
255.493 243.853 li
255.493 244.416 255.036 244.873 254.472 244.873 cv
254.472 244.873 li
cp
f
257.081 244.873 mo
256.517 244.873 256.06 244.416 256.06 243.853 cv
256.06 234.781 li
256.06 234.217 256.517 233.76 257.081 233.76 cv
257.081 233.76 li
257.644 233.76 258.101 234.217 258.101 234.781 cv
258.101 243.853 li
258.101 244.416 257.644 244.873 257.081 244.873 cv
257.081 244.873 li
cp
f
237.252 257.569 mo
237.252 245.838 li
296.6 245.838 li
296.6 257.569 li
237.252 257.569 li
cp
237.252 245.148 mo
237.252 233.416 li
296.6 233.416 li
296.6 245.148 li
237.252 245.148 li
cp
237.252 232.726 mo
237.252 220.994 li
296.6 220.994 li
296.6 232.726 li
237.252 232.726 li
cp
237.252 220.304 mo
237.252 208.573 li
296.6 208.573 li
296.6 220.304 li
237.252 220.304 li
cp
237.252 207.883 mo
237.252 196.151 li
296.6 196.151 li
296.6 207.883 li
237.252 207.883 li
cp
237.252 195.461 mo
237.252 183.729 li
296.6 183.729 li
296.6 195.461 li
237.252 195.461 li
cp
237.252 183.039 mo
237.252 171.308 li
296.6 171.308 li
296.6 183.039 li
237.252 183.039 li
cp
237.252 170.618 mo
237.252 158.886 li
296.6 158.886 li
296.6 170.618 li
237.252 170.618 li
cp
297.601 246.148 mo
297.601 244.838 li
297.601 233.726 li
297.601 232.416 li
297.601 221.304 li
297.601 219.995 li
297.601 208.882 li
297.601 207.573 li
297.601 196.461 li
297.601 195.151 li
297.601 184.04 li
297.601 182.729 li
297.601 171.618 li
297.601 170.307 li
297.601 157.886 li
236.252 157.886 li
236.252 170.307 li
236.252 171.618 li
236.252 182.729 li
236.252 184.04 li
236.252 195.151 li
236.252 196.461 li
236.252 207.573 li
236.252 208.882 li
236.252 219.995 li
236.252 221.304 li
236.252 232.416 li
236.252 233.726 li
236.252 244.838 li
236.252 246.148 li
236.252 258.569 li
297.601 258.569 li
297.601 246.148 li
cp
f
238.823 257.295 mo
238.26 257.295 237.803 256.838 237.803 256.274 cv
237.803 247.202 li
237.803 246.639 238.26 246.182 238.823 246.182 cv
238.823 246.182 li
239.387 246.182 239.844 246.639 239.844 247.202 cv
239.844 256.274 li
239.844 256.838 239.387 257.295 238.823 257.295 cv
238.823 257.295 li
cp
f
241.431 257.295 mo
240.868 257.295 240.411 256.838 240.411 256.274 cv
240.411 247.202 li
240.411 246.639 240.868 246.182 241.431 246.182 cv
241.431 246.182 li
241.995 246.182 242.452 246.639 242.452 247.202 cv
242.452 256.274 li
242.452 256.838 241.995 257.295 241.431 257.295 cv
241.431 257.295 li
cp
f
244.04 257.295 mo
243.476 257.295 243.019 256.838 243.019 256.274 cv
243.019 247.202 li
243.019 246.639 243.476 246.182 244.04 246.182 cv
244.04 246.182 li
244.603 246.182 245.06 246.639 245.06 247.202 cv
245.06 256.274 li
245.06 256.838 244.603 257.295 244.04 257.295 cv
244.04 257.295 li
cp
f
246.648 257.295 mo
246.084 257.295 245.627 256.838 245.627 256.274 cv
245.627 247.202 li
245.627 246.639 246.084 246.182 246.648 246.182 cv
246.648 246.182 li
247.211 246.182 247.668 246.639 247.668 247.202 cv
247.668 256.274 li
247.668 256.838 247.211 257.295 246.648 257.295 cv
246.648 257.295 li
cp
f
249.256 257.295 mo
248.692 257.295 248.235 256.838 248.235 256.274 cv
248.235 247.202 li
248.235 246.639 248.692 246.182 249.256 246.182 cv
249.256 246.182 li
249.82 246.182 250.277 246.639 250.277 247.202 cv
250.277 256.274 li
250.277 256.838 249.82 257.295 249.256 257.295 cv
249.256 257.295 li
cp
f
251.864 257.295 mo
251.301 257.295 250.844 256.838 250.844 256.274 cv
250.844 247.202 li
250.844 246.639 251.301 246.182 251.864 246.182 cv
251.864 246.182 li
252.428 246.182 252.885 246.639 252.885 247.202 cv
252.885 256.274 li
252.885 256.838 252.428 257.295 251.864 257.295 cv
251.864 257.295 li
cp
f
254.472 257.295 mo
253.909 257.295 253.452 256.838 253.452 256.274 cv
253.452 247.202 li
253.452 246.639 253.909 246.182 254.472 246.182 cv
254.472 246.182 li
255.036 246.182 255.493 246.639 255.493 247.202 cv
255.493 256.274 li
255.493 256.838 255.036 257.295 254.472 257.295 cv
254.472 257.295 li
cp
f
257.081 257.295 mo
256.517 257.295 256.06 256.838 256.06 256.274 cv
256.06 247.202 li
256.06 246.639 256.517 246.182 257.081 246.182 cv
257.081 246.182 li
257.644 246.182 258.101 246.639 258.101 247.202 cv
258.101 256.274 li
258.101 256.838 257.644 257.295 257.081 257.295 cv
257.081 257.295 li
cp
f
259.689 257.295 mo
259.125 257.295 258.668 256.838 258.668 256.274 cv
258.668 247.202 li
258.668 246.639 259.125 246.182 259.689 246.182 cv
259.689 246.182 li
260.252 246.182 260.709 246.639 260.709 247.202 cv
260.709 256.274 li
260.709 256.838 260.252 257.295 259.689 257.295 cv
259.689 257.295 li
cp
f
262.297 257.295 mo
261.733 257.295 261.276 256.838 261.276 256.274 cv
261.276 247.202 li
261.276 246.639 261.733 246.182 262.297 246.182 cv
262.297 246.182 li
262.861 246.182 263.318 246.639 263.318 247.202 cv
263.318 256.274 li
263.318 256.838 262.861 257.295 262.297 257.295 cv
262.297 257.295 li
cp
f
264.905 257.295 mo
264.341 257.295 263.885 256.838 263.885 256.274 cv
263.885 247.202 li
263.885 246.639 264.341 246.182 264.905 246.182 cv
264.905 246.182 li
265.469 246.182 265.926 246.639 265.926 247.202 cv
265.926 256.274 li
265.926 256.838 265.469 257.295 264.905 257.295 cv
264.905 257.295 li
cp
f
425.023 218.924 mo
425.023 218.208 425.606 217.625 426.323 217.625 cv
427.039 217.625 427.622 218.208 427.622 218.924 cv
427.622 219.242 427.495 219.523 427.305 219.749 cv
426.993 219.361 li
427.077 219.233 427.138 219.089 427.138 218.924 cv
427.138 218.474 426.773 218.109 426.323 218.109 cv
425.872 218.109 425.507 218.474 425.507 218.924 cv
425.507 219.024 425.531 219.117 425.564 219.206 cv
425.219 219.569 li
425.106 219.376 425.023 219.164 425.023 218.924 cv
cp
440.8 214.387 mo
440.8 213.67 441.383 213.087 442.099 213.087 cv
442.816 213.087 443.399 213.67 443.399 214.387 cv
443.399 214.671 443.289 214.919 443.135 215.133 cv
442.811 214.763 li
442.872 214.649 442.915 214.525 442.915 214.387 cv
442.915 213.937 442.55 213.572 442.099 213.572 cv
441.649 213.572 441.284 213.937 441.284 214.387 cv
441.284 214.503 441.31 214.613 441.354 214.713 cv
441.016 215.061 li
440.891 214.862 440.8 214.64 440.8 214.387 cv
cp
473.075 217.981 mo
473.075 217.265 473.658 216.682 474.375 216.682 cv
475.091 216.682 475.675 217.265 475.675 217.981 cv
475.675 218.277 475.558 218.537 475.391 218.756 cv
475.075 218.375 li
475.142 218.256 475.19 218.127 475.19 217.981 cv
475.19 217.531 474.825 217.166 474.375 217.166 cv
473.925 217.166 473.56 217.531 473.56 217.981 cv
473.56 218.136 473.615 218.273 473.69 218.397 cv
473.377 218.783 li
473.198 218.56 473.075 218.289 473.075 217.981 cv
cp
490.553 212.774 mo
490.553 212.057 491.136 211.474 491.853 211.474 cv
492.57 211.474 493.153 212.057 493.153 212.774 cv
493.153 213.041 493.053 213.276 492.914 213.482 cv
492.581 213.125 li
492.633 213.018 492.668 212.901 492.668 212.774 cv
492.668 212.324 492.303 211.959 491.853 211.959 cv
491.403 211.959 491.038 212.324 491.038 212.774 cv
491.038 212.938 491.098 213.081 491.181 213.209 cv
490.888 213.624 li
490.686 213.395 490.553 213.103 490.553 212.774 cv
cp
491.853 214.074 mo
491.641 214.074 491.449 214.011 491.272 213.921 cv
491.549 213.528 li
491.643 213.566 491.745 213.589 491.853 213.589 cv
491.998 213.589 492.127 213.541 492.245 213.475 cv
492.573 213.827 li
492.364 213.971 492.125 214.074 491.853 214.074 cv
cp
474.375 219.281 mo
474.142 219.281 473.935 219.203 473.746 219.096 cv
474.047 218.725 li
474.147 218.77 474.258 218.797 474.375 218.797 cv
474.501 218.797 474.617 218.762 474.724 218.711 cv
475.029 219.079 li
474.834 219.196 474.618 219.281 474.375 219.281 cv
cp
442.099 215.687 mo
441.813 215.687 441.561 215.575 441.346 215.417 cv
441.682 215.071 li
441.806 215.147 441.943 215.202 442.099 215.202 cv
442.234 215.202 442.355 215.162 442.466 215.105 cv
442.782 215.465 li
442.58 215.593 442.355 215.687 442.099 215.687 cv
cp
426.323 220.224 mo
426.023 220.224 425.76 220.106 425.54 219.935 cv
425.872 219.585 li
426.003 219.675 426.152 219.74 426.323 219.74 cv
426.43 219.74 426.532 219.716 426.627 219.678 cv
426.928 220.055 li
426.745 220.154 426.545 220.224 426.323 220.224 cv
cp
507.619 218.961 mo
507.619 218.244 508.202 217.661 508.919 217.661 cv
509.636 217.661 510.219 218.244 510.219 218.961 cv
510.219 219.15 510.174 219.327 510.101 219.49 cv
509.698 219.141 li
509.712 219.081 509.734 219.025 509.734 218.961 cv
509.734 218.511 509.369 218.146 508.919 218.146 cv
508.469 218.146 508.104 218.511 508.104 218.961 cv
508.104 219.012 508.124 219.056 508.132 219.104 cv
507.707 219.394 li
507.658 219.257 507.619 219.114 507.619 218.961 cv
cp
508.919 220.261 mo
508.531 220.261 508.193 220.082 507.954 219.812 cv
508.349 219.542 li
508.496 219.686 508.697 219.776 508.919 219.776 cv
509.125 219.776 509.307 219.693 509.451 219.567 cv
509.823 219.89 li
509.588 220.118 509.271 220.261 508.919 220.261 cv
cp
414.265 232.209 mo
414.715 232.209 415.08 231.844 415.08 231.393 cv
415.08 231.269 415.047 231.154 414.997 231.048 cv
425.363 220.122 li
425.627 220.334 425.958 220.467 426.323 220.467 cv
426.602 220.467 426.862 220.386 427.088 220.255 cv
430.818 224.917 li
430.728 225.048 430.663 225.198 430.663 225.369 cv
430.663 225.819 431.028 226.184 431.478 226.184 cv
431.929 226.184 432.294 225.819 432.294 225.369 cv
432.294 225.194 432.227 225.042 432.133 224.909 cv
441.164 215.605 li
441.424 215.805 441.746 215.929 442.099 215.929 cv
442.417 215.929 442.713 215.832 442.958 215.667 cv
454.96 229.383 li
454.918 229.48 454.896 229.587 454.896 229.7 cv
454.896 230.15 455.26 230.515 455.711 230.515 cv
456.161 230.515 456.526 230.15 456.526 229.7 cv
456.526 229.546 456.472 229.41 456.398 229.287 cv
460.9 223.758 li
461.014 223.82 461.14 223.864 461.279 223.864 cv
461.471 223.864 461.64 223.788 461.779 223.677 cv
465.543 227.44 li
465.495 227.543 465.465 227.656 465.465 227.777 cv
465.465 228.228 465.83 228.593 466.28 228.593 cv
466.73 228.593 467.095 228.228 467.095 227.777 cv
467.095 227.646 467.057 227.527 467.002 227.417 cv
473.583 219.298 li
473.815 219.438 474.084 219.524 474.375 219.524 cv
474.677 219.524 474.958 219.433 475.196 219.282 cv
481.137 226.451 li
481.048 226.582 480.984 226.731 480.984 226.901 cv
480.984 227.351 481.349 227.716 481.799 227.716 cv
482.249 227.716 482.614 227.351 482.614 226.901 cv
482.614 226.725 482.547 226.572 482.453 226.439 cv
491.127 214.126 li
491.345 214.243 491.589 214.316 491.853 214.316 cv
492.19 214.316 492.499 214.205 492.753 214.021 cv
501.321 223.217 li
501.275 223.319 501.246 223.431 501.246 223.55 cv
501.246 224 501.611 224.365 502.062 224.365 cv
502.512 224.365 502.877 224 502.877 223.55 cv
502.877 223.464 502.853 223.386 502.828 223.308 cv
507.748 219.953 li
508.031 220.286 508.448 220.503 508.919 220.503 cv
509.344 220.503 509.729 220.33 510.009 220.051 cv
513.018 222.659 li
512.975 222.759 512.95 222.867 512.95 222.982 cv
512.95 223.433 513.315 223.798 513.765 223.798 cv
514.216 223.798 514.581 223.433 514.581 222.982 cv
514.581 222.532 514.216 222.167 513.765 222.167 cv
513.608 222.167 513.469 222.224 513.344 222.301 cv
510.289 219.653 li
510.396 219.444 510.461 219.211 510.461 218.961 cv
510.461 218.183 509.879 217.544 509.129 217.44 cv
509.129 212.851 li
502.869 212.851 li
502.869 213.093 li
508.886 213.093 li
508.886 217.422 li
508.052 217.44 507.377 218.122 507.377 218.961 cv
507.377 219.166 507.419 219.361 507.492 219.54 cv
502.548 222.913 li
502.411 222.808 502.248 222.734 502.062 222.734 cv
501.909 222.734 501.774 222.788 501.651 222.861 cv
493.096 213.678 li
493.282 213.423 493.395 213.113 493.395 212.774 cv
493.395 211.962 492.762 211.302 491.965 211.243 cv
491.965 206.631 li
467.531 206.631 li
467.531 206.873 li
491.722 206.873 li
491.722 211.245 li
490.934 211.313 490.311 211.968 490.311 212.774 cv
490.311 213.186 490.476 213.558 490.74 213.835 cv
482.07 226.14 li
481.984 226.11 481.895 226.086 481.799 226.086 cv
481.697 226.086 481.601 226.11 481.511 226.144 cv
475.558 218.958 li
475.779 218.691 475.917 218.354 475.917 217.981 cv
475.917 217.131 475.225 216.439 474.375 216.439 cv
474.369 216.439 474.363 216.441 474.357 216.441 cv
474.357 211.8 li
461.635 211.8 li
461.635 212.043 li
474.114 212.043 li
474.114 216.466 li
473.388 216.59 472.833 217.22 472.833 217.981 cv
472.833 218.366 472.979 218.714 473.213 218.984 cv
466.66 227.069 li
466.545 227.007 466.42 226.962 466.28 226.962 cv
466.129 226.962 465.995 227.014 465.874 227.086 cv
462.051 223.263 li
462.07 223.193 462.094 223.125 462.094 223.049 cv
462.094 222.599 461.729 222.234 461.279 222.234 cv
460.829 222.234 460.464 222.599 460.464 223.049 cv
460.464 223.181 460.502 223.3 460.558 223.411 cv
456.041 228.958 li
455.94 228.912 455.829 228.885 455.711 228.885 cv
455.552 228.885 455.412 228.942 455.287 229.021 cv
443.309 215.332 li
443.514 215.07 443.642 214.745 443.642 214.387 cv
443.642 213.547 442.965 212.864 442.128 212.848 cv
442.128 208.247 li
421.976 208.247 li
421.976 208.489 li
441.886 208.489 li
441.886 212.867 li
441.137 212.972 440.557 213.61 440.557 214.387 cv
440.557 214.709 440.657 215.008 440.827 215.256 cv
431.749 224.609 li
431.664 224.578 431.574 224.554 431.478 224.554 cv
431.378 224.554 431.283 224.578 431.194 224.611 cv
427.465 219.95 li
427.711 219.677 427.865 219.32 427.865 218.924 cv
427.865 218.074 427.173 217.382 426.323 217.382 cv
426.314 217.382 426.306 217.385 426.297 217.385 cv
426.297 212.81 li
415.029 212.81 li
415.029 213.053 li
426.055 213.053 li
426.055 217.409 li
425.332 217.537 424.78 218.166 424.78 218.924 cv
424.78 219.235 424.874 219.523 425.033 219.765 cv
414.662 230.696 li
414.543 230.628 414.412 230.578 414.265 230.578 cv
413.814 230.578 413.449 230.943 413.449 231.393 cv
413.449 231.844 413.814 232.209 414.265 232.209 cv
cp
f
513.949 237.567 mo
513.949 224.308 li
513.626 224.308 li
513.626 237.567 li
502.242 237.567 li
502.242 225.129 li
501.919 225.129 li
501.919 237.567 li
481.961 237.567 li
481.961 228.493 li
481.638 228.493 li
481.638 237.567 li
466.455 237.567 li
466.455 229.34 li
466.132 229.34 li
466.132 237.567 li
455.929 237.567 li
455.929 231.59 li
455.606 231.59 li
455.606 237.567 li
431.628 237.567 li
431.628 227.389 li
431.305 227.389 li
431.305 237.567 li
414.464 237.567 li
414.464 232.882 li
414.141 232.882 li
414.141 237.567 li
413.495 237.567 li
413.495 238.051 li
516.721 238.051 li
516.721 237.567 li
513.949 237.567 li
cp
f
293.628 339.934 mo
293.57 339.934 293.512 339.939 293.453 339.939 cv
274.01 339.939 258.145 324.403 257.576 305.096 cv
254.91 305.096 li
255.479 325.904 272.507 342.603 293.453 342.603 cv
293.512 342.603 293.57 342.599 293.628 342.599 cv
293.628 339.934 li
cp
f
324.024 304.473 mo
323.784 321.131 310.167 334.609 293.453 334.609 cv
276.949 334.609 263.473 321.464 262.906 305.096 cv
260.241 305.096 li
260.809 322.934 275.48 337.274 293.453 337.274 cv
311.636 337.274 326.448 322.6 326.689 304.473 cv
324.024 304.473 li
cp
f
293.589 278.776 mo
307.451 278.85 318.707 290.147 318.707 304.027 cv
318.707 317.952 307.378 329.28 293.453 329.28 cv
279.887 329.28 268.801 318.525 268.237 305.096 cv
265.572 305.096 li
266.137 319.995 278.418 331.945 293.453 331.945 cv
308.847 331.945 321.371 319.421 321.371 304.027 cv
321.371 288.678 308.92 276.186 293.589 276.112 cv
293.589 278.776 li
cp
f
280.624 288.805 mo
284.093 285.876 288.568 284.102 293.453 284.102 cv
304.439 284.102 313.377 293.04 313.377 304.027 cv
313.377 315.013 304.439 323.951 293.453 323.951 cv
282.826 323.951 274.128 315.586 273.569 305.096 cv
270.903 305.096 li
271.465 317.055 281.357 326.616 293.453 326.616 cv
305.909 326.616 316.042 316.482 316.042 304.027 cv
316.042 291.571 305.909 281.438 293.453 281.438 cv
287.833 281.438 282.689 283.504 278.732 286.913 cv
280.624 288.805 li
cp
f
295.613 341.22 mo
295.613 342.542 294.537 343.617 293.215 343.617 cv
291.894 343.617 290.818 342.542 290.818 341.22 cv
290.818 339.898 291.894 338.822 293.215 338.822 cv
294.537 338.822 295.613 339.898 295.613 341.22 cv
cp
f
327.789 304.723 mo
327.789 306.045 326.714 307.121 325.392 307.121 cv
324.07 307.121 322.995 306.045 322.995 304.723 cv
322.995 303.401 324.07 302.326 325.392 302.326 cv
326.714 302.326 327.789 303.401 327.789 304.723 cv
cp
f
295.911 277.314 mo
295.911 278.636 294.835 279.711 293.513 279.711 cv
292.191 279.711 291.116 278.636 291.116 277.314 cv
291.116 275.992 292.191 274.917 293.513 274.917 cv
294.835 274.917 295.911 275.992 295.911 277.314 cv
cp
f
281.878 288.171 mo
281.878 289.493 280.802 290.568 279.48 290.568 cv
278.158 290.568 277.083 289.493 277.083 288.171 cv
277.083 286.849 278.158 285.774 279.48 285.774 cv
280.802 285.774 281.878 286.849 281.878 288.171 cv
cp
f
230.724 307.119 mo
225.366 307.119 220.487 305.043 216.84 301.656 cv
240.225 301.657 li
242.586 301.657 244.5 299.742 244.5 297.381 cv
244.5 276.005 li
244.5 273.644 242.586 271.729 240.225 271.729 cv
216.839 271.729 li
220.487 268.343 225.366 266.266 230.724 266.266 cv
241.987 266.266 251.151 275.43 251.151 286.693 cv
251.151 297.956 241.987 307.119 230.724 307.119 cv
cp
173.245 300.122 mo
171.734 300.122 170.505 298.893 170.505 297.381 cv
170.505 276.005 li
170.505 274.494 171.734 273.264 173.245 273.264 cv
240.225 273.264 li
241.736 273.264 242.965 274.494 242.965 276.005 cv
242.965 297.381 li
242.965 298.893 241.736 300.122 240.225 300.122 cv
173.245 300.122 li
cp
230.724 264.841 mo
224.448 264.841 218.793 267.492 214.808 271.729 cv
173.245 271.729 li
170.884 271.729 168.97 273.644 168.97 276.005 cv
168.97 297.381 li
168.97 299.742 170.884 301.656 173.245 301.656 cv
214.808 301.656 li
218.793 305.894 224.448 308.545 230.724 308.545 cv
242.792 308.545 252.576 298.761 252.576 286.693 cv
252.576 274.625 242.792 264.841 230.724 264.841 cv
cp
f
174.641 269.2 mo
174.641 269.941 174.04 270.543 173.298 270.543 cv
172.557 270.543 171.955 269.941 171.955 269.2 cv
171.955 268.458 172.557 267.857 173.298 267.857 cv
174.04 267.857 174.641 268.458 174.641 269.2 cv
cp
f
178.286 269.2 mo
178.286 269.941 177.685 270.543 176.943 270.543 cv
176.201 270.543 175.6 269.941 175.6 269.2 cv
175.6 268.458 176.201 267.857 176.943 267.857 cv
177.685 267.857 178.286 268.458 178.286 269.2 cv
cp
f
181.931 269.2 mo
181.931 269.941 181.329 270.543 180.588 270.543 cv
179.846 270.543 179.245 269.941 179.245 269.2 cv
179.245 268.458 179.846 267.857 180.588 267.857 cv
181.329 267.857 181.931 268.458 181.931 269.2 cv
cp
f
185.576 269.2 mo
185.576 269.941 184.974 270.543 184.233 270.543 cv
183.491 270.543 182.89 269.941 182.89 269.2 cv
182.89 268.458 183.491 267.857 184.233 267.857 cv
184.974 267.857 185.576 268.458 185.576 269.2 cv
cp
f
189.22 269.2 mo
189.22 269.941 188.619 270.543 187.878 270.543 cv
187.136 270.543 186.535 269.941 186.535 269.2 cv
186.535 268.458 187.136 267.857 187.878 267.857 cv
188.619 267.857 189.22 268.458 189.22 269.2 cv
cp
f
192.865 269.2 mo
192.865 269.941 192.264 270.543 191.522 270.543 cv
190.781 270.543 190.18 269.941 190.18 269.2 cv
190.18 268.458 190.781 267.857 191.522 267.857 cv
192.264 267.857 192.865 268.458 192.865 269.2 cv
cp
f
185.32 276.877 mo
173.554 276.877 li
173.554 274.955 li
185.32 274.955 li
185.32 276.877 li
cp
f
197.853 280.001 mo
173.554 280.001 li
173.554 278.078 li
197.853 278.078 li
197.853 280.001 li
cp
f
212.177 283.124 mo
173.554 283.124 li
173.554 281.202 li
212.177 281.202 li
212.177 283.124 li
cp
f
239.289 286.248 mo
173.554 286.248 li
173.554 284.326 li
239.289 284.326 li
239.289 286.248 li
cp
f
204.247 289.371 mo
173.554 289.371 li
173.554 287.449 li
204.247 287.449 li
204.247 289.371 li
cp
f
192.737 292.495 mo
173.554 292.495 li
173.554 290.573 li
192.737 290.573 li
192.737 292.495 li
cp
f
181.739 295.619 mo
173.554 295.619 li
173.554 293.696 li
181.739 293.696 li
181.739 295.619 li
cp
f
209.619 298.742 mo
173.554 298.742 li
173.554 296.82 li
209.619 296.82 li
209.619 298.742 li
cp
f
45.2952 70.4196 mo
30.639 70.4196 18.7153 58.4958 18.7153 43.8396 cv
18.7153 29.1833 30.639 17.2596 45.2952 17.2596 cv
59.9515 17.2596 71.8752 29.1833 71.8752 43.8396 cv
71.8752 58.4958 59.9515 70.4196 45.2952 70.4196 cv
cp
76.4541 44.9832 mo
73.5751 44.9832 li
73.5902 44.6033 73.604 44.2231 73.604 43.8396 cv
73.604 28.2051 60.9298 15.5308 45.2952 15.5308 cv
44.9116 15.5308 44.5313 15.5446 44.1513 15.5597 cv
44.1513 12.6804 li
38.3157 12.8922 32.8869 14.7184 28.2913 17.7184 cv
28.8474 18.4974 29.3957 19.2791 29.9412 20.0618 cv
25.4336 22.9786 21.8103 27.1393 19.5543 32.0614 cv
18.7041 31.6226 17.8523 31.1868 16.9995 30.7532 cv
15.1477 34.7344 14.1069 39.1658 14.1069 43.8395 cv
14.1069 51.5263 16.9082 58.5659 21.5362 64.0066 cv
23.5647 61.9781 li
28.7576 68.1926 36.5634 72.1483 45.2952 72.1483 cv
45.7923 72.1483 46.2863 72.1349 46.777 72.1096 cv
46.777 74.9908 li
49.9213 74.8429 52.9421 74.2218 55.7766 73.2053 cv
55.476 72.2979 55.1655 71.3936 54.8505 70.4909 cv
61.4916 68.1095 66.9825 63.3183 70.2711 57.1696 cv
71.0159 57.7775 71.758 58.3886 72.5 59 cv
74.846 54.8231 76.2697 50.0636 76.4541 44.9832 cv
cp
f
131.307 18.6278 mo
128.329 17.0955 125.046 16.0732 121.574 15.6837 cv
121.574 17.4261 li
124.769 17.8083 127.789 18.7631 130.535 20.1778 cv
130.791 19.6606 131.053 19.1463 131.307 18.6278 cv
cp
f
144.901 41.8681 mo
146.636 41.8681 li
146.07 33.5655 141.914 26.235 135.705 21.4262 cv
135.444 21.9548 135.177 22.4797 134.914 23.0071 cv
140.566 27.5002 144.347 34.2422 144.901 41.8681 cv
cp
f
92.0279 46.9915 mo
91.4496 46.9742 90.8709 46.9655 90.2921 46.9602 cv
91.4458 57.3044 98.1744 65.9849 107.417 69.8908 cv
107.632 69.3565 107.847 68.822 108.063 68.2877 cv
99.4639 64.6433 93.1814 56.5968 92.0279 46.9915 cv
cp
f
99.1806 23.0805 mo
95.2351 26.741 92.3186 31.4957 90.9581 36.8734 cv
91.5214 37.0011 92.0843 37.1314 92.6466 37.2647 cv
93.9308 32.215 96.6764 27.7521 100.388 24.3188 cv
99.9874 23.9039 99.5904 23.4858 99.1806 23.0805 cv
cp
f
103.321 19.8863 mo
103.733 20.3019 104.147 20.7159 104.551 21.1404 cv
108.049 18.9954 112.079 17.637 116.394 17.3132 cv
116.394 15.58 li
111.61 15.9167 107.159 17.4588 103.321 19.8863 cv
cp
f
138.103 61.616 mo
133.449 66.7639 126.816 70.0823 119.414 70.3623 cv
119.414 72.0912 li
127.293 71.8115 134.36 68.3012 139.327 62.8405 cv
138.103 61.616 li
cp
f
97.2504 52.8333 mo
96.0562 50.0548 95.3834 47.0015 95.3834 43.7904 cv
95.3834 37.9728 97.558 32.6566 101.133 28.6025 cv
100.822 28.282 100.512 27.9621 100.203 27.6405 cv
100.111 27.5453 100.019 27.4509 99.9267 27.356 cv
96.0292 31.7283 93.6547 37.4862 93.6547 43.7904 cv
93.6547 47.2603 94.3791 50.5623 95.675 53.5621 cv
96.1979 53.315 96.7237 53.0731 97.2504 52.8333 cv
cp
f
141.273 45.8459 mo
141.843 45.9406 142.411 46.0445 142.978 46.1581 cv
143.057 45.3778 143.115 44.5914 143.115 43.7904 cv
143.115 37.8525 141.005 32.4023 137.504 28.1356 cv
137.063 28.5027 136.62 28.8679 136.179 29.2343 cv
139.432 33.2011 141.386 38.2712 141.386 43.7904 cv
141.386 44.4852 141.338 45.168 141.273 45.8459 cv
cp
f
137.963 55.8173 mo
133.91 62.3909 126.658 66.7917 118.385 66.7917 cv
112.943 66.7917 107.945 64.8838 104.005 61.7109 cv
103.612 62.1331 103.218 62.5553 102.827 62.9801 cv
107.078 66.4386 112.49 68.5205 118.385 68.5205 cv
127.309 68.5205 135.129 63.7587 139.478 56.6525 cv
138.979 56.3628 138.475 56.0836 137.963 55.8173 cv
cp
f
217.513 43.3973 mo
217.513 58.0535 205.589 69.9773 190.933 69.9773 cv
176.276 69.9773 164.353 58.0535 164.353 43.3973 cv
164.353 28.7411 176.276 16.8173 190.933 16.8173 cv
205.589 16.8173 217.513 28.7411 217.513 43.3973 cv
cp
225.777 49.7813 mo
226.049 48.2439 li
219.004 47.0017 li
219.042 46.7009 219.081 46.4001 219.11 46.0963 cv
221.45 46.3012 li
221.483 45.7816 221.521 45.2626 221.562 44.7437 cv
219.212 44.5382 li
219.224 44.2355 219.233 43.9319 219.236 43.6269 cv
223.311 43.6269 li
223.303 43.1065 223.301 42.5861 223.294 42.0657 cv
219.208 42.0657 li
219.193 41.7606 219.168 41.4586 219.144 41.1561 cv
221.169 40.979 li
221.072 40.4652 220.977 39.9512 220.884 39.4368 cv
218.98 39.6033 li
218.939 39.3014 218.895 39.0007 218.845 38.7018 cv
222.582 38.0429 li
222.469 37.5342 222.366 37.0239 222.271 36.5124 cv
218.543 37.1697 li
218.476 36.8728 218.411 36.5752 218.335 36.2819 cv
223.68 34.8497 li
223.536 34.3495 223.392 33.8494 223.245 33.3499 cv
217.897 34.7829 li
217.804 34.4929 217.706 34.2052 217.604 33.9193 cv
224.293 31.4849 li
223.759 30.0179 li
217.042 32.4624 li
216.924 32.1817 216.797 31.9063 216.67 31.6302 cv
219.225 30.4388 li
218.965 29.9857 218.706 29.5328 218.451 29.0769 cv
215.981 30.2289 li
215.839 29.96 215.691 29.6947 215.541 29.431 cv
220.021 26.8447 li
219.765 26.3916 219.502 25.9421 219.24 25.4925 cv
214.731 28.0961 li
214.566 27.8408 214.4 27.5871 214.227 27.3376 cv
220.07 23.2467 li
219.174 21.9679 li
213.303 26.0792 li
213.117 25.8394 212.932 25.5986 212.738 25.365 cv
214.573 23.8251 li
214.248 23.4183 213.914 23.0187 213.574 22.6256 cv
211.707 24.1926 li
211.501 23.9699 211.292 23.7501 211.079 23.5341 cv
213.263 21.3499 li
212.885 20.9919 212.507 20.6338 212.133 20.2714 cv
209.955 22.4497 li
209.731 22.2457 209.498 22.0506 209.267 21.8538 cv
210.681 20.1686 li
210.242 19.8795 209.8 19.5962 209.349 19.3277 cv
208.053 20.872 li
207.812 20.6882 207.566 20.511 207.319 20.3349 cv
210.078 16.3936 li
209.632 16.1216 209.176 15.8661 208.715 15.6187 cv
206.023 19.4636 li
205.767 19.3015 205.508 19.143 205.247 18.989 cv
208.103 14.0414 li
207.676 13.7441 207.239 13.4562 206.791 13.1925 cv
203.879 18.2354 li
203.61 18.0963 203.341 17.9569 203.067 17.8263 cv
204.229 15.333 li
203.785 15.0567 203.337 14.787 202.883 14.5256 cv
201.637 17.1967 li
201.357 17.0817 201.076 16.9685 200.791 16.8624 cv
202.517 12.1214 li
202.022 11.9594 201.524 11.8042 201.027 11.6505 cv
199.314 16.3556 li
199.025 16.2658 198.731 16.187 198.439 16.1064 cv
199.857 10.8137 li
199.346 10.7086 198.837 10.5974 198.327 10.4926 cv
196.923 15.7322 li
196.627 15.6683 196.329 15.6117 196.03 15.5571 cv
196.502 12.8804 li
195.991 12.7808 195.482 12.6742 194.973 12.56 cv
194.487 15.3196 li
194.187 15.2818 193.886 15.245 193.583 15.2167 cv
194.048 9.9025 li
193.529 9.85729 193.008 9.83329 192.487 9.8336 cv
192.025 15.1163 li
191.723 15.1047 191.421 15.0952 191.116 15.0932 cv
191.116 12.2741 li
190.597 12.2551 190.076 12.2531 189.555 12.2601 cv
189.555 15.1235 li
189.251 15.1381 188.95 15.1644 188.649 15.1887 cv
188.166 9.66784 li
187.652 9.76248 187.137 9.85655 186.624 9.955 cv
187.096 15.3555 li
186.795 15.3965 186.496 15.4417 186.198 15.4921 cv
185.423 11.093 li
184.905 11.1531 184.388 11.2187 183.872 11.2906 cv
184.667 15.7961 li
184.371 15.8632 184.075 15.9287 183.783 16.005 cv
182.14 9.87264 li
181.635 10.0017 181.134 10.1436 180.635 10.288 cv
182.284 16.4445 li
181.996 16.5373 181.709 16.6343 181.424 16.7361 cv
180.089 13.0679 li
179.607 13.2656 179.126 13.4637 178.64 13.6518 cv
179.968 17.2993 li
179.689 17.4171 179.415 17.5452 179.14 17.6716 cv
177.023 13.1314 li
176.56 13.3678 176.089 13.5894 175.612 13.7996 cv
177.74 18.3617 li
177.472 18.5033 177.208 18.6506 176.946 18.8003 cv
173.356 12.5818 li
172.004 13.3624 li
175.612 19.6115 li
175.358 19.7756 175.106 19.9416 174.858 20.1135 cv
173.437 18.0849 li
173.012 18.3848 172.577 18.6705 172.146 18.9629 cv
173.6 21.039 li
173.361 21.2242 173.122 21.4083 172.89 21.6009 cv
170.067 18.2374 li
169.677 18.5824 169.292 18.933 168.909 19.2854 cv
171.718 22.6331 li
171.496 22.8381 171.277 23.0458 171.063 23.2577 cv
169.625 21.8199 li
169.259 22.1901 168.897 22.5636 168.534 22.937 cv
169.979 24.3819 li
169.776 24.6052 169.582 24.8363 169.386 25.066 cv
165.37 21.6965 li
165.086 22.1337 164.786 22.5608 164.469 22.9784 cv
168.404 26.2803 li
168.222 26.5202 168.046 26.765 167.87 27.0108 cv
166.911 26.3387 li
166.621 26.7713 166.325 27.1992 166.025 27.6241 cv
166.999 28.3066 li
166.838 28.5613 166.68 28.8182 166.527 29.0784 cv
163.985 27.6108 li
163.721 28.0595 163.471 28.5161 163.212 28.9675 cv
165.773 30.4459 li
165.635 30.7137 165.496 30.9813 165.366 31.2541 cv
161.099 29.2644 li
160.899 29.7442 160.685 30.2188 160.457 30.6876 cv
164.736 32.6829 li
164.621 32.9617 164.509 33.2417 164.403 33.5249 cv
159.047 31.5755 li
158.892 32.0717 158.721 32.5635 158.543 33.0532 cv
163.895 35.0013 li
163.806 35.2888 163.728 35.5811 163.647 35.8724 cv
156.698 34.0103 li
156.294 35.5183 li
163.272 37.3881 li
163.208 37.6823 163.151 37.9787 163.097 38.2761 cv
158.504 37.4663 li
158.492 37.9923 158.471 38.5172 158.448 39.0417 cv
162.858 39.8193 li
162.82 40.118 162.783 40.4167 162.754 40.7182 cv
160.919 40.5576 li
160.869 41.0758 160.814 41.5934 160.753 42.1102 cv
162.652 42.2763 li
162.64 42.5769 162.632 42.878 162.629 43.1809 cv
158.502 43.1809 li
158.496 43.7014 158.496 44.2217 158.493 44.742 cv
162.658 44.742 li
162.672 45.0448 162.697 45.3445 162.721 45.6447 cv
157.465 46.1046 li
157.55 46.6196 157.635 47.1345 157.719 47.6496 cv
162.886 47.1975 li
162.927 47.4971 162.971 47.7955 163.02 48.0922 cv
161.51 48.3585 li
161.618 48.8678 161.727 49.377 161.832 49.887 cv
163.322 49.6242 li
163.389 49.9188 163.453 50.2143 163.528 50.5054 cv
160.911 51.2068 li
161.068 51.7036 161.232 52.1985 161.401 52.6918 cv
163.966 52.0045 li
164.058 52.2924 164.156 52.5777 164.256 52.8616 cv
160.204 54.3368 li
160.372 54.8294 160.532 55.3247 160.704 55.8161 cv
164.818 54.3188 li
164.935 54.5974 165.061 54.871 165.187 55.1451 cv
159.506 57.794 li
159.711 58.273 159.91 58.7545 160.098 59.2403 cv
165.875 56.5468 li
166.015 56.8139 166.161 57.0776 166.31 57.3395 cv
160.071 60.9414 li
160.852 62.2935 li
167.119 58.6751 li
167.282 58.9287 167.447 59.1812 167.618 59.4291 cv
164.437 61.6568 li
164.718 62.0949 165.001 62.5327 165.282 62.9704 cv
168.541 60.6885 li
168.726 60.9269 168.909 61.1668 169.101 61.3991 cv
165.077 64.7749 li
165.407 65.1785 165.747 65.5722 166.101 65.9543 cv
170.131 62.5727 li
170.335 62.7943 170.543 63.0121 170.755 63.2271 cv
165.661 68.3212 li
166.765 69.4252 li
171.877 64.3131 li
172.099 64.5162 172.33 64.711 172.559 64.9071 cv
169.22 68.8862 li
169.634 69.2029 170.049 69.517 170.465 69.8317 cv
173.772 65.8907 li
174.011 66.0739 174.255 66.2512 174.5 66.4268 cv
172.943 68.6502 li
173.401 68.9037 173.859 69.1575 174.316 69.412 cv
175.794 67.3003 li
176.049 67.4621 176.305 67.6212 176.565 67.775 cv
174.895 70.6673 li
175.333 70.9505 175.767 71.2383 176.209 71.5147 cv
177.931 68.5312 li
178.199 68.6703 178.466 68.8106 178.739 68.9413 cv
176.884 72.9185 li
177.348 73.156 177.808 73.4014 178.267 73.6482 cv
180.167 69.5738 li
180.446 69.689 180.726 69.8004 181.01 69.9068 cv
178.981 75.4819 li
179.473 75.654 179.963 75.8278 180.45 76.0092 cv
182.485 70.4181 li
182.773 70.5083 183.065 70.5872 183.357 70.6684 cv
181.5 77.5993 li
183.008 78.0034 li
184.872 71.0461 li
185.167 71.1106 185.463 71.1689 185.761 71.2242 cv
185.423 73.1423 li
185.938 73.2215 186.45 73.3094 186.961 73.4091 cv
187.304 71.4656 li
187.604 71.5041 187.903 71.543 188.205 71.5721 cv
187.889 75.185 li
188.405 75.2634 188.922 75.3263 189.439 75.3777 cv
189.763 71.6764 li
190.064 71.6887 190.367 71.6966 190.67 71.6994 cv
190.67 76.9467 li
191.193 76.9682 191.714 77.0005 192.232 77.0409 cv
192.232 71.6731 li
192.535 71.6593 192.836 71.6353 193.137 71.6119 cv
193.375 74.3254 li
193.892 74.2592 194.408 74.187 194.923 74.1134 cv
194.69 71.4491 li
194.991 71.409 195.291 71.366 195.589 71.3165 cv
196.334 75.541 li
196.842 75.4347 197.354 75.343 197.87 75.2616 cv
197.121 71.0165 li
197.417 70.9502 197.714 70.8868 198.006 70.8113 cv
199.547 76.5617 li
200.034 76.3692 200.524 76.1846 201.017 76.0165 cv
199.506 70.3755 li
199.795 70.2834 200.081 70.1848 200.367 70.0836 cv
201.218 72.423 li
201.675 72.1628 202.139 71.9154 202.611 71.6854 cv
201.824 69.524 li
202.104 69.4069 202.38 69.2806 202.655 69.1547 cv
204.47 73.0477 li
204.942 72.8275 205.417 72.6157 205.897 72.4124 cv
204.057 68.4678 li
204.326 68.3267 204.591 68.1809 204.855 68.0315 cv
207.711 72.9786 li
208.159 72.7136 208.608 72.4503 209.056 72.1867 cv
206.191 67.2234 li
206.446 67.0594 206.7 66.8945 206.949 66.7227 cv
211.051 72.5802 li
212.329 71.6847 li
208.209 65.8 li
208.449 65.6147 208.69 65.431 208.923 65.2383 cv
211.413 68.2056 li
211.795 67.8455 212.16 67.4707 212.506 67.0792 cv
210.098 64.209 li
210.321 64.0036 210.54 63.794 210.756 63.5816 cv
214.319 67.1447 li
214.709 66.7985 215.116 66.4697 215.513 66.1311 cv
211.842 62.46 li
212.046 62.236 212.242 62.0047 212.439 61.7743 cv
214.578 63.569 li
214.927 63.1822 215.281 62.7998 215.636 62.4187 cv
213.423 60.5618 li
213.607 60.3211 213.786 60.076 213.962 59.8293 cv
219.814 63.9264 li
220.709 62.6476 li
214.836 58.535 li
214.999 58.2791 215.158 58.0215 215.313 57.7601 cv
220.084 60.5146 li
220.395 60.0931 220.705 59.6713 221.014 59.2491 cv
216.069 56.3938 li
216.209 56.1246 216.35 55.8559 216.481 55.5816 cv
219.2 56.8494 li
219.484 56.4093 219.753 55.9592 220.026 55.5123 cv
217.113 54.1537 li
217.229 53.8732 217.341 53.5911 217.448 53.3062 cv
224.14 55.742 li
224.674 54.275 li
217.958 51.8306 li
218.049 51.5413 218.128 51.2472 218.209 50.954 cv
223.476 52.3652 li
223.629 51.8688 223.76 51.3649 223.879 50.857 cv
218.586 49.4387 li
218.65 49.1425 218.709 48.8442 218.764 48.5446 cv
225.777 49.7813 li
cp
f
282.12 29.7725 mo
282.605 29.4592 283.092 29.1509 283.58 28.8433 cv
279.514 22.201 272.797 17.3499 264.901 15.797 cv
264.719 16.3512 264.54 16.9053 264.366 17.4591 cv
271.877 18.8765 278.269 23.4673 282.12 29.7725 cv
cp
f
281.133 58.8824 mo
281.526 59.3251 281.917 59.7685 282.303 60.2173 cv
285.717 55.5406 287.739 49.786 287.739 43.5655 cv
287.739 42.291 287.645 41.039 287.478 39.8097 cv
286.909 39.901 286.34 39.9946 285.769 40.0693 cv
285.924 41.2137 286.01 42.3791 286.01 43.5655 cv
286.01 49.2664 284.2 54.5493 281.133 58.8824 cv
cp
f
245.628 20.8813 mo
248.215 19.3018 251.09 18.1505 254.158 17.5305 cv
254.006 16.972 253.857 16.413 253.707 15.8541 cv
250.46 16.5233 247.42 17.7562 244.683 19.4371 cv
244.997 19.9192 245.309 20.4027 245.628 20.8813 cv
cp
f
235.393 28.6384 mo
232.688 32.9734 231.121 38.0882 231.121 43.5655 cv
231.121 43.5725 231.122 43.5795 231.122 43.5866 cv
231.701 43.402 232.281 43.2249 232.862 43.0471 cv
232.959 38.0153 234.465 33.3262 236.995 29.3502 cv
236.465 29.1068 235.931 28.8688 235.393 28.6384 cv
cp
f
232.963 53.5813 mo
234.408 57.3778 236.642 60.7878 239.473 63.604 cv
239.867 63.1827 240.259 62.7596 240.652 62.3367 cv
238.052 59.739 235.989 56.6072 234.637 53.1236 cv
234.077 53.2673 233.521 53.4264 232.963 53.5813 cv
cp
f
276.173 64.1773 mo
271.599 67.9017 265.775 70.1454 259.43 70.1454 cv
256.626 70.1454 253.923 69.7058 251.383 68.8971 cv
251.188 69.439 250.995 69.9816 250.805 70.526 cv
253.526 71.3986 256.423 71.8742 259.43 71.8742 cv
266.163 71.8742 272.347 69.5019 277.21 65.5609 cv
276.869 65.0955 276.524 64.6341 276.173 64.1773 cv
cp
f
259.668 67.2454 mo
246.76 67.2454 236.258 56.7439 236.258 43.8358 cv
236.258 30.9277 246.76 20.4261 259.668 20.4261 cv
266.009 20.4262 271.763 22.9639 275.978 27.0741 cv
276.305 26.6836 276.635 26.2962 276.966 25.9091 cv
272.482 21.5752 266.384 18.9035 259.668 18.9035 cv
245.92 18.9035 234.736 30.0879 234.736 43.8357 cv
234.736 57.5836 245.92 68.768 259.668 68.768 cv
271.767 68.768 281.873 60.1027 284.124 48.6539 cv
283.636 48.4933 283.148 48.3365 282.661 48.1831 cv
280.615 59.0193 271.09 67.2454 259.668 67.2454 cv
cp
f
239.57 42.4833 mo
239.913 37.8499 241.837 33.3129 245.372 29.7776 cv
246.809 28.3407 248.418 27.189 250.127 26.288 cv
249.95 25.8894 249.763 25.4949 249.584 25.0974 cv
247.736 26.0619 245.999 27.3032 244.448 28.8538 cv
240.651 32.6509 238.603 37.5327 238.263 42.5107 cv
238.698 42.5005 239.134 42.4921 239.57 42.4833 cv
cp
f
270.887 60.5671 mo
263.324 65.7285 253.004 65.1386 246.065 58.8164 cv
245.743 59.1122 245.412 59.3986 245.086 59.6894 cv
252.435 66.472 263.41 67.1644 271.489 61.7409 cv
271.29 61.3473 271.089 60.9561 270.887 60.5671 cv
cp
f
274.701 28.8538 mo
271.108 25.2607 266.543 23.2243 261.845 22.7285 cv
261.845 24.0472 li
266.207 24.538 270.439 26.4394 273.777 29.7776 cv
277.624 33.6247 279.575 38.655 279.639 43.7062 cv
280.074 43.6675 280.51 43.6329 280.945 43.5989 cv
280.854 38.2492 278.775 32.9282 274.701 28.8538 cv
cp
f
268.886 28.691 mo
268.725 29.0229 268.565 29.3554 268.404 29.6875 cv
272.739 32.4923 275.717 37.2145 276.095 42.6589 cv
277.192 42.6589 li
276.809 36.7804 273.584 31.6824 268.886 28.691 cv
cp
f
275.646 47.8388 mo
274.41 52.8947 270.893 57.0547 266.255 59.1801 cv
266.353 59.5403 266.449 59.9008 266.546 60.2612 cv
271.65 57.985 275.507 53.4027 276.779 47.8388 cv
275.646 47.8388 li
cp
f
252.358 59.2256 mo
247.468 57.027 243.807 52.5723 242.718 47.1853 cv
242.363 47.2816 242.008 47.3766 241.653 47.4715 cv
242.832 53.1926 246.738 57.9185 251.945 60.2455 cv
252.083 59.9056 252.219 59.5652 252.358 59.2256 cv
cp
f
254.677 26.4731 mo
248.077 28.2141 242.946 33.6023 241.617 40.36 cv
241.969 40.4758 242.321 40.589 242.673 40.6997 cv
243.884 34.2829 248.738 29.1565 254.994 27.5213 cv
254.889 27.1719 254.783 26.8226 254.677 26.4731 cv
cp
f
327.722 70.4126 mo
313.066 70.4126 301.142 58.4888 301.142 43.8326 cv
301.142 29.1764 313.066 17.2526 327.722 17.2526 cv
342.379 17.2526 354.302 29.1764 354.302 43.8326 cv
354.302 58.4888 342.379 70.4126 327.722 70.4126 cv
cp
327.722 15.5238 mo
312.112 15.5238 299.413 28.2229 299.413 43.8326 cv
299.413 59.4423 312.112 72.1414 327.722 72.1414 cv
343.332 72.1414 356.031 59.4423 356.031 43.8326 cv
356.031 28.2229 343.332 15.5238 327.722 15.5238 cv
cp
f
328.761 13.4479 mo
328.761 12.8812 328.301 12.4218 327.735 12.4218 cv
327.168 12.4218 326.709 12.8812 326.709 13.4479 cv
326.709 14.0146 327.168 14.474 327.735 14.474 cv
328.301 14.474 328.761 14.0146 328.761 13.4479 cv
cp
f
325.57 13.5076 mo
325.511 12.944 325.006 12.5351 324.442 12.5943 cv
323.879 12.6536 323.47 13.1585 323.529 13.7221 cv
323.588 14.2857 324.093 14.6945 324.657 14.6353 cv
325.22 14.5761 325.629 14.0712 325.57 13.5076 cv
cp
f
322.403 13.9004 mo
322.285 13.3461 321.74 12.9922 321.186 13.1101 cv
320.632 13.2279 320.278 13.7728 320.396 14.3271 cv
320.513 14.8814 321.058 15.2353 321.613 15.1174 cv
322.167 14.9996 322.521 14.4547 322.403 13.9004 cv
cp
f
319.294 14.6222 mo
319.119 14.0832 318.54 13.7882 318.001 13.9634 cv
317.462 14.1385 317.168 14.7174 317.343 15.2563 cv
317.518 15.7953 318.097 16.0903 318.636 15.9151 cv
319.175 15.74 319.47 15.1611 319.294 14.6222 cv
cp
f
310.654 18.6642 mo
310.321 18.2057 309.68 18.1041 309.221 18.4372 cv
308.763 18.7703 308.661 19.412 308.994 19.8705 cv
309.327 20.329 309.969 20.4306 310.427 20.0975 cv
310.886 19.7644 310.987 19.1227 310.654 18.6642 cv
cp
f
305.777 22.7673 mo
305.356 22.3881 304.707 22.4221 304.328 22.8433 cv
303.948 23.2644 303.982 23.9132 304.404 24.2924 cv
304.825 24.6716 305.474 24.6376 305.853 24.2165 cv
306.232 23.7953 306.198 23.1465 305.777 22.7673 cv
cp
f
303.686 25.1784 mo
303.228 24.8453 302.586 24.9469 302.253 25.4054 cv
301.92 25.8639 302.021 26.5056 302.48 26.8387 cv
302.938 27.1718 303.58 27.0702 303.913 26.6117 cv
304.246 26.1532 304.145 25.5115 303.686 25.1784 cv
cp
f
301.859 27.7948 mo
301.368 27.5115 300.741 27.6796 300.457 28.1704 cv
300.174 28.6612 300.342 29.2887 300.833 29.5721 cv
301.324 29.8555 301.951 29.6873 302.235 29.1965 cv
302.518 28.7057 302.35 28.0782 301.859 27.7948 cv
cp
f
300.315 30.5879 mo
299.798 30.3574 299.191 30.5902 298.96 31.1079 cv
298.73 31.6257 298.963 32.2322 299.481 32.4627 cv
299.998 32.6932 300.605 32.4604 300.835 31.9427 cv
301.066 31.4249 300.833 30.8184 300.315 30.5879 cv
cp
f
299.072 33.527 mo
298.533 33.3519 297.954 33.6469 297.779 34.1858 cv
297.604 34.7248 297.899 35.3037 298.438 35.4788 cv
298.977 35.6539 299.556 35.359 299.731 34.82 cv
299.906 34.281 299.611 33.7022 299.072 33.527 cv
cp
f
298.143 36.58 mo
297.588 36.4622 297.044 36.8161 296.926 37.3704 cv
296.808 37.9247 297.162 38.4696 297.716 38.5874 cv
298.27 38.7052 298.815 38.3514 298.933 37.7971 cv
299.051 37.2427 298.697 36.6979 298.143 36.58 cv
cp
f
297.716 49.2506 mo
297.162 49.3685 296.808 49.9134 296.926 50.4677 cv
297.044 51.022 297.588 51.3759 298.143 51.258 cv
298.697 51.1402 299.051 50.5953 298.933 50.041 cv
298.815 49.4867 298.27 49.1328 297.716 49.2506 cv
cp
f
298.438 52.3592 mo
297.899 52.5344 297.604 53.1132 297.779 53.6522 cv
297.954 54.1912 298.533 54.4861 299.072 54.311 cv
299.611 54.1359 299.906 53.557 299.731 53.018 cv
299.556 52.4791 298.977 52.1841 298.438 52.3592 cv
cp
f
299.481 55.3754 mo
298.963 55.6059 298.73 56.2124 298.96 56.7301 cv
299.191 57.2478 299.798 57.4807 300.315 57.2502 cv
300.833 57.0197 301.066 56.4131 300.835 55.8954 cv
300.605 55.3777 299.998 55.1449 299.481 55.3754 cv
cp
f
300.833 58.266 mo
300.342 58.5493 300.174 59.1769 300.457 59.6677 cv
300.741 60.1584 301.368 60.3266 301.859 60.0432 cv
302.35 59.7599 302.518 59.1323 302.235 58.6415 cv
301.951 58.1508 301.324 57.9826 300.833 58.266 cv
cp
f
306.583 65.8769 mo
306.204 66.298 306.238 66.9469 306.659 67.326 cv
307.08 67.7053 307.729 67.6712 308.108 67.2501 cv
308.487 66.829 308.453 66.1802 308.032 65.8009 cv
307.611 65.4217 306.962 65.4557 306.583 65.8769 cv
cp
f
308.994 67.9676 mo
308.661 68.426 308.763 69.0677 309.221 69.4008 cv
309.68 69.7339 310.321 69.6323 310.654 69.1738 cv
310.987 68.7154 310.886 68.0737 310.427 67.7406 cv
309.969 67.4075 309.327 67.5091 308.994 67.9676 cv
cp
f
311.61 69.7948 mo
311.327 70.2855 311.495 70.9131 311.986 71.1964 cv
312.477 71.4798 313.104 71.3117 313.388 70.8209 cv
313.671 70.3301 313.503 69.7025 313.012 69.4192 cv
312.521 69.1358 311.894 69.304 311.61 69.7948 cv
cp
f
314.404 71.3384 mo
314.173 71.8562 314.406 72.4627 314.924 72.6932 cv
315.441 72.9237 316.048 72.6909 316.278 72.1732 cv
316.509 71.6554 316.276 71.0489 315.758 70.8184 cv
315.241 70.5879 314.634 70.8207 314.404 71.3384 cv
cp
f
323.529 74.116 mo
323.47 74.6796 323.879 75.1845 324.442 75.2437 cv
325.006 75.303 325.511 74.8941 325.57 74.3305 cv
325.629 73.7669 325.22 73.262 324.657 73.2028 cv
324.093 73.1435 323.588 73.5524 323.529 74.116 cv
cp
f
329.899 74.3305 mo
329.958 74.8941 330.463 75.303 331.027 75.2437 cv
331.591 75.1845 331.999 74.6796 331.94 74.116 cv
331.881 73.5524 331.376 73.1435 330.813 73.2028 cv
330.249 73.262 329.84 73.7669 329.899 74.3305 cv
cp
f
333.066 73.9376 mo
333.184 74.492 333.729 74.8458 334.283 74.728 cv
334.838 74.6102 335.191 74.0653 335.074 73.511 cv
334.956 72.9566 334.411 72.6028 333.857 72.7206 cv
333.302 72.8384 332.948 73.3833 333.066 73.9376 cv
cp
f
339.191 72.1732 mo
339.421 72.6909 340.028 72.9237 340.546 72.6932 cv
341.063 72.4627 341.296 71.8562 341.066 71.3384 cv
340.835 70.8207 340.229 70.5879 339.711 70.8184 cv
339.193 71.0489 338.96 71.6554 339.191 72.1732 cv
cp
f
344.815 69.1738 mo
345.148 69.6323 345.79 69.7339 346.248 69.4008 cv
346.707 69.0677 346.808 68.426 346.475 67.9676 cv
346.142 67.5091 345.5 67.4075 345.042 67.7406 cv
344.584 68.0737 344.482 68.7154 344.815 69.1738 cv
cp
f
347.361 67.2501 mo
347.74 67.6712 348.389 67.7053 348.81 67.326 cv
349.232 66.9469 349.266 66.298 348.886 65.8769 cv
348.507 65.4557 347.858 65.4217 347.437 65.8009 cv
347.016 66.1802 346.982 66.829 347.361 67.2501 cv
cp
f
349.693 65.0708 mo
350.114 65.45 350.762 65.416 351.142 64.9948 cv
351.521 64.5737 351.487 63.9249 351.066 63.5457 cv
350.645 63.1665 349.996 63.2005 349.617 63.6216 cv
349.237 64.0427 349.271 64.6916 349.693 65.0708 cv
cp
f
351.783 62.6597 mo
352.242 62.9928 352.883 62.8911 353.216 62.4327 cv
353.55 61.9742 353.448 61.3325 352.989 60.9994 cv
352.531 60.6663 351.889 60.7679 351.556 61.2264 cv
351.223 61.6849 351.325 62.3266 351.783 62.6597 cv
cp
f
355.154 57.2502 mo
355.672 57.4807 356.278 57.2478 356.509 56.7301 cv
356.739 56.2124 356.507 55.6059 355.989 55.3754 cv
355.471 55.1449 354.865 55.3777 354.634 55.8954 cv
354.404 56.4131 354.636 57.0197 355.154 57.2502 cv
cp
f
357.327 51.258 mo
357.881 51.3759 358.426 51.022 358.544 50.4677 cv
358.661 49.9134 358.308 49.3685 357.753 49.2506 cv
357.199 49.1328 356.654 49.4867 356.536 50.041 cv
356.418 50.5953 356.772 51.1402 357.327 51.258 cv
cp
f
358.146 41.7544 mo
358.71 41.6952 359.119 41.1903 359.059 40.6267 cv
359 40.0631 358.495 39.6542 357.932 39.7134 cv
357.368 39.7727 356.959 40.2776 357.018 40.8412 cv
357.078 41.4048 357.583 41.8137 358.146 41.7544 cv
cp
f
357.753 38.5874 mo
358.308 38.4696 358.661 37.9247 358.544 37.3704 cv
358.426 36.8161 357.881 36.4622 357.327 36.58 cv
356.772 36.6979 356.418 37.2427 356.536 37.7971 cv
356.654 38.3514 357.199 38.7052 357.753 38.5874 cv
cp
f
354.637 29.5721 mo
355.127 29.2887 355.295 28.6612 355.012 28.1704 cv
354.729 27.6796 354.101 27.5115 353.61 27.7948 cv
353.12 28.0782 352.951 28.7057 353.235 29.1965 cv
353.518 29.6873 354.146 29.8555 354.637 29.5721 cv
cp
f
352.989 26.8387 mo
353.448 26.5056 353.55 25.8639 353.216 25.4054 cv
352.883 24.9469 352.242 24.8453 351.783 25.1784 cv
351.325 25.5115 351.223 26.1532 351.556 26.6117 cv
351.889 27.0702 352.531 27.1718 352.989 26.8387 cv
cp
f
351.066 24.2924 mo
351.487 23.9132 351.521 23.2644 351.142 22.8433 cv
350.762 22.4221 350.114 22.3881 349.693 22.7673 cv
349.271 23.1465 349.237 23.7953 349.617 24.2165 cv
349.996 24.6376 350.645 24.6716 351.066 24.2924 cv
cp
f
348.886 21.9612 mo
349.266 21.54 349.232 20.8912 348.81 20.512 cv
348.389 20.1328 347.74 20.1668 347.361 20.588 cv
346.982 21.0091 347.016 21.6579 347.437 22.0371 cv
347.858 22.4163 348.507 22.3823 348.886 21.9612 cv
cp
f
341.066 16.4996 mo
341.296 15.9819 341.063 15.3754 340.546 15.1449 cv
340.028 14.9144 339.421 15.1472 339.191 15.6649 cv
338.96 16.1826 339.193 16.7892 339.711 17.0197 cv
340.229 17.2502 340.835 17.0173 341.066 16.4996 cv
cp
f
338.127 15.2563 mo
338.302 14.7174 338.007 14.1385 337.468 13.9634 cv
336.929 13.7882 336.35 14.0832 336.175 14.6222 cv
336 15.1611 336.295 15.74 336.834 15.9151 cv
337.373 16.0903 337.952 15.7953 338.127 15.2563 cv
cp
f
331.94 13.7221 mo
331.999 13.1585 331.591 12.6536 331.027 12.5943 cv
330.463 12.5351 329.958 12.944 329.899 13.5076 cv
329.84 14.0712 330.249 14.5761 330.813 14.6353 cv
331.376 14.6945 331.881 14.2857 331.94 13.7221 cv
cp
f
328.519 19.2455 mo
328.519 18.7883 328.149 18.4176 327.691 18.4176 cv
327.234 18.4176 326.863 18.7883 326.863 19.2455 cv
326.863 19.7028 327.234 20.0735 327.691 20.0735 cv
328.149 20.0735 328.519 19.7028 328.519 19.2455 cv
cp
f
325.945 19.2937 mo
325.897 18.8389 325.49 18.509 325.035 18.5568 cv
324.58 18.6046 324.25 19.012 324.298 19.4668 cv
324.346 19.9215 324.753 20.2515 325.208 20.2037 cv
325.663 20.1559 325.993 19.7484 325.945 19.2937 cv
cp
f
323.389 19.6107 mo
323.294 19.1634 322.855 18.8779 322.407 18.9729 cv
321.96 19.068 321.675 19.5077 321.77 19.955 cv
321.865 20.4022 322.304 20.6878 322.752 20.5927 cv
323.199 20.4976 323.484 20.058 323.389 19.6107 cv
cp
f
320.881 20.1931 mo
320.74 19.7582 320.273 19.5202 319.838 19.6615 cv
319.403 19.8028 319.165 20.2699 319.306 20.7048 cv
319.447 21.1397 319.915 21.3777 320.349 21.2364 cv
320.784 21.095 321.022 20.6279 320.881 20.1931 cv
cp
f
318.447 21.0344 mo
318.261 20.6167 317.772 20.4288 317.354 20.6148 cv
316.936 20.8008 316.749 21.2902 316.935 21.708 cv
317.121 22.1257 317.61 22.3136 318.028 22.1276 cv
318.445 21.9416 318.633 21.4522 318.447 21.0344 cv
cp
f
309.974 26.7653 mo
309.634 26.4594 309.11 26.4868 308.804 26.8266 cv
308.498 27.1664 308.526 27.69 308.866 27.9959 cv
309.206 28.3019 309.729 28.2745 310.035 27.9347 cv
310.341 27.5948 310.314 27.0713 309.974 26.7653 cv
cp
f
308.287 28.7108 mo
307.917 28.4421 307.399 28.5241 307.13 28.894 cv
306.861 29.264 306.943 29.7817 307.313 30.0505 cv
307.683 30.3193 308.201 30.2373 308.47 29.8673 cv
308.739 29.4974 308.657 28.9796 308.287 28.7108 cv
cp
f
306.812 30.822 mo
306.416 30.5934 305.91 30.7291 305.681 31.1251 cv
305.453 31.5211 305.588 32.0275 305.984 32.2561 cv
306.38 32.4847 306.887 32.3491 307.115 31.953 cv
307.344 31.557 307.208 31.0507 306.812 30.822 cv
cp
f
305.567 33.0757 mo
305.149 32.8898 304.66 33.0776 304.474 33.4954 cv
304.288 33.9131 304.476 34.4025 304.893 34.5885 cv
305.311 34.7745 305.8 34.5866 305.986 34.1689 cv
306.172 33.7512 305.985 33.2617 305.567 33.0757 cv
cp
f
303.326 40.4391 mo
302.871 40.3913 302.463 40.7212 302.416 41.176 cv
302.368 41.6308 302.698 42.0382 303.153 42.086 cv
303.607 42.1338 304.015 41.8039 304.063 41.3491 cv
304.11 40.8943 303.78 40.4869 303.326 40.4391 cv
cp
f
303.104 43.0046 mo
302.647 43.0046 302.276 43.3753 302.276 43.8326 cv
302.276 44.2899 302.647 44.6606 303.104 44.6606 cv
303.562 44.6606 303.932 44.2899 303.932 43.8326 cv
303.932 43.3753 303.562 43.0046 303.104 43.0046 cv
cp
f
303.47 48.1347 mo
303.022 48.2297 302.737 48.6694 302.832 49.1167 cv
302.927 49.5639 303.367 49.8495 303.814 49.7544 cv
304.261 49.6593 304.547 49.2197 304.452 48.7724 cv
304.356 48.3251 303.917 48.0396 303.47 48.1347 cv
cp
f
305.984 55.4091 mo
305.588 55.6377 305.453 56.1441 305.681 56.5401 cv
305.91 56.9361 306.416 57.0718 306.812 56.8432 cv
307.208 56.6145 307.344 56.1081 307.115 55.7121 cv
306.887 55.3161 306.38 55.1804 305.984 55.4091 cv
cp
f
310.624 61.5503 mo
310.318 61.8901 310.346 62.4137 310.685 62.7196 cv
311.025 63.0256 311.549 62.9982 311.855 62.6584 cv
312.161 62.3185 312.133 61.795 311.794 61.489 cv
311.454 61.1831 310.93 61.2105 310.624 61.5503 cv
cp
f
319.306 66.9604 mo
319.165 67.3953 319.403 67.8624 319.838 68.0037 cv
320.273 68.145 320.74 67.907 320.881 67.4721 cv
321.022 67.0372 320.784 66.5701 320.349 66.4288 cv
319.915 66.2875 319.447 66.5255 319.306 66.9604 cv
cp
f
321.77 67.7102 mo
321.675 68.1575 321.96 68.5972 322.407 68.6922 cv
322.855 68.7873 323.294 68.5018 323.389 68.0545 cv
323.484 67.6072 323.199 67.1676 322.752 67.0725 cv
322.304 66.9774 321.865 67.2629 321.77 67.7102 cv
cp
f
326.863 68.4196 mo
326.863 68.8769 327.234 69.2476 327.691 69.2476 cv
328.149 69.2476 328.519 68.8769 328.519 68.4196 cv
328.519 67.9624 328.149 67.5917 327.691 67.5917 cv
327.234 67.5917 326.863 67.9624 326.863 68.4196 cv
cp
f
331.993 68.0545 mo
332.089 68.5018 332.528 68.7873 332.976 68.6922 cv
333.423 68.5972 333.708 68.1575 333.613 67.7102 cv
333.518 67.2629 333.079 66.9774 332.631 67.0725 cv
332.184 67.1676 331.898 67.6072 331.993 68.0545 cv
cp
f
336.936 66.6307 mo
337.121 67.0485 337.611 67.2364 338.029 67.0504 cv
338.446 66.8644 338.634 66.375 338.448 65.9572 cv
338.262 65.5395 337.773 65.3516 337.355 65.5376 cv
336.937 65.7236 336.75 66.213 336.936 66.6307 cv
cp
f
339.268 65.5396 mo
339.497 65.9356 340.003 66.0713 340.399 65.8426 cv
340.795 65.614 340.931 65.1076 340.702 64.7116 cv
340.473 64.3156 339.967 64.1799 339.571 64.4086 cv
339.175 64.6372 339.039 65.1436 339.268 65.5396 cv
cp
f
341.474 64.2106 mo
341.742 64.5805 342.26 64.6626 342.63 64.3938 cv
343 64.125 343.082 63.6072 342.813 63.2373 cv
342.544 62.8673 342.027 62.7853 341.657 63.0541 cv
341.287 63.3229 341.205 63.8407 341.474 64.2106 cv
cp
f
347.096 58.9543 mo
347.466 59.2231 347.984 59.1411 348.253 58.7712 cv
348.521 58.4012 348.439 57.8834 348.069 57.6147 cv
347.7 57.3459 347.182 57.4279 346.913 57.7978 cv
346.644 58.1678 346.726 58.6856 347.096 58.9543 cv
cp
f
348.57 56.8432 mo
348.966 57.0718 349.473 56.9361 349.702 56.5401 cv
349.93 56.1441 349.794 55.6377 349.398 55.4091 cv
349.002 55.1804 348.496 55.3161 348.267 55.7121 cv
348.039 56.1081 348.174 56.6145 348.57 56.8432 cv
cp
f
349.816 54.5894 mo
350.234 54.7754 350.723 54.5876 350.909 54.1698 cv
351.095 53.7521 350.907 53.2626 350.49 53.0767 cv
350.072 52.8907 349.582 53.0785 349.396 53.4963 cv
349.21 53.914 349.398 54.4034 349.816 54.5894 cv
cp
f
350.819 52.2179 mo
351.254 52.3592 351.721 52.1212 351.863 51.6863 cv
352.004 51.2514 351.766 50.7843 351.331 50.643 cv
350.896 50.5017 350.429 50.7397 350.288 51.1746 cv
350.146 51.6094 350.384 52.0765 350.819 52.2179 cv
cp
f
351.569 49.7544 mo
352.016 49.8495 352.456 49.5639 352.551 49.1167 cv
352.646 48.6694 352.361 48.2297 351.913 48.1347 cv
351.466 48.0396 351.026 48.3251 350.931 48.7724 cv
350.836 49.2197 351.122 49.6593 351.569 49.7544 cv
cp
f
352.057 47.2261 mo
352.512 47.2739 352.919 46.944 352.967 46.4892 cv
353.015 46.0344 352.685 45.627 352.23 45.5792 cv
351.776 45.5314 351.368 45.8613 351.32 46.3161 cv
351.273 46.7709 351.603 47.1783 352.057 47.2261 cv
cp
f
352.279 44.6606 mo
352.736 44.6606 353.106 44.2899 353.106 43.8326 cv
353.106 43.3753 352.736 43.0046 352.279 43.0046 cv
351.821 43.0046 351.451 43.3753 351.451 43.8326 cv
351.451 44.2899 351.821 44.6606 352.279 44.6606 cv
cp
f
352.23 42.086 mo
352.685 42.0382 353.015 41.6308 352.967 41.176 cv
352.919 40.7212 352.512 40.3913 352.057 40.4391 cv
351.603 40.4869 351.273 40.8943 351.32 41.3491 cv
351.368 41.8039 351.776 42.1338 352.23 42.086 cv
cp
f
350.49 34.5885 mo
350.907 34.4025 351.095 33.9131 350.909 33.4954 cv
350.723 33.0776 350.234 32.8898 349.816 33.0757 cv
349.398 33.2617 349.21 33.7512 349.396 34.1689 cv
349.582 34.5866 350.072 34.7745 350.49 34.5885 cv
cp
f
349.398 32.2561 mo
349.794 32.0275 349.93 31.5211 349.702 31.1251 cv
349.473 30.7291 348.966 30.5934 348.57 30.822 cv
348.174 31.0507 348.039 31.557 348.267 31.953 cv
348.496 32.3491 349.002 32.4847 349.398 32.2561 cv
cp
f
346.517 27.9959 mo
346.857 27.69 346.884 27.1664 346.578 26.8266 cv
346.273 26.4868 345.749 26.4594 345.409 26.7653 cv
345.069 27.0713 345.042 27.5948 345.348 27.9347 cv
345.654 28.2745 346.177 28.3019 346.517 27.9959 cv
cp
f
340.702 22.9536 mo
340.931 22.5575 340.795 22.0512 340.399 21.8225 cv
340.003 21.5939 339.497 21.7296 339.268 22.1256 cv
339.039 22.5216 339.175 23.028 339.571 23.2566 cv
339.967 23.4853 340.473 23.3496 340.702 22.9536 cv
cp
f
338.448 21.708 mo
338.634 21.2902 338.446 20.8008 338.029 20.6148 cv
337.611 20.4288 337.121 20.6167 336.936 21.0344 cv
336.75 21.4522 336.937 21.9416 337.355 22.1276 cv
337.773 22.3136 338.262 22.1257 338.448 21.708 cv
cp
f
336.077 20.7048 mo
336.218 20.2699 335.98 19.8028 335.545 19.6615 cv
335.11 19.5202 334.643 19.7582 334.502 20.1931 cv
334.361 20.6279 334.599 21.095 335.033 21.2364 cv
335.468 21.3777 335.935 21.1397 336.077 20.7048 cv
cp
f
403.153 70.4156 mo
388.496 70.4156 376.573 58.4918 376.573 43.8356 cv
376.573 29.1794 388.496 17.2556 403.153 17.2556 cv
417.809 17.2556 429.733 29.1794 429.733 43.8356 cv
429.733 58.4918 417.809 70.4156 403.153 70.4156 cv
cp
403.153 15.5268 mo
387.543 15.5268 374.844 28.2259 374.844 43.8356 cv
374.844 59.4453 387.543 72.1444 403.153 72.1444 cv
418.762 72.1444 431.461 59.4453 431.461 43.8356 cv
431.461 28.2259 418.762 15.5268 403.153 15.5268 cv
cp
f
403.501 34.3994 mo
403.277 34.3994 li
403.277 16.8671 li
403.501 16.8671 li
403.501 34.3994 li
cp
f
397.7 21.9518 mo
396.572 17.7444 li
396.357 17.8023 li
397.488 22.0235 li
397.558 21.9995 397.629 21.9764 397.7 21.9518 cv
cp
f
388.05 28.1139 mo
384.545 24.6092 li
384.387 24.7673 li
387.887 28.2673 li
387.941 28.2154 387.996 28.1655 388.05 28.1139 cv
cp
f
386.699 39.0159 mo
377.562 36.5677 li
377.504 36.7837 li
386.635 39.2301 li
386.656 39.1587 386.677 39.0874 386.699 39.0159 cv
cp
f
394.149 43.4873 mo
394.149 43.7108 li
376.616 43.7108 li
376.616 43.4873 li
394.149 43.4873 li
cp
f
393.928 52.8728 mo
384.358 62.4428 li
384.517 62.6009 li
394.086 53.0316 li
394.033 52.9786 393.981 52.9257 393.928 52.8728 cv
cp
f
403.237 52.8397 mo
403.46 52.8397 li
403.46 70.3719 li
403.237 70.3719 li
403.237 52.8397 li
cp
f
413.864 62.0619 mo
416.63 66.8539 li
416.824 66.7421 li
414.056 61.9479 li
413.992 61.9859 413.928 62.024 413.864 62.0619 cv
cp
f
412.589 43.7518 mo
412.589 43.5282 li
430.121 43.5282 li
430.121 43.7518 li
412.589 43.7518 li
cp
f
420.844 39.0741 mo
429.244 36.8232 li
429.186 36.6072 li
420.761 38.8648 li
420.788 38.9345 420.816 39.0044 420.844 39.0741 cv
cp
f
413.88 25.6772 mo
416.86 20.5173 li
416.666 20.4055 li
413.694 25.5525 li
413.756 25.595 413.819 25.6344 413.88 25.6772 cv
cp
f
60.6973 137.506 mo
55.67 131.514 li
55.5755 131.402 55.4075 131.387 55.2948 131.482 cv
55.1821 131.576 55.1674 131.744 55.262 131.857 cv
60.2947 137.855 li
55.6785 141.825 49.6926 144.241 43.1497 144.28 cv
43.1497 136.265 li
43.1497 136.118 43.0305 135.999 42.8834 135.999 cv
42.7363 135.999 42.6171 136.118 42.6171 136.265 cv
42.6171 144.275 li
39.4772 144.231 36.4672 143.644 33.6783 142.597 cv
34.5263 140.267 li
34.5765 140.129 34.5053 139.976 34.3671 139.926 cv
34.2289 139.875 34.076 139.947 34.0257 140.085 cv
33.1827 142.401 li
30.3715 141.281 27.7964 139.695 25.5507 137.738 cv
26.7707 136.265 li
26.8652 136.153 26.8505 135.985 26.7378 135.89 cv
26.6251 135.796 26.4572 135.81 26.3626 135.923 cv
25.1481 137.389 li
22.9491 135.394 21.0852 133.036 19.6505 130.411 cv
26.0641 126.708 li
26.1915 126.635 26.2352 126.472 26.1616 126.345 cv
26.0881 126.217 25.9252 126.174 25.7978 126.247 cv
19.4048 129.938 li
17.4961 126.273 16.4102 122.114 16.4102 117.704 cv
16.4102 115.912 16.5911 114.161 16.9311 112.467 cv
20.4937 113.095 li
20.6386 113.12 20.7767 113.024 20.8022 112.879 cv
20.8278 112.734 20.7311 112.596 20.5862 112.57 cv
17.0457 111.946 li
17.6823 109.076 18.7775 106.377 20.2611 103.937 cv
25.7978 107.133 li
25.9252 107.207 26.0881 107.163 26.1616 107.036 cv
26.2352 106.909 26.1915 106.746 26.0641 106.672 cv
20.5488 103.488 li
22.0755 101.087 23.9718 98.9428 26.1646 97.1449 cv
28.5249 99.958 li
28.6195 100.071 28.7875 100.085 28.9001 99.9908 cv
29.0128 99.8962 29.0275 99.7282 28.9329 99.6155 cv
26.5835 96.8156 li
31.0142 93.3279 36.5735 91.2178 42.6171 91.1338 cv
42.6171 97.1152 li
42.6171 97.2623 42.7363 97.3816 42.8834 97.3816 cv
43.0305 97.3816 43.1497 97.2623 43.1497 97.1152 cv
43.1497 91.1284 li
49.2443 91.1646 54.8554 93.2648 59.3271 96.7607 cv
57.4039 99.0526 li
57.3094 99.1653 57.3241 99.3332 57.4368 99.4278 cv
57.5495 99.5223 57.7174 99.5077 57.812 99.395 cv
59.746 97.0901 li
61.9403 98.877 63.841 101.008 65.3738 103.398 cv
59.7027 106.672 li
59.5753 106.746 59.5317 106.909 59.6052 107.036 cv
59.6788 107.163 59.8416 107.207 59.9691 107.133 cv
65.6618 103.847 li
67.1509 106.274 68.2556 108.959 68.9045 111.815 cv
66.1128 112.304 li
65.9679 112.329 65.8712 112.468 65.8968 112.612 cv
65.9223 112.757 66.0604 112.854 66.2053 112.828 cv
69.0248 112.335 li
69.3821 114.07 69.5702 115.865 69.5702 117.704 cv
69.5702 118.839 69.4906 119.954 69.3519 121.052 cv
65.0068 120.286 li
64.862 120.26 64.7238 120.357 64.6983 120.502 cv
64.6728 120.647 64.7695 120.785 64.9143 120.81 cv
69.2845 121.581 li
68.3611 127.872 65.2267 133.451 60.6973 137.506 cv
cp
78.6454 122.691 mo
71.056 121.352 li
71.2106 120.157 71.299 118.941 71.299 117.704 cv
71.299 115.764 71.102 113.869 70.7283 112.037 cv
74.5763 111.364 li
74.7211 111.338 74.8178 111.2 74.7923 111.055 cv
74.7668 110.91 74.6287 110.814 74.4838 110.839 cv
70.6096 111.517 li
68.4776 101.995 61.5404 94.2715 52.4821 91.0375 cv
53.3935 88.5334 li
53.4439 88.3952 53.3726 88.2424 53.2344 88.1921 cv
53.0961 88.1418 52.9433 88.213 52.893 88.3513 cv
51.9776 90.8665 li
49.1998 89.9337 46.2337 89.4168 43.1497 89.3996 cv
43.1497 83.2663 li
43.1497 83.1192 43.0305 82.9999 42.8834 82.9999 cv
42.7363 82.9999 42.6171 83.1192 42.6171 83.2663 cv
42.6171 89.405 li
27.1795 89.6063 14.6814 102.22 14.6814 117.704 cv
14.6814 118.964 14.7727 120.203 14.933 121.42 cv
14.9274 121.396 14.9157 121.376 14.9107 121.352 cv
9.92096 122.232 li
9.77609 122.258 9.67938 122.396 9.70492 122.541 cv
9.73045 122.685 9.86862 122.782 10.0134 122.757 cv
14.9915 121.879 li
15.9776 128.521 19.278 134.417 24.0455 138.719 cv
22.5009 140.584 li
22.4063 140.696 22.421 140.864 22.5337 140.959 cv
22.6464 141.053 22.8144 141.039 22.9089 140.926 cv
24.4481 139.068 li
29.3317 143.313 35.6752 145.913 42.6171 146.004 cv
42.6171 150.114 li
42.6171 150.261 42.7363 150.381 42.8834 150.381 cv
43.0305 150.381 43.1497 150.261 43.1497 150.114 cv
43.1497 146.009 li
53.7398 145.95 62.9686 140.048 67.7731 131.368 cv
71.6963 133.633 li
71.8237 133.706 71.9865 133.663 72.0601 133.535 cv
72.1336 133.408 72.09 133.245 71.9626 133.172 cv
68.0253 130.898 li
69.4899 128.13 70.5113 125.094 70.9885 121.881 cv
78.5529 123.215 li
78.6978 123.241 78.8359 123.144 78.8614 122.999 cv
78.887 122.854 78.7903 122.716 78.6454 122.691 cv
cp
f
118.762 142.137 mo
104.105 142.137 92.1816 130.213 92.1816 115.557 cv
92.1816 100.901 104.105 88.9769 118.762 88.9769 cv
133.418 88.9769 145.342 100.901 145.342 115.557 cv
145.342 130.213 133.418 142.137 118.762 142.137 cv
cp
148.057 113.939 mo
149.504 111.554 149.79 108.483 148.539 105.69 cv
147.415 103.18 145.293 101.453 142.883 100.759 cv
141.026 97.7437 138.621 95.1016 135.806 92.972 cv
136.184 91.9677 136.002 90.8676 135.242 90.1938 cv
134.299 89.3561 132.809 89.4823 131.761 90.4223 cv
128.976 88.9759 125.924 87.9787 122.697 87.5278 cv
122.089 86.449 120.546 85.6764 118.715 85.6764 cv
116.875 85.6764 115.321 86.455 114.717 87.5416 cv
111.298 88.0331 108.074 89.1353 105.16 90.7381 cv
105.163 90.7171 105.173 90.6945 105.174 90.6739 cv
102.85 89.7318 99.4101 90.8233 96.7793 93.544 cv
94.6208 95.7762 93.581 98.5142 93.8388 100.691 cv
92.1042 100.818 90.4115 101.847 89.4478 103.579 cv
88.0418 106.104 88.7017 109.172 90.8945 110.61 cv
90.6098 112.218 90.4528 113.869 90.4528 115.557 cv
90.4528 119.831 91.4103 123.884 93.1136 127.521 cv
92.0722 129.612 92.3552 132.248 94.0488 134.138 cv
95.4365 135.687 97.4257 136.343 99.3055 136.091 cv
102.336 138.964 105.996 141.175 110.058 142.491 cv
110.5 145.419 114.207 147.704 118.715 147.704 cv
123.203 147.704 126.886 145.437 127.354 142.528 cv
131.405 141.235 135.059 139.051 138.093 136.21 cv
139.1 136.902 140.381 136.938 141.231 136.194 cv
142.214 135.334 142.246 133.763 141.354 132.592 cv
143.287 130.034 144.798 127.141 145.779 124.014 cv
147.922 123.749 149.796 122.034 150.286 119.632 cv
150.76 117.314 149.802 115.068 148.057 113.939 cv
cp
f
191.862 143.293 mo
191.093 143.293 190.333 143.253 189.58 143.189 cv
189.58 140.696 li
186.769 140.428 184.096 139.689 181.649 138.533 cv
181.206 139.241 180.75 139.941 180.29 140.638 cv
174.44 137.797 169.786 132.872 167.29 126.835 cv
168.036 126.495 168.783 126.156 169.53 125.818 cv
168.38 123.006 167.74 119.934 167.74 116.713 cv
167.74 114.954 167.936 113.241 168.3 111.591 cv
167.524 111.31 166.738 111.059 165.948 110.822 cv
166.867 106.782 168.704 103.088 171.234 99.9758 cv
171.929 100.434 172.62 100.899 173.299 101.38 cv
175.09 99.2259 177.239 97.3788 179.666 95.9494 cv
179.251 95.2315 178.841 94.511 178.434 93.7887 cv
182.378 91.4698 186.966 90.1335 191.862 90.1335 cv
191.965 90.1335 192.067 90.1401 192.17 90.1413 cv
192.17 92.599 li
196.125 92.6488 199.846 93.6653 203.126 95.408 cv
203.521 94.681 203.889 93.9433 204.232 93.1977 cv
206.289 94.2844 208.188 95.6312 209.883 97.1974 cv
209.384 97.8564 208.886 98.5161 208.391 99.1781 cv
212.422 102.983 215.15 108.155 215.815 113.95 cv
218.298 113.95 li
218.393 114.858 218.442 115.78 218.442 116.713 cv
218.442 121.388 217.225 125.782 215.097 129.603 cv
214.379 129.179 213.649 128.782 212.901 128.429 cv
210.167 133.306 205.809 137.156 200.539 139.196 cv
200.78 139.988 201.015 140.782 201.249 141.577 cv
198.328 142.683 195.166 143.293 191.862 143.293 cv
cp
216.412 130.781 mo
217.095 131.163 217.782 131.532 218.481 131.87 cv
220.814 127.763 222.235 123.063 222.446 118.036 cv
220.139 117.965 li
220.157 117.549 220.171 117.133 220.171 116.714 cv
220.171 111.783 218.901 107.144 216.675 103.103 cv
217.348 102.744 218.019 102.385 218.695 102.033 cv
216.916 98.7784 214.558 95.8836 211.771 93.4681 cv
211.326 94.1039 210.865 94.7268 210.405 95.3504 cv
207.078 92.4592 203.076 90.3292 198.666 89.2367 cv
198.95 88.4887 199.234 87.7405 199.481 86.9801 cv
197.296 86.4008 195.015 86.0542 192.658 85.9816 cv
188.507 85.8537 184.528 86.5736 180.867 87.9604 cv
181.187 88.7231 181.505 89.4866 181.823 90.2501 cv
175.215 92.7653 169.789 97.6856 166.613 103.937 cv
165.9 103.454 165.19 102.968 164.488 102.471 cv
162.763 105.734 161.632 109.35 161.187 113.187 cv
163.771 113.266 li
163.633 114.397 163.554 115.546 163.554 116.714 cv
163.554 119.972 164.114 123.1 165.131 126.016 cv
164.298 126.239 163.464 126.462 162.629 126.678 cv
165.001 133.595 169.782 139.414 175.981 143.133 cv
176.439 142.423 176.862 141.695 177.26 140.956 cv
181.526 143.535 186.524 145.022 191.862 145.022 cv
192.583 145.022 193.296 144.986 194.004 144.933 cv
193.927 147.413 li
201.611 146.864 208.556 143.468 213.672 138.253 cv
213.057 137.756 212.439 137.262 211.821 136.768 cv
213.605 134.992 215.149 132.977 216.412 130.781 cv
cp
f
259.15 144.938 mo
244.783 144.938 233.137 133.292 233.137 118.926 cv
233.137 104.56 244.783 92.914 259.15 92.914 cv
273.516 92.914 285.162 104.56 285.162 118.926 cv
285.162 133.292 273.516 144.938 259.15 144.938 cv
cp
280.221 93.4945 mo
277.693 96.0223 li
272.636 91.9226 266.195 89.4629 259.179 89.4561 cv
259.179 85.8978 li
267.178 85.9049 274.51 88.7564 280.221 93.4945 cv
cp
291.942 114.987 mo
291.244 109.114 289.005 103.713 285.641 99.2011 cv
283.095 101.746 li
281.733 99.851 280.152 98.1237 278.389 96.6023 cv
281.559 93.4324 li
280.797 92.8003 li
274.739 87.7744 267.062 85.0026 259.18 84.9957 cv
258.277 84.995 li
258.277 89.4696 li
242.404 89.9314 229.679 102.942 229.679 118.926 cv
229.679 118.939 229.68 118.952 229.68 118.965 cv
232.678 118.965 li
232.69 127.223 236.484 134.594 242.42 139.44 cv
240.29 141.57 li
245.282 145.733 251.673 148.27 258.653 148.385 cv
258.653 145.392 li
258.818 145.395 258.984 145.398 259.15 145.398 cv
273.757 145.398 285.6 133.567 285.621 118.965 cv
288.619 118.965 li
288.619 118.952 288.62 118.939 288.62 118.926 cv
288.62 117.59 288.529 116.276 288.357 114.987 cv
291.942 114.987 li
cp
f
350.328 97.7907 mo
348.658 99.461 346.987 101.131 345.317 102.802 cv
348.544 106.546 350.499 111.417 350.499 116.747 cv
350.499 122.097 348.53 126.983 345.282 130.731 cv
350.287 135.736 li
354.81 130.7 357.57 124.049 357.57 116.747 cv
357.57 109.464 354.829 102.823 350.328 97.7907 cv
cp
f
296.53 116.747 mo
296.53 129.723 304.815 140.758 316.381 144.866 cv
316.381 142.803 li
312.558 141.337 309.142 139.051 306.342 136.166 cv
310.956 131.552 li
307.264 127.711 304.99 122.496 304.99 116.747 cv
304.99 111.398 306.959 106.512 310.206 102.763 cv
305.584 98.1402 li
308.516 94.8699 312.206 92.2928 316.381 90.6915 cv
316.381 88.6281 li
304.815 92.7362 296.53 103.772 296.53 116.747 cv
cp
f
347.08 93.3971 mo
341.94 89.256 335.41 86.7718 328.296 86.7718 cv
327.664 86.7718 327.04 86.8017 326.419 86.8427 cv
326.47 87.0931 326.52 87.3438 326.572 87.594 cv
327.143 87.5581 327.716 87.5315 328.296 87.5315 cv
335.221 87.5315 341.576 89.9499 346.582 93.9769 cv
346.749 93.7841 346.914 93.5902 347.08 93.3971 cv
cp
f
327.922 142.303 mo
327.846 142.303 327.783 142.365 327.783 142.442 cv
327.783 146.47 li
327.783 146.547 327.846 146.609 327.922 146.609 cv
327.999 146.609 328.061 146.547 328.061 146.47 cv
328.061 142.442 li
328.061 142.365 327.999 142.303 327.922 142.303 cv
cp
f
329.841 142.219 mo
329.765 142.226 329.708 142.293 329.715 142.37 cv
330.066 146.382 li
330.073 146.459 330.14 146.515 330.216 146.509 cv
330.293 146.502 330.349 146.434 330.343 146.358 cv
329.992 142.345 li
329.985 142.269 329.917 142.212 329.841 142.219 cv
cp
f
331.745 141.968 mo
331.67 141.982 331.619 142.054 331.633 142.129 cv
332.332 146.096 li
332.345 146.172 332.417 146.222 332.493 146.209 cv
332.568 146.196 332.619 146.123 332.606 146.048 cv
331.906 142.081 li
331.893 142.006 331.821 141.955 331.745 141.968 cv
cp
f
333.62 141.553 mo
333.546 141.573 333.502 141.649 333.522 141.723 cv
334.565 145.614 li
334.584 145.688 334.661 145.732 334.735 145.712 cv
334.809 145.692 334.853 145.616 334.833 145.542 cv
333.79 141.651 li
333.771 141.577 333.694 141.533 333.62 141.553 cv
cp
f
335.452 140.975 mo
335.38 141.001 335.343 141.081 335.369 141.153 cv
336.747 144.938 li
336.773 145.01 336.853 145.048 336.925 145.021 cv
336.997 144.995 337.034 144.915 337.008 144.843 cv
335.63 141.058 li
335.604 140.986 335.524 140.949 335.452 140.975 cv
cp
f
337.411 140.307 mo
337.379 140.238 337.296 140.208 337.226 140.24 cv
337.157 140.273 337.127 140.355 337.159 140.425 cv
338.862 144.075 li
338.894 144.145 338.977 144.175 339.046 144.143 cv
339.116 144.11 339.146 144.028 339.113 143.958 cv
337.411 140.307 li
cp
f
339.12 139.404 mo
339.081 139.338 338.996 139.315 338.93 139.353 cv
338.864 139.392 338.841 139.477 338.879 139.543 cv
340.893 143.031 li
340.932 143.098 341.016 143.121 341.083 143.082 cv
341.149 143.044 341.172 142.959 341.134 142.893 cv
339.12 139.404 li
cp
f
340.743 138.356 mo
340.699 138.293 340.613 138.277 340.55 138.321 cv
340.487 138.365 340.472 138.452 340.516 138.515 cv
342.826 141.814 li
342.87 141.877 342.957 141.893 343.02 141.849 cv
343.082 141.805 343.098 141.718 343.054 141.655 cv
340.743 138.356 li
cp
f
342.269 137.169 mo
342.22 137.111 342.132 137.103 342.074 137.152 cv
342.015 137.202 342.007 137.289 342.056 137.348 cv
344.646 140.434 li
344.695 140.492 344.782 140.5 344.841 140.451 cv
344.9 140.401 344.908 140.314 344.858 140.255 cv
342.269 137.169 li
cp
f
343.686 135.855 mo
343.632 135.8 343.544 135.8 343.49 135.855 cv
343.435 135.909 343.435 135.997 343.49 136.051 cv
346.338 138.899 li
346.392 138.954 346.48 138.954 346.534 138.899 cv
346.588 138.845 346.588 138.757 346.534 138.703 cv
343.686 135.855 li
cp
f
401.712 141.746 mo
387.915 141.746 376.731 130.561 376.731 116.765 cv
376.731 102.968 387.915 91.7833 401.712 91.7833 cv
415.509 91.7833 426.693 102.968 426.693 116.765 cv
426.693 130.561 415.509 141.746 401.712 141.746 cv
cp
401.74 85.0453 mo
409.422 85.052 416.464 87.7905 421.948 92.3409 cv
419.521 94.7685 li
414.664 90.8313 408.478 88.4691 401.74 88.4625 cv
401.74 85.0453 li
cp
427.134 116.802 mo
430.014 116.802 li
430.014 116.789 430.015 116.777 430.015 116.765 cv
430.015 115.482 429.928 114.22 429.762 112.982 cv
433.205 112.982 li
432.535 107.341 430.384 102.155 427.153 97.8213 cv
424.709 100.266 li
423.401 98.4455 421.883 96.7867 420.189 95.3255 cv
423.233 92.2813 li
422.501 91.6742 li
416.684 86.8475 409.311 84.1855 401.741 84.1789 cv
400.874 84.1782 li
400.874 88.4754 li
385.631 88.919 373.409 101.414 373.409 116.765 cv
373.409 116.777 373.41 116.789 373.41 116.802 cv
376.29 116.802 li
376.301 124.733 379.944 131.811 385.645 136.466 cv
383.6 138.512 li
388.394 142.509 394.531 144.945 401.235 145.057 cv
401.235 142.181 li
401.394 142.184 401.553 142.187 401.712 142.187 cv
415.74 142.187 427.114 130.825 427.134 116.802 cv
cp
f
397.641 87.4075 mo
397.641 85.5462 li
392.825 86.1703 388.351 87.8825 384.472 90.4275 cv
385.811 91.7662 li
389.322 89.5276 393.331 88.0017 397.641 87.4075 cv
cp
f
416.49 103.554 mo
415.326 104.718 414.162 105.882 412.998 107.046 cv
415.247 109.655 416.61 113.05 416.61 116.765 cv
416.61 120.493 415.238 123.898 412.974 126.51 cv
416.462 129.998 li
419.614 126.489 421.537 121.853 421.537 116.765 cv
421.537 111.689 419.628 107.061 416.49 103.554 cv
cp
f
394.753 136.361 mo
394.753 134.923 li
392.088 133.901 389.708 132.309 387.756 130.298 cv
390.972 127.082 li
388.399 124.405 386.814 120.771 386.814 116.765 cv
386.814 113.037 388.186 109.632 390.449 107.019 cv
387.228 103.797 li
389.271 101.518 391.843 99.7223 394.753 98.6064 cv
394.753 97.1684 li
386.692 100.031 380.918 107.722 380.918 116.765 cv
380.918 125.807 386.692 133.498 394.753 136.361 cv
cp
f
374.208 120.899 mo
374.194 120.346 373.734 119.91 373.181 119.925 cv
372.629 119.94 372.193 120.399 372.208 120.952 cv
372.222 121.504 372.682 121.94 373.235 121.926 cv
373.787 121.911 374.223 121.451 374.208 120.899 cv
cp
f
374.783 124.142 mo
374.768 123.589 374.309 123.153 373.756 123.168 cv
373.204 123.183 372.768 123.643 372.783 124.195 cv
372.797 124.747 373.257 125.183 373.809 125.169 cv
374.362 125.154 374.798 124.694 374.783 124.142 cv
cp
f
375.6 127.297 mo
375.585 126.745 375.126 126.309 374.573 126.323 cv
374.021 126.338 373.585 126.798 373.599 127.35 cv
373.614 127.903 374.074 128.338 374.626 128.324 cv
375.179 128.309 375.615 127.849 375.6 127.297 cv
cp
f
376.982 130.274 mo
376.968 129.722 376.508 129.286 375.956 129.301 cv
375.403 129.315 374.967 129.775 374.982 130.327 cv
374.997 130.88 375.456 131.316 376.009 131.301 cv
376.561 131.286 376.997 130.827 376.982 130.274 cv
cp
f
377.576 132.027 mo
377.023 132.042 376.587 132.501 376.602 133.054 cv
376.617 133.606 377.076 134.042 377.629 134.028 cv
378.181 134.013 378.617 133.553 378.602 133.001 cv
378.588 132.448 378.128 132.012 377.576 132.027 cv
cp
f
379.519 134.664 mo
378.967 134.678 378.531 135.138 378.545 135.69 cv
378.56 136.243 379.02 136.679 379.572 136.664 cv
380.125 136.649 380.561 136.19 380.546 135.637 cv
380.531 135.085 380.072 134.649 379.519 134.664 cv
cp
f
379.438 116.765 mo
379.438 116.71 379.442 116.655 379.442 116.6 cv
377.937 116.6 li
377.936 116.655 377.934 116.71 377.934 116.765 cv
377.934 129.565 388.049 139.998 400.721 140.518 cv
400.721 139.014 li
388.88 138.495 379.438 128.734 379.438 116.765 cv
cp
f
401.712 92.9867 mo
395.869 92.9867 390.521 95.0979 386.382 98.5944 cv
387.447 99.6601 li
391.312 96.4339 396.284 94.4905 401.712 94.4905 cv
414.014 94.4905 423.986 104.463 423.986 116.765 cv
423.986 122.192 422.043 127.165 418.817 131.029 cv
419.882 132.095 li
423.379 127.955 425.49 122.608 425.49 116.765 cv
425.49 103.632 414.844 92.9867 401.712 92.9867 cv
cp
f
415.483 145.278 mo
415.187 144.582 414.88 143.875 414.563 143.162 cv
420.966 140.039 426.054 134.651 428.804 128.083 cv
429.595 128.37 430.312 128.621 430.993 128.848 cv
428.027 136.015 422.477 141.895 415.483 145.278 cv
cp
433.453 117.948 mo
433.33 121.295 432.681 124.51 431.596 127.517 cv
430.528 127.162 429.467 126.791 428.403 126.397 cv
429.109 124.441 429.611 122.387 429.872 120.259 cv
428.199 120.259 li
426.649 132.121 417.317 141.536 405.495 143.212 cv
405.495 144.885 li
408.07 144.542 410.534 143.848 412.843 142.862 cv
413.309 143.892 413.759 144.928 414.201 145.968 cv
412.493 146.702 410.71 147.295 408.864 147.721 cv
408.864 149.202 li
423.396 146.012 434.359 133.307 434.897 117.948 cv
433.453 117.948 li
cp
f
414.803 100.492 mo
411.221 97.606 406.67 95.8747 401.712 95.8747 cv
401.272 95.8747 400.837 95.8956 400.404 95.9242 cv
400.44 96.0987 400.475 96.2734 400.511 96.4477 cv
400.909 96.4227 401.308 96.4042 401.712 96.4042 cv
406.538 96.4042 410.967 98.0896 414.456 100.896 cv
414.572 100.762 414.687 100.626 414.803 100.492 cv
cp
f
476.531 67.5359 mo
463.463 67.5359 452.831 56.9043 452.831 43.8356 cv
452.831 30.7669 463.463 20.1354 476.531 20.1354 cv
489.599 20.1354 500.231 30.7669 500.231 43.8356 cv
500.231 56.9043 489.599 67.5359 476.531 67.5359 cv
cp
476.531 19.2813 mo
462.991 19.2813 451.977 30.2965 451.977 43.8356 cv
451.977 57.3747 462.991 68.3899 476.531 68.3899 cv
490.07 68.3899 501.085 57.3747 501.085 43.8356 cv
501.085 30.2965 490.07 19.2813 476.531 19.2813 cv
cp
f
476.531 76.0765 mo
458.753 76.0765 444.29 61.6133 444.29 43.8356 cv
444.29 26.0579 458.753 11.5947 476.531 11.5947 cv
494.309 11.5947 508.772 26.0579 508.772 43.8356 cv
508.772 61.6133 494.309 76.0765 476.531 76.0765 cv
cp
476.531 10.7407 mo
458.282 10.7407 443.436 25.5867 443.436 43.8356 cv
443.436 62.0845 458.282 76.9305 476.531 76.9305 cv
494.779 76.9305 509.626 62.0845 509.626 43.8356 cv
509.626 25.5867 494.779 10.7407 476.531 10.7407 cv
cp
f
467.414 14.7355 mo
462.552 16.2605 458.203 18.9483 454.721 22.5044 cv
455.796 23.4388 456.851 24.3973 457.881 25.384 cv
460.815 22.424 464.456 20.1791 468.515 18.8739 cv
468.14 17.4964 467.771 16.1175 467.414 14.7355 cv
cp
f
454.954 58.7825 mo
452.004 54.5367 450.268 49.3864 450.268 43.836 cv
450.268 40.6075 450.866 37.5206 451.941 34.6655 cv
450.689 33.9744 449.422 33.3113 448.142 32.6743 cv
446.77 36.1335 445.998 39.8926 445.998 43.8356 cv
445.998 50.4514 448.12 56.5773 451.709 61.583 cv
452.793 60.6517 453.875 59.7186 454.954 58.7825 cv
cp
f
505.269 33.6132 mo
502.057 24.615 494.754 17.5481 485.588 14.6954 cv
485.119 16.0365 484.644 17.3759 484.17 18.7156 cv
492.139 21.1427 498.463 27.2819 501.231 35.0947 cv
502.545 34.5327 503.9 34.053 505.269 33.6132 cv
cp
f
502.637 46.5407 mo
502.319 49.6149 501.481 52.5363 500.193 55.2059 cv
501.363 56.0428 502.526 56.8934 503.708 57.7142 cv
505.44 54.3398 506.549 50.6017 506.915 46.65 cv
505.489 46.6368 504.064 46.5963 502.637 46.5407 cv
cp
f
494.153 63.2634 mo
489.49 67.5007 483.313 70.0984 476.531 70.0984 cv
475.318 70.0984 474.132 69.9924 472.965 69.8292 cv
472.593 71.2197 472.207 72.6059 471.802 73.987 cv
473.343 74.2326 474.921 74.3684 476.531 74.3684 cv
484.461 74.3684 491.685 71.3201 497.117 66.3443 cv
496.131 65.316 495.142 64.2902 494.153 63.2634 cv
cp
f
506.838 119.459 mo
506.433 121.442 504.92 122.927 503.072 123.156 cv
502.52 123.224 li
502.353 123.755 li
501.414 126.749 499.971 129.547 498.063 132.071 cv
497.668 132.593 li
498.066 133.115 li
498.686 133.931 498.684 134.998 498.06 135.544 cv
497.746 135.818 497.381 135.876 497.13 135.876 cv
496.744 135.875 496.336 135.742 495.981 135.498 cv
495.408 135.105 li
494.901 135.58 li
491.932 138.36 488.332 140.479 484.49 141.706 cv
483.984 141.867 li
483.9 142.391 li
483.498 144.886 480.078 146.84 476.114 146.84 cv
472.118 146.84 468.691 144.873 468.312 142.362 cv
468.232 141.833 li
467.724 141.669 li
463.868 140.419 460.263 138.274 457.299 135.464 cv
456.999 135.18 li
456.59 135.235 li
456.367 135.264 456.142 135.279 455.917 135.279 cv
454.464 135.279 453.07 134.653 452.091 133.562 cv
450.678 131.983 450.362 129.763 451.286 127.906 cv
451.472 127.533 li
451.295 127.155 li
449.584 123.5 448.716 119.597 448.716 115.557 cv
448.716 113.98 448.86 112.366 449.145 110.761 cv
449.244 110.2 li
448.767 109.887 li
446.942 108.69 446.43 106.104 447.602 103.999 cv
448.392 102.58 449.775 101.665 451.301 101.553 cv
452.203 101.487 li
452.096 100.59 li
451.859 98.5843 452.894 96.1144 454.8 94.145 cv
456.579 92.3048 458.806 91.2007 460.756 91.2057 cv
461.694 91.2082 462.674 91.6206 462.674 91.6206 cv
465.557 90.0345 468.975 88.8667 472.239 88.3973 cv
472.664 88.3357 li
472.872 87.9609 li
473.336 87.1252 474.67 86.5411 476.114 86.5411 cv
477.547 86.5411 478.875 87.1218 479.343 87.9525 cv
479.553 88.3247 li
479.977 88.3838 li
483.048 88.8135 486.005 89.7572 488.762 91.1897 cv
489.293 91.4649 li
489.738 91.0656 li
490.139 90.7052 490.644 90.4992 491.124 90.4992 cv
491.379 90.4992 491.75 90.5583 492.068 90.8402 cv
492.53 91.2505 492.659 91.968 492.396 92.6678 cv
492.169 93.2713 li
492.683 93.6613 li
495.432 95.7413 497.741 98.2812 499.546 101.212 cv
499.721 101.497 li
500.042 101.589 li
502.313 102.244 504.175 103.868 505.149 106.044 cv
506.236 108.47 506.074 111.254 504.716 113.491 cv
504.281 114.208 li
504.986 114.665 li
506.482 115.632 507.226 117.56 506.838 119.459 cv
cp
505.455 113.939 mo
506.903 111.554 507.189 108.483 505.938 105.69 cv
504.814 103.18 502.692 101.453 500.282 100.759 cv
498.425 97.7437 496.02 95.1016 493.205 92.972 cv
493.582 91.9677 493.4 90.8676 492.641 90.1938 cv
491.697 89.3561 490.207 89.4823 489.16 90.4223 cv
486.375 88.9759 483.323 87.9787 480.096 87.5278 cv
479.488 86.449 477.945 85.6764 476.114 85.6764 cv
474.274 85.6764 472.719 86.455 472.116 87.5416 cv
468.697 88.0331 465.472 89.1353 462.559 90.7381 cv
462.562 90.7171 462.572 90.6945 462.573 90.6739 cv
460.249 89.7318 456.809 90.8233 454.178 93.544 cv
452.02 95.7762 450.98 98.5142 451.238 100.691 cv
449.503 100.818 447.81 101.847 446.847 103.579 cv
445.441 106.104 446.101 109.172 448.293 110.61 cv
448.009 112.218 447.852 113.869 447.852 115.557 cv
447.852 119.831 448.809 123.884 450.512 127.521 cv
449.471 129.612 449.754 132.248 451.448 134.138 cv
452.835 135.687 454.825 136.343 456.704 136.091 cv
459.735 138.964 463.395 141.175 467.457 142.491 cv
467.899 145.419 471.606 147.704 476.114 147.704 cv
480.602 147.704 484.285 145.437 484.753 142.528 cv
488.804 141.235 492.458 139.051 495.492 136.21 cv
496.498 136.902 497.78 136.938 498.63 136.194 cv
499.613 135.334 499.645 133.763 498.753 132.592 cv
500.686 130.034 502.197 127.141 503.178 124.014 cv
505.321 123.749 507.195 122.034 507.685 119.632 cv
508.159 117.314 507.201 115.068 505.455 113.939 cv
cp
f
476.37 139.328 mo
463.144 139.328 452.383 128.568 452.383 115.341 cv
452.383 102.115 463.144 91.3546 476.37 91.3546 cv
489.596 91.3546 500.357 102.115 500.357 115.341 cv
500.357 128.568 489.596 139.328 476.37 139.328 cv
cp
476.37 89.6255 mo
462.19 89.6255 450.655 101.161 450.655 115.341 cv
450.655 129.521 462.19 141.057 476.37 141.057 cv
490.55 141.057 502.086 129.521 502.086 115.341 cv
502.086 101.161 490.55 89.6255 476.37 89.6255 cv
cp
f
142.251 182.816 mo
18.7594 182.816 li
16.5911 182.816 14.8333 181.058 14.8333 178.89 cv
14.8333 176.722 16.5911 174.964 18.7594 174.964 cv
142.251 174.964 li
144.419 174.964 146.177 176.722 146.177 178.89 cv
146.177 181.058 144.419 182.816 142.251 182.816 cv
cp
142.251 174.25 mo
18.7594 174.25 li
16.201 174.25 14.1195 176.332 14.1195 178.89 cv
14.1195 181.448 16.201 183.53 18.7594 183.53 cv
142.251 183.53 li
144.809 183.53 146.891 181.448 146.891 178.89 cv
146.891 176.332 144.809 174.25 142.251 174.25 cv
cp
f
18.7594 182.102 mo
16.9881 182.102 15.5472 180.661 15.5472 178.89 cv
15.5472 177.119 16.9881 175.678 18.7594 175.678 cv
101.623 175.678 li
103.394 175.678 104.835 177.119 104.835 178.89 cv
104.835 180.661 103.394 182.102 101.623 182.102 cv
18.7594 182.102 li
cp
f
14.9763 217.214 mo
15.4317 215.55 16.9506 214.325 18.7594 214.325 cv
142.251 214.325 li
144.06 214.325 145.579 215.55 146.034 217.214 cv
146.77 217.214 li
146.297 215.154 144.453 213.611 142.251 213.611 cv
18.7594 213.611 li
16.5579 213.611 14.7133 215.154 14.2405 217.214 cv
14.9763 217.214 li
cp
f
145.991 219.443 mo
145.486 221.028 144.003 222.177 142.251 222.177 cv
18.7594 222.177 li
17.0071 222.177 15.5241 221.028 15.0191 219.443 cv
14.2807 219.443 li
14.8091 221.425 16.614 222.891 18.7594 222.891 cv
142.251 222.891 li
144.396 222.891 146.201 221.425 146.73 219.443 cv
145.991 219.443 li
cp
f
86.8715 221.463 mo
91.1466 221.463 li
84.7222 215.039 li
80.4471 215.039 li
86.8715 221.463 li
cp
f
81.2998 221.463 mo
85.8681 221.463 li
79.4437 215.039 li
74.8754 215.039 li
81.2998 221.463 li
cp
f
75.0683 221.463 mo
80.2964 221.463 li
73.8719 215.039 li
68.6439 215.039 li
75.0683 221.463 li
cp
f
67.5172 221.463 mo
74.0649 221.463 li
67.6404 215.039 li
61.0928 215.039 li
67.5172 221.463 li
cp
f
58.7197 221.463 mo
66.5138 221.463 li
64.3723 219.322 62.2308 217.18 60.0893 215.039 cv
52.2953 215.039 li
58.7197 221.463 li
cp
f
47.503 221.463 mo
57.7163 221.463 li
51.2918 215.039 li
41.0786 215.039 li
43.2201 217.18 45.3615 219.322 47.503 221.463 cv
cp
f
33.8669 221.463 mo
46.4995 221.463 li
40.0751 215.039 li
27.4425 215.039 li
33.8669 221.463 li
cp
f
26.439 215.039 mo
18.7594 215.039 li
16.9881 215.039 15.5472 216.479 15.5472 218.251 cv
15.5472 220.022 16.9881 221.463 18.7594 221.463 cv
32.8635 221.463 li
26.439 215.039 li
cp
f
92.15 221.463 mo
96.1318 221.463 li
89.7074 215.039 li
85.7256 215.039 li
92.15 221.463 li
cp
f
97.1352 221.463 mo
100.755 221.463 li
94.3302 215.039 li
90.7108 215.039 li
97.1352 221.463 li
cp
f
142.251 195.665 mo
18.7594 195.665 li
16.5911 195.665 14.8333 193.907 14.8333 191.739 cv
14.8333 189.57 16.5911 187.813 18.7594 187.813 cv
142.251 187.813 li
144.419 187.813 146.177 189.57 146.177 191.739 cv
146.177 193.907 144.419 195.665 142.251 195.665 cv
cp
142.251 187.099 mo
18.7594 187.099 li
16.201 187.099 14.1195 189.18 14.1195 191.739 cv
14.1195 194.297 16.201 196.379 18.7594 196.379 cv
142.251 196.379 li
144.809 196.379 146.891 194.297 146.891 191.739 cv
146.891 189.18 144.809 187.099 142.251 187.099 cv
cp
f
15.5299 191.749 mo
15.5299 189.952 16.9865 188.496 18.7834 188.496 cv
20.5803 188.496 22.0369 189.952 22.0369 191.749 cv
22.0369 193.546 20.5803 195.003 18.7834 195.003 cv
16.9865 195.003 15.5299 193.546 15.5299 191.749 cv
cp
f
22.6404 191.749 mo
22.6404 189.952 24.097 188.496 25.8939 188.496 cv
27.6907 188.496 29.1474 189.952 29.1474 191.749 cv
29.1474 193.546 27.6907 195.003 25.8939 195.003 cv
24.097 195.003 22.6404 193.546 22.6404 191.749 cv
cp
f
29.7508 191.749 mo
29.7508 189.952 31.2075 188.496 33.0043 188.496 cv
34.8012 188.496 36.2578 189.952 36.2578 191.749 cv
36.2578 193.546 34.8012 195.003 33.0043 195.003 cv
31.2075 195.003 29.7508 193.546 29.7508 191.749 cv
cp
f
36.8613 191.749 mo
36.8613 189.952 38.3179 188.496 40.1148 188.496 cv
41.9117 188.496 43.3683 189.952 43.3683 191.749 cv
43.3683 193.546 41.9117 195.003 40.1148 195.003 cv
38.3179 195.003 36.8613 193.546 36.8613 191.749 cv
cp
f
43.9717 191.749 mo
43.9717 189.952 45.4284 188.496 47.2253 188.496 cv
49.0221 188.496 50.4788 189.952 50.4788 191.749 cv
50.4788 193.546 49.0221 195.003 47.2253 195.003 cv
45.4284 195.003 43.9717 193.546 43.9717 191.749 cv
cp
f
51.0822 191.749 mo
51.0822 189.952 52.5389 188.496 54.3357 188.496 cv
56.1326 188.496 57.5892 189.952 57.5892 191.749 cv
57.5892 193.546 56.1326 195.003 54.3357 195.003 cv
52.5389 195.003 51.0822 193.546 51.0822 191.749 cv
cp
f
58.1927 191.749 mo
58.1927 189.952 59.6493 188.496 61.4462 188.496 cv
63.243 188.496 64.6997 189.952 64.6997 191.749 cv
64.6997 193.546 63.243 195.003 61.4462 195.003 cv
59.6493 195.003 58.1927 193.546 58.1927 191.749 cv
cp
f
65.3031 191.749 mo
65.3031 189.952 66.7598 188.496 68.5566 188.496 cv
70.3535 188.496 71.8102 189.952 71.8102 191.749 cv
71.8102 193.546 70.3535 195.003 68.5566 195.003 cv
66.7598 195.003 65.3031 193.546 65.3031 191.749 cv
cp
f
87.5923 207.887 mo
89.4281 204.707 li
87.5923 201.527 li
17.7559 201.527 li
15.9201 204.707 li
17.7559 207.887 li
87.5923 207.887 li
cp
f
144.338 208.601 mo
17.3439 208.601 li
15.0958 204.707 li
17.3439 200.813 li
144.338 200.813 li
146.585 204.707 li
144.338 208.601 li
cp
144.749 200.099 mo
16.9319 200.099 li
14.2716 204.707 li
16.9319 209.314 li
144.749 209.314 li
147.41 204.707 li
144.749 200.099 li
cp
f
145.225 231.832 mo
144.165 231.832 143.29 232.605 143.12 233.617 cv
18.6044 233.617 li
18.4339 232.605 17.5595 231.832 16.499 231.832 cv
15.3162 231.832 14.3575 232.791 14.3575 233.973 cv
14.3575 235.156 15.3162 236.115 16.499 236.115 cv
17.5593 236.115 18.4336 235.342 18.6044 234.331 cv
143.12 234.331 li
143.291 235.342 144.165 236.115 145.225 236.115 cv
146.408 236.115 147.367 235.156 147.367 233.973 cv
147.367 232.791 146.408 231.832 145.225 231.832 cv
cp
f
90.4412 233.123 mo
90.135 232.287 89.3465 231.684 88.4041 231.684 cv
21.6029 231.684 li
20.6604 231.684 19.872 232.287 19.5658 233.123 cv
90.4412 233.123 li
cp
f
19.6429 234.824 mo
19.9978 235.551 20.7389 236.056 21.6029 236.056 cv
88.4041 236.056 li
89.2681 236.056 90.0091 235.551 90.3641 234.824 cv
19.6429 234.824 li
cp
f
147.285 246.2 mo
18.4572 246.2 li
18.4572 247.985 li
147.285 247.985 li
147.285 246.2 li
cp
f
73.0414 249.475 mo
71.3037 249.475 li
71.3037 244.478 li
73.0414 244.478 li
73.0414 249.475 li
cp
f
70.8692 249.475 mo
69.1316 249.475 li
69.1316 244.478 li
70.8692 244.478 li
70.8692 249.475 li
cp
f
68.6971 249.475 mo
66.9594 249.475 li
66.9594 244.478 li
68.6971 244.478 li
68.6971 249.475 li
cp
f
66.525 249.475 mo
64.7873 249.475 li
64.7873 244.478 li
66.525 244.478 li
66.525 249.475 li
cp
f
64.3529 249.475 mo
62.6152 249.475 li
62.6152 244.478 li
64.3529 244.478 li
64.3529 249.475 li
cp
f
62.1808 249.475 mo
60.4431 249.475 li
60.4431 244.478 li
62.1808 244.478 li
62.1808 249.475 li
cp
f
60.0087 249.475 mo
58.271 249.475 li
58.271 244.478 li
60.0087 244.478 li
60.0087 249.475 li
cp
f
57.8366 249.475 mo
56.0989 249.475 li
56.0989 244.478 li
57.8366 244.478 li
57.8366 249.475 li
cp
f
55.6644 249.475 mo
53.9268 249.475 li
53.9268 244.478 li
55.6644 244.478 li
55.6644 249.475 li
cp
f
53.4923 249.475 mo
51.7546 249.475 li
51.7546 244.478 li
53.4923 244.478 li
53.4923 249.475 li
cp
f
51.3202 249.475 mo
49.5825 249.475 li
49.5825 244.478 li
51.3202 244.478 li
51.3202 249.475 li
cp
f
49.1481 249.475 mo
47.4104 249.475 li
47.4104 244.478 li
49.1481 244.478 li
49.1481 249.475 li
cp
f
46.976 249.475 mo
45.2383 249.475 li
45.2383 244.478 li
46.976 244.478 li
46.976 249.475 li
cp
f
44.8039 249.475 mo
43.0662 249.475 li
43.0662 244.478 li
44.8039 244.478 li
44.8039 249.475 li
cp
f
42.6318 249.475 mo
40.8941 249.475 li
40.8941 244.478 li
42.6318 244.478 li
42.6318 249.475 li
cp
f
40.4596 249.475 mo
38.722 249.475 li
38.722 244.478 li
40.4596 244.478 li
40.4596 249.475 li
cp
f
38.2875 249.475 mo
36.5498 249.475 li
36.5498 244.478 li
38.2875 244.478 li
38.2875 249.475 li
cp
f
36.1154 249.475 mo
34.3777 249.475 li
34.3777 244.478 li
36.1154 244.478 li
36.1154 249.475 li
cp
f
33.9433 249.475 mo
32.2056 249.475 li
32.2056 244.478 li
33.9433 244.478 li
33.9433 249.475 li
cp
f
31.7712 249.475 mo
30.0335 249.475 li
30.0335 244.478 li
31.7712 244.478 li
31.7712 249.475 li
cp
f
29.5991 249.475 mo
27.8614 249.475 li
27.8614 244.478 li
29.5991 244.478 li
29.5991 249.475 li
cp
f
27.427 249.475 mo
25.6893 249.475 li
25.6893 244.478 li
27.427 244.478 li
27.427 249.475 li
cp
f
25.2548 249.475 mo
23.5172 249.475 li
23.5172 244.478 li
25.2548 244.478 li
25.2548 249.475 li
cp
f
23.0827 249.475 mo
21.345 249.475 li
21.345 244.478 li
23.0827 244.478 li
23.0827 249.475 li
cp
f
20.9106 249.475 mo
19.1729 249.475 li
19.1729 244.478 li
20.9106 244.478 li
20.9106 249.475 li
cp
f
18.7385 249.475 mo
17.0008 249.475 li
17.0008 244.478 li
18.7385 244.478 li
18.7385 249.475 li
cp
f
75.3376 251.404 mo
73.5378 251.404 li
73.5378 242.716 li
75.3376 242.716 li
75.3376 251.404 li
cp
f
142.251 264.192 mo
18.7594 264.192 li
16.5911 264.192 14.8333 262.434 14.8333 260.266 cv
14.8333 258.098 16.5911 256.34 18.7594 256.34 cv
142.251 256.34 li
144.419 256.34 146.177 258.098 146.177 260.266 cv
146.177 262.434 144.419 264.192 142.251 264.192 cv
cp
142.251 255.626 mo
18.7594 255.626 li
16.201 255.626 14.1195 257.708 14.1195 260.266 cv
14.1195 262.824 16.201 264.906 18.7594 264.906 cv
142.251 264.906 li
144.809 264.906 146.891 262.824 146.891 260.266 cv
146.891 257.708 144.809 255.626 142.251 255.626 cv
cp
f
97.8985 260.264 mo
97.8985 259.003 98.4448 257.871 99.3092 257.08 cv
18.7805 257.08 li
17.047 257.08 15.6369 258.49 15.6369 260.224 cv
15.6369 261.957 17.047 263.367 18.7805 263.367 cv
99.221 263.367 li
98.4072 262.581 97.8985 261.482 97.8985 260.264 cv
cp
f
98.6124 260.264 mo
98.6124 258.272 100.227 256.658 102.218 256.658 cv
104.209 256.658 105.823 258.272 105.823 260.264 cv
105.823 262.255 104.209 263.869 102.218 263.869 cv
100.227 263.869 98.6124 262.255 98.6124 260.264 cv
cp
f
146.086 281.578 mo
145.645 281.137 145.204 280.695 144.762 280.254 cv
144.762 283.419 li
146.086 284.743 li
146.086 285.367 li
144.762 284.043 li
144.762 287.267 li
146.086 288.591 li
146.086 305.657 li
136.497 315.247 126.907 324.836 117.318 334.426 cv
82.9529 334.426 li
81.613 333.086 li
78.3888 333.086 li
79.7287 334.426 li
79.1046 334.426 li
77.7647 333.086 li
74.5997 333.086 li
75.9396 334.426 li
75.2729 334.426 li
73.933 333.086 li
70.7088 333.086 li
72.0487 334.426 li
71.4246 334.426 li
70.0847 333.086 li
66.9197 333.086 li
68.2596 334.426 li
33.3885 334.426 li
32.0486 333.086 li
28.8243 333.086 li
30.1642 334.426 li
29.5402 334.426 li
28.2003 333.086 li
25.0353 333.086 li
26.3752 334.426 li
25.5668 334.426 li
18.1186 326.977 li
18.1186 326.169 li
18.5591 326.61 18.9998 327.05 19.4404 327.491 cv
19.4404 324.326 li
18.1186 323.004 li
18.1186 322.38 li
19.4404 323.702 li
19.4404 320.478 li
18.1186 319.156 li
18.1186 280.468 li
25.2505 273.336 li
81.266 273.336 li
82.5897 274.659 li
85.8139 274.659 li
84.4903 273.336 li
85.1143 273.336 li
86.438 274.659 li
89.603 274.659 li
88.2794 273.336 li
88.946 273.336 li
90.2697 274.659 li
93.4939 274.659 li
92.1703 273.336 li
92.7943 273.336 li
94.118 274.659 li
97.283 274.659 li
95.9594 273.336 li
130.831 273.336 li
132.154 274.659 li
135.378 274.659 li
134.055 273.336 li
134.679 273.336 li
136.002 274.659 li
139.167 274.659 li
137.844 273.336 li
138.94 273.336 li
146.086 280.482 li
146.086 281.578 li
cp
138.323 272.719 mo
137.227 272.719 li
134.062 272.719 li
133.438 272.719 li
130.214 272.719 li
95.3426 272.719 li
92.1776 272.719 li
91.5535 272.719 li
88.3293 272.719 li
87.6626 272.719 li
84.4976 272.719 li
83.8735 272.719 li
80.6492 272.719 li
25.8673 272.719 li
17.5021 272.719 li
17.5021 281.084 li
17.5021 318.539 li
17.5 318.537 li
17.5 321.762 li
17.5021 321.764 li
17.5021 322.388 li
17.5 322.386 li
17.5 325.551 li
17.5007 325.551 17.5014 325.552 17.5021 325.553 cv
17.5021 326.361 li
17.5 326.359 li
17.5 335.026 li
17.5021 335.026 li
17.5021 335.043 li
116.701 335.043 li
117.603 335.043 li
117.808 334.837 118.014 334.631 118.219 334.426 cv
127.714 324.931 137.208 315.437 146.702 305.943 cv
146.702 305.943 146.703 305.942 146.703 305.942 cv
146.703 289.208 li
146.703 285.984 li
146.703 285.36 li
146.703 282.195 li
146.703 281.099 li
146.703 272.719 li
138.323 272.719 li
cp
f
130.618 170.081 mo
32.4694 170.081 li
29.0728 170.081 26.3194 167.328 26.3194 163.932 cv
26.3194 160.535 29.0728 157.782 32.4694 157.782 cv
130.618 157.782 li
134.014 157.782 136.768 160.535 136.768 163.932 cv
136.768 167.328 134.014 170.081 130.618 170.081 cv
cp
144.952 161.447 mo
143.676 161.447 142.634 162.403 142.475 163.636 cv
137.397 163.636 li
137.24 160.027 134.264 157.137 130.618 157.137 cv
32.4694 157.137 li
28.8233 157.137 25.8474 160.026 25.6898 163.634 cv
20.4755 163.634 li
20.3154 162.402 19.2735 161.447 17.9979 161.447 cv
16.6115 161.447 15.4877 162.571 15.4877 163.957 cv
15.4877 165.343 16.6115 166.467 17.9979 166.467 cv
19.2741 166.467 20.3162 165.512 20.4757 164.279 cv
25.6924 164.279 li
25.8747 167.863 28.8399 170.726 32.4694 170.726 cv
130.618 170.726 li
134.247 170.726 137.211 167.864 137.395 164.28 cv
142.475 164.28 li
142.635 165.512 143.677 166.467 144.952 166.467 cv
146.339 166.467 147.463 165.344 147.463 163.957 cv
147.463 162.571 146.339 161.447 144.952 161.447 cv
cp
f
66.5815 163.864 mo
64.3718 158.782 li
61.1702 158.782 li
63.3799 163.864 li
61.1112 169.082 li
64.3129 169.082 li
66.5815 163.864 li
cp
58.0815 163.864 mo
55.8718 158.782 li
52.6702 158.782 li
54.8799 163.864 li
52.6112 169.082 li
55.8129 169.082 li
58.0815 163.864 li
cp
70.8315 163.864 mo
68.6218 158.782 li
65.4202 158.782 li
67.6299 163.864 li
65.3612 169.082 li
68.5629 169.082 li
70.8315 163.864 li
cp
75.0815 163.864 mo
72.8718 158.782 li
69.6702 158.782 li
71.8799 163.864 li
69.6112 169.082 li
72.8129 169.082 li
75.0815 163.864 li
cp
53.8315 163.864 mo
51.6218 158.782 li
48.4202 158.782 li
50.6299 163.864 li
48.3612 169.082 li
51.5629 169.082 li
53.8315 163.864 li
cp
62.3315 163.864 mo
60.1218 158.782 li
56.9202 158.782 li
59.1299 163.864 li
56.8612 169.082 li
60.0629 169.082 li
62.3315 163.864 li
cp
34.5629 169.082 mo
36.8315 163.864 li
34.6218 158.782 li
32.4692 158.782 li
29.6294 158.782 27.3193 161.092 27.3193 163.932 cv
27.3193 166.771 29.6294 169.082 32.4692 169.082 cv
34.5629 169.082 li
cp
76.1299 163.864 mo
73.8612 169.082 li
77.0629 169.082 li
79.3315 163.864 li
77.1218 158.782 li
73.9202 158.782 li
76.1299 163.864 li
cp
49.5815 163.864 mo
47.3718 158.782 li
44.1702 158.782 li
46.3799 163.864 li
44.1112 169.082 li
47.3129 169.082 li
49.5815 163.864 li
cp
45.3315 163.864 mo
43.1218 158.782 li
39.9202 158.782 li
42.1299 163.864 li
39.8612 169.082 li
43.0629 169.082 li
45.3315 163.864 li
cp
38.8129 169.082 mo
35.6112 169.082 li
37.8799 163.864 li
35.6702 158.782 li
38.8718 158.782 li
41.0815 163.864 li
38.8129 169.082 li
cp
f
177.538 158.623 mo
177.538 159.623 li
180.683 159.623 li
180.683 256.534 li
177.538 256.534 li
177.538 257.534 li
181.683 257.534 li
181.683 158.623 li
177.538 158.623 li
cp
f
173.146 256.534 mo
170.016 256.534 li
170.016 159.623 li
173.146 159.623 li
173.146 158.623 li
169.016 158.623 li
169.016 257.534 li
173.146 257.534 li
173.146 256.534 li
cp
f
171.016 255.534 mo
171.016 234.586 li
179.683 234.586 li
179.683 255.534 li
171.016 255.534 li
cp
f
203.953 221.717 mo
192.604 221.717 li
192.604 218.604 li
203.953 218.604 li
203.953 221.717 li
cp
f
200.873 225.453 mo
195.684 225.453 li
195.684 222.34 li
200.873 222.34 li
200.873 225.453 li
cp
f
200.873 229.397 mo
195.684 229.397 li
195.684 226.284 li
200.873 226.284 li
200.873 229.397 li
cp
f
200.873 233.341 mo
195.684 233.341 li
195.684 230.228 li
200.873 230.228 li
200.873 233.341 li
cp
f
200.873 237.285 mo
195.684 237.285 li
195.684 234.171 li
200.873 234.171 li
200.873 237.285 li
cp
f
200.873 241.229 mo
195.684 241.229 li
195.684 238.115 li
200.873 238.115 li
200.873 241.229 li
cp
f
200.873 245.172 mo
195.684 245.172 li
195.684 242.059 li
200.873 242.059 li
200.873 245.172 li
cp
f
200.873 249.116 mo
195.684 249.116 li
195.684 246.003 li
200.873 246.003 li
200.873 249.116 li
cp
f
200.873 253.06 mo
195.684 253.06 li
195.684 249.946 li
200.873 249.946 li
200.873 253.06 li
cp
f
200.873 257.004 mo
195.684 257.004 li
195.684 253.89 li
200.873 253.89 li
200.873 257.004 li
cp
f
203.702 257.419 mo
192.909 257.419 li
192.909 158.811 li
203.702 158.811 li
203.702 257.419 li
cp
191.909 157.811 mo
191.909 258.419 li
204.702 258.419 li
204.702 157.811 li
191.909 157.811 li
cp
f
226.016 257.419 mo
215.222 257.419 li
215.222 158.811 li
226.016 158.811 li
226.016 257.419 li
cp
214.222 157.811 mo
214.222 258.419 li
227.016 258.419 li
227.016 157.811 li
214.222 157.811 li
cp
f
225.016 256.499 mo
225.016 246.798 li
216.223 255.591 li
216.223 256.499 li
225.016 256.499 li
cp
f
225.016 245.35 mo
225.016 241.838 li
216.223 250.631 li
216.223 254.143 li
219.154 251.212 222.085 248.281 225.016 245.35 cv
cp
f
225.016 240.323 mo
225.016 236.811 li
216.223 245.604 li
216.223 249.116 li
219.154 246.185 222.085 243.254 225.016 240.323 cv
cp
f
225.016 235.296 mo
225.016 231.784 li
216.223 240.577 li
216.223 244.089 li
219.154 241.158 222.085 238.227 225.016 235.296 cv
cp
f
225.016 230.269 mo
225.016 226.757 li
216.223 235.55 li
216.223 239.062 li
219.154 236.131 222.085 233.2 225.016 230.269 cv
cp
f
225.016 225.242 mo
225.016 221.73 li
216.223 230.523 li
216.223 234.035 li
219.154 231.104 222.085 228.173 225.016 225.242 cv
cp
f
225.016 220.215 mo
225.016 216.703 li
216.223 225.496 li
216.223 229.008 li
219.154 226.077 222.085 223.146 225.016 220.215 cv
cp
f
225.016 215.188 mo
225.016 211.676 li
216.223 220.469 li
216.223 223.981 li
219.154 221.05 222.085 218.119 225.016 215.188 cv
cp
f
225.016 210.161 mo
225.016 206.648 li
216.223 215.442 li
216.223 218.954 li
219.154 216.023 222.085 213.092 225.016 210.161 cv
cp
f
225.016 205.134 mo
225.016 201.621 li
216.223 210.415 li
216.223 213.927 li
219.154 210.996 222.085 208.065 225.016 205.134 cv
cp
f
225.016 200.107 mo
225.016 196.594 li
216.223 205.388 li
216.223 208.9 li
219.154 205.969 222.085 203.038 225.016 200.107 cv
cp
f
225.016 195.08 mo
225.016 191.567 li
216.223 200.361 li
216.223 203.873 li
219.154 200.942 222.085 198.011 225.016 195.08 cv
cp
f
225.016 190.053 mo
225.016 186.54 li
216.223 195.334 li
216.223 198.846 li
219.154 195.915 222.085 192.984 225.016 190.053 cv
cp
f
225.016 185.026 mo
225.016 181.513 li
216.223 190.307 li
216.223 193.819 li
219.154 190.888 222.085 187.957 225.016 185.026 cv
cp
f
184.971 334.343 mo
182.403 331.235 li
174.9 340.318 li
180.421 340.318 li
184.971 334.343 li
cp
f
195.942 328.446 mo
193.244 324.904 li
181.506 340.318 li
187.033 340.318 li
195.942 328.446 li
cp
f
212.512 325.701 mo
205.796 316.75 li
188.113 340.318 li
204.072 340.318 li
212.512 325.701 li
cp
f
205.069 340.318 mo
216.103 321.207 li
227.137 340.318 li
205.069 340.318 li
cp
f
227.224 342.736 mo
174.703 342.736 li
174.703 342.075 li
227.224 342.075 li
227.224 342.736 li
cp
f
231.787 343.073 mo
231.787 344.165 230.898 345.054 229.805 345.054 cv
173.324 345.054 li
172.231 345.054 171.342 344.165 171.342 343.073 cv
171.342 316.274 li
171.342 315.182 172.231 314.293 173.324 314.293 cv
229.805 314.293 li
230.898 314.293 231.787 315.182 231.787 316.274 cv
231.787 343.073 li
cp
230.582 313.731 mo
172.546 313.731 li
171.423 313.731 170.51 314.645 170.51 315.768 cv
170.51 343.579 li
170.51 344.702 171.423 345.616 172.546 345.616 cv
230.582 345.616 li
231.705 345.616 232.619 344.702 232.619 343.579 cv
232.619 315.768 li
232.619 314.645 231.705 313.731 230.582 313.731 cv
cp
f
404.111 158.751 mo
309.116 158.751 li
309.116 164.858 li
404.111 164.858 li
404.111 158.751 li
cp
404.789 158.072 mo
404.789 165.536 li
308.438 165.536 li
308.438 158.072 li
404.789 158.072 li
cp
309.116 173 mo
404.111 173 li
404.111 166.893 li
309.116 166.893 li
309.116 173 li
cp
308.438 166.215 mo
404.789 166.215 li
404.789 173.679 li
308.438 173.679 li
308.438 166.215 li
cp
309.116 213.712 mo
404.111 213.712 li
404.111 207.605 li
309.116 207.605 li
309.116 213.712 li
cp
308.438 206.927 mo
404.789 206.927 li
404.789 214.391 li
308.438 214.391 li
308.438 206.927 li
cp
309.116 181.142 mo
404.111 181.142 li
404.111 175.036 li
309.116 175.036 li
309.116 181.142 li
cp
308.438 174.357 mo
404.789 174.357 li
404.789 181.821 li
308.438 181.821 li
308.438 174.357 li
cp
309.116 197.427 mo
404.111 197.427 li
404.111 191.32 li
309.116 191.32 li
309.116 197.427 li
cp
308.438 190.642 mo
404.789 190.642 li
404.789 198.106 li
308.438 198.106 li
308.438 190.642 li
cp
309.116 205.57 mo
404.111 205.57 li
404.111 199.463 li
309.116 199.463 li
309.116 205.57 li
cp
308.438 198.784 mo
404.789 198.784 li
404.789 206.248 li
308.438 206.248 li
308.438 198.784 li
cp
309.116 189.285 mo
404.111 189.285 li
404.111 183.178 li
309.116 183.178 li
309.116 189.285 li
cp
308.438 182.5 mo
404.789 182.5 li
404.789 189.963 li
308.438 189.963 li
308.438 182.5 li
cp
309.795 213.033 mo
394.364 213.033 li
394.364 208.284 li
309.795 208.284 li
309.795 213.033 li
cp
309.795 204.891 mo
327.068 204.891 li
327.068 200.141 li
309.795 200.141 li
309.795 204.891 li
cp
309.795 196.749 mo
352.476 196.749 li
352.476 191.999 li
309.795 191.999 li
309.795 196.749 li
cp
309.795 188.606 mo
366.761 188.606 li
366.761 183.857 li
309.795 183.857 li
309.795 188.606 li
cp
309.795 180.464 mo
374.7 180.464 li
374.7 175.714 li
309.795 175.714 li
309.795 180.464 li
cp
309.795 172.322 mo
340.869 172.322 li
340.869 167.572 li
309.795 167.572 li
309.795 172.322 li
cp
317.908 164.179 mo
309.795 164.179 li
309.795 159.429 li
317.908 159.429 li
317.908 164.179 li
cp
f
415.061 251.716 mo
411.384 251.716 li
413.93 256.126 li
411.384 260.535 li
415.061 260.535 li
417.606 256.126 li
415.061 251.716 li
cp
f
419.4 251.716 mo
415.723 251.716 li
418.269 256.126 li
415.723 260.535 li
419.4 260.535 li
421.945 256.126 li
419.4 251.716 li
cp
f
423.739 251.716 mo
420.063 251.716 li
422.608 256.126 li
420.063 260.535 li
423.739 260.535 li
426.284 256.126 li
423.739 251.716 li
cp
f
428.078 251.716 mo
424.402 251.716 li
426.947 256.126 li
424.402 260.535 li
428.078 260.535 li
430.624 256.126 li
428.078 251.716 li
cp
f
432.417 251.716 mo
428.741 251.716 li
431.286 256.126 li
428.741 260.535 li
432.417 260.535 li
434.963 256.126 li
432.417 251.716 li
cp
f
436.756 251.716 mo
433.08 251.716 li
435.626 256.126 li
433.08 260.535 li
436.756 260.535 li
439.302 256.126 li
436.756 251.716 li
cp
f
441.095 251.716 mo
437.419 251.716 li
439.965 256.126 li
437.419 260.535 li
441.095 260.535 li
443.641 256.126 li
441.095 251.716 li
cp
f
445.434 251.716 mo
441.758 251.716 li
444.304 256.126 li
441.758 260.535 li
445.434 260.535 li
447.98 256.126 li
445.434 251.716 li
cp
f
449.489 260.042 mo
446.95 260.042 li
449.211 256.126 li
446.95 252.209 li
449.489 252.209 li
451.751 256.126 li
449.489 260.042 li
cp
449.773 251.716 mo
446.097 251.716 li
448.643 256.126 li
446.097 260.535 li
449.773 260.535 li
452.319 256.126 li
449.773 251.716 li
cp
f
453.828 260.042 mo
451.289 260.042 li
453.551 256.126 li
451.289 252.209 li
453.828 252.209 li
456.09 256.126 li
453.828 260.042 li
cp
454.113 251.716 mo
450.436 251.716 li
452.982 256.126 li
450.436 260.535 li
454.113 260.535 li
456.658 256.126 li
454.113 251.716 li
cp
f
458.168 260.042 mo
455.628 260.042 li
457.89 256.126 li
455.628 252.209 li
458.168 252.209 li
460.429 256.126 li
458.168 260.042 li
cp
458.452 251.716 mo
454.776 251.716 li
457.321 256.126 li
454.776 260.535 li
458.452 260.535 li
460.997 256.126 li
458.452 251.716 li
cp
f
462.507 260.042 mo
459.967 260.042 li
462.229 256.126 li
459.967 252.209 li
462.507 252.209 li
464.768 256.126 li
462.507 260.042 li
cp
462.791 251.716 mo
459.115 251.716 li
461.66 256.126 li
459.115 260.535 li
462.791 260.535 li
465.336 256.126 li
462.791 251.716 li
cp
f
466.846 260.042 mo
464.306 260.042 li
466.568 256.126 li
464.306 252.209 li
466.846 252.209 li
469.107 256.126 li
466.846 260.042 li
cp
467.13 251.716 mo
463.454 251.716 li
465.999 256.126 li
463.454 260.535 li
467.13 260.535 li
469.676 256.126 li
467.13 251.716 li
cp
f
471.232 260.042 mo
468.693 260.042 li
470.954 256.126 li
468.693 252.209 li
471.232 252.209 li
473.494 256.126 li
471.232 260.042 li
cp
471.516 251.716 mo
467.84 251.716 li
470.386 256.126 li
467.84 260.535 li
471.516 260.535 li
474.062 256.126 li
471.516 251.716 li
cp
f
475.571 260.042 mo
473.032 260.042 li
475.293 256.126 li
473.032 252.209 li
475.571 252.209 li
477.833 256.126 li
475.571 260.042 li
cp
475.855 251.716 mo
472.179 251.716 li
474.725 256.126 li
472.179 260.535 li
475.855 260.535 li
478.401 256.126 li
475.855 251.716 li
cp
f
479.91 260.042 mo
477.371 260.042 li
479.633 256.126 li
477.371 252.209 li
479.91 252.209 li
482.172 256.126 li
479.91 260.042 li
cp
480.195 251.716 mo
476.518 251.716 li
479.064 256.126 li
476.518 260.535 li
480.195 260.535 li
482.74 256.126 li
480.195 251.716 li
cp
f
484.25 260.042 mo
481.71 260.042 li
483.972 256.126 li
481.71 252.209 li
484.25 252.209 li
486.511 256.126 li
484.25 260.042 li
cp
484.534 251.716 mo
480.858 251.716 li
483.403 256.126 li
480.858 260.535 li
484.534 260.535 li
487.079 256.126 li
484.534 251.716 li
cp
f
488.589 260.042 mo
486.049 260.042 li
488.311 256.126 li
486.049 252.209 li
488.589 252.209 li
490.85 256.126 li
488.589 260.042 li
cp
488.873 251.716 mo
485.197 251.716 li
487.742 256.126 li
485.197 260.535 li
488.873 260.535 li
491.418 256.126 li
488.873 251.716 li
cp
f
492.928 260.042 mo
490.388 260.042 li
492.65 256.126 li
490.388 252.209 li
492.928 252.209 li
495.189 256.126 li
492.928 260.042 li
cp
493.212 251.716 mo
489.536 251.716 li
492.081 256.126 li
489.536 260.535 li
493.212 260.535 li
495.758 256.126 li
493.212 251.716 li
cp
f
497.267 260.042 mo
494.728 260.042 li
496.989 256.126 li
494.728 252.209 li
497.267 252.209 li
499.528 256.126 li
497.267 260.042 li
cp
497.551 251.716 mo
493.875 251.716 li
496.421 256.126 li
493.875 260.535 li
497.551 260.535 li
500.097 256.126 li
497.551 251.716 li
cp
f
501.606 260.042 mo
499.067 260.042 li
501.328 256.126 li
499.067 252.209 li
501.606 252.209 li
503.867 256.126 li
501.606 260.042 li
cp
501.89 251.716 mo
498.214 251.716 li
500.76 256.126 li
498.214 260.535 li
501.89 260.535 li
504.436 256.126 li
501.89 251.716 li
cp
f
505.945 260.042 mo
503.406 260.042 li
505.667 256.126 li
503.406 252.209 li
505.945 252.209 li
508.207 256.126 li
505.945 260.042 li
cp
506.229 251.716 mo
502.553 251.716 li
505.099 256.126 li
502.553 260.535 li
506.229 260.535 li
508.775 256.126 li
506.229 251.716 li
cp
f
510.284 260.042 mo
507.745 260.042 li
510.006 256.126 li
507.745 252.209 li
510.284 252.209 li
512.546 256.126 li
510.284 260.042 li
cp
510.568 251.716 mo
506.892 251.716 li
509.438 256.126 li
506.892 260.535 li
510.568 260.535 li
513.114 256.126 li
510.568 251.716 li
cp
f
514.623 260.042 mo
512.084 260.042 li
514.346 256.126 li
512.084 252.209 li
514.623 252.209 li
516.885 256.126 li
514.623 260.042 li
cp
514.908 251.716 mo
511.231 251.716 li
513.777 256.126 li
511.231 260.535 li
514.908 260.535 li
517.453 256.126 li
514.908 251.716 li
cp
f
338.279 330.134 mo
337.106 330.134 336.155 331.085 336.155 332.257 cv
336.155 333.43 337.106 334.381 338.279 334.381 cv
339.451 334.381 340.402 333.43 340.402 332.257 cv
340.402 331.085 339.451 330.134 338.279 330.134 cv
cp
f
338.279 324.882 mo
337.106 324.882 336.155 325.832 336.155 327.005 cv
336.155 328.178 337.106 329.128 338.279 329.128 cv
339.451 329.128 340.402 328.178 340.402 327.005 cv
340.402 325.832 339.451 324.882 338.279 324.882 cv
cp
f
338.279 322.982 mo
337.601 322.982 337.049 322.43 337.049 321.752 cv
337.049 321.075 337.601 320.523 338.279 320.523 cv
338.957 320.523 339.508 321.075 339.508 321.752 cv
339.508 322.43 338.957 322.982 338.279 322.982 cv
cp
338.279 319.629 mo
337.106 319.629 336.155 320.58 336.155 321.752 cv
336.155 322.925 337.106 323.876 338.279 323.876 cv
339.451 323.876 340.402 322.925 340.402 321.752 cv
340.402 320.58 339.451 319.629 338.279 319.629 cv
cp
f
338.279 317.729 mo
337.601 317.729 337.049 317.178 337.049 316.5 cv
337.049 315.822 337.601 315.271 338.279 315.271 cv
338.957 315.271 339.508 315.822 339.508 316.5 cv
339.508 317.178 338.957 317.729 338.279 317.729 cv
cp
338.279 314.377 mo
337.106 314.377 336.155 315.327 336.155 316.5 cv
336.155 317.673 337.106 318.623 338.279 318.623 cv
339.451 318.623 340.402 317.673 340.402 316.5 cv
340.402 315.327 339.451 314.377 338.279 314.377 cv
cp
f
338.279 312.477 mo
337.601 312.477 337.049 311.925 337.049 311.248 cv
337.049 310.57 337.601 310.018 338.279 310.018 cv
338.957 310.018 339.508 310.57 339.508 311.248 cv
339.508 311.925 338.957 312.477 338.279 312.477 cv
cp
338.279 309.124 mo
337.106 309.124 336.155 310.075 336.155 311.248 cv
336.155 312.42 337.106 313.371 338.279 313.371 cv
339.451 313.371 340.402 312.42 340.402 311.248 cv
340.402 310.075 339.451 309.124 338.279 309.124 cv
cp
f
338.279 307.224 mo
337.601 307.224 337.049 306.673 337.049 305.995 cv
337.049 305.317 337.601 304.766 338.279 304.766 cv
338.957 304.766 339.508 305.317 339.508 305.995 cv
339.508 306.673 338.957 307.224 338.279 307.224 cv
cp
338.279 303.872 mo
337.106 303.872 336.155 304.822 336.155 305.995 cv
336.155 307.168 337.106 308.118 338.279 308.118 cv
339.451 308.118 340.402 307.168 340.402 305.995 cv
340.402 304.822 339.451 303.872 338.279 303.872 cv
cp
f
338.279 301.972 mo
337.601 301.972 337.049 301.421 337.049 300.743 cv
337.049 300.065 337.601 299.513 338.279 299.513 cv
338.957 299.513 339.508 300.065 339.508 300.743 cv
339.508 301.421 338.957 301.972 338.279 301.972 cv
cp
338.279 298.619 mo
337.106 298.619 336.155 299.57 336.155 300.743 cv
336.155 301.915 337.106 302.866 338.279 302.866 cv
339.451 302.866 340.402 301.915 340.402 300.743 cv
340.402 299.57 339.451 298.619 338.279 298.619 cv
cp
f
338.279 296.719 mo
337.601 296.719 337.049 296.168 337.049 295.49 cv
337.049 294.812 337.601 294.261 338.279 294.261 cv
338.957 294.261 339.508 294.812 339.508 295.49 cv
339.508 296.168 338.957 296.719 338.279 296.719 cv
cp
338.279 293.367 mo
337.106 293.367 336.155 294.317 336.155 295.49 cv
336.155 296.663 337.106 297.613 338.279 297.613 cv
339.451 297.613 340.402 296.663 340.402 295.49 cv
340.402 294.317 339.451 293.367 338.279 293.367 cv
cp
f
338.279 291.467 mo
337.601 291.467 337.049 290.916 337.049 290.238 cv
337.049 289.56 337.601 289.008 338.279 289.008 cv
338.957 289.008 339.508 289.56 339.508 290.238 cv
339.508 290.916 338.957 291.467 338.279 291.467 cv
cp
338.279 288.114 mo
337.106 288.114 336.155 289.065 336.155 290.238 cv
336.155 291.41 337.106 292.361 338.279 292.361 cv
339.451 292.361 340.402 291.41 340.402 290.238 cv
340.402 289.065 339.451 288.114 338.279 288.114 cv
cp
f
338.279 286.214 mo
337.601 286.214 337.049 285.663 337.049 284.985 cv
337.049 284.307 337.601 283.756 338.279 283.756 cv
338.957 283.756 339.508 284.307 339.508 284.985 cv
339.508 285.663 338.957 286.214 338.279 286.214 cv
cp
338.279 282.862 mo
337.106 282.862 336.155 283.812 336.155 284.985 cv
336.155 286.158 337.106 287.108 338.279 287.108 cv
339.451 287.108 340.402 286.158 340.402 284.985 cv
340.402 283.812 339.451 282.862 338.279 282.862 cv
cp
f
343.085 330.134 mo
341.912 330.134 340.962 331.085 340.962 332.257 cv
340.962 333.43 341.912 334.381 343.085 334.381 cv
344.258 334.381 345.208 333.43 345.208 332.257 cv
345.208 331.085 344.258 330.134 343.085 330.134 cv
cp
f
343.085 324.882 mo
341.912 324.882 340.962 325.832 340.962 327.005 cv
340.962 328.178 341.912 329.128 343.085 329.128 cv
344.258 329.128 345.208 328.178 345.208 327.005 cv
345.208 325.832 344.258 324.882 343.085 324.882 cv
cp
f
343.085 319.629 mo
341.912 319.629 340.962 320.58 340.962 321.752 cv
340.962 322.925 341.912 323.876 343.085 323.876 cv
344.258 323.876 345.208 322.925 345.208 321.752 cv
345.208 320.58 344.258 319.629 343.085 319.629 cv
cp
f
343.085 317.729 mo
342.407 317.729 341.856 317.178 341.856 316.5 cv
341.856 315.822 342.407 315.271 343.085 315.271 cv
343.763 315.271 344.314 315.822 344.314 316.5 cv
344.314 317.178 343.763 317.729 343.085 317.729 cv
cp
343.085 314.377 mo
341.912 314.377 340.962 315.327 340.962 316.5 cv
340.962 317.673 341.912 318.623 343.085 318.623 cv
344.258 318.623 345.208 317.673 345.208 316.5 cv
345.208 315.327 344.258 314.377 343.085 314.377 cv
cp
f
343.085 312.477 mo
342.407 312.477 341.856 311.925 341.856 311.248 cv
341.856 310.57 342.407 310.018 343.085 310.018 cv
343.763 310.018 344.314 310.57 344.314 311.248 cv
344.314 311.925 343.763 312.477 343.085 312.477 cv
cp
343.085 309.124 mo
341.912 309.124 340.962 310.075 340.962 311.248 cv
340.962 312.42 341.912 313.371 343.085 313.371 cv
344.258 313.371 345.208 312.42 345.208 311.248 cv
345.208 310.075 344.258 309.124 343.085 309.124 cv
cp
f
343.085 307.224 mo
342.407 307.224 341.856 306.673 341.856 305.995 cv
341.856 305.317 342.407 304.766 343.085 304.766 cv
343.763 304.766 344.314 305.317 344.314 305.995 cv
344.314 306.673 343.763 307.224 343.085 307.224 cv
cp
343.085 303.872 mo
341.912 303.872 340.962 304.822 340.962 305.995 cv
340.962 307.168 341.912 308.118 343.085 308.118 cv
344.258 308.118 345.208 307.168 345.208 305.995 cv
345.208 304.822 344.258 303.872 343.085 303.872 cv
cp
f
343.085 301.972 mo
342.407 301.972 341.856 301.421 341.856 300.743 cv
341.856 300.065 342.407 299.513 343.085 299.513 cv
343.763 299.513 344.314 300.065 344.314 300.743 cv
344.314 301.421 343.763 301.972 343.085 301.972 cv
cp
343.085 298.619 mo
341.912 298.619 340.962 299.57 340.962 300.743 cv
340.962 301.915 341.912 302.866 343.085 302.866 cv
344.258 302.866 345.208 301.915 345.208 300.743 cv
345.208 299.57 344.258 298.619 343.085 298.619 cv
cp
f
343.085 296.719 mo
342.407 296.719 341.856 296.168 341.856 295.49 cv
341.856 294.812 342.407 294.261 343.085 294.261 cv
343.763 294.261 344.314 294.812 344.314 295.49 cv
344.314 296.168 343.763 296.719 343.085 296.719 cv
cp
343.085 293.367 mo
341.912 293.367 340.962 294.317 340.962 295.49 cv
340.962 296.663 341.912 297.613 343.085 297.613 cv
344.258 297.613 345.208 296.663 345.208 295.49 cv
345.208 294.317 344.258 293.367 343.085 293.367 cv
cp
f
343.085 291.467 mo
342.407 291.467 341.856 290.916 341.856 290.238 cv
341.856 289.56 342.407 289.008 343.085 289.008 cv
343.763 289.008 344.314 289.56 344.314 290.238 cv
344.314 290.916 343.763 291.467 343.085 291.467 cv
cp
343.085 288.114 mo
341.912 288.114 340.962 289.065 340.962 290.238 cv
340.962 291.41 341.912 292.361 343.085 292.361 cv
344.258 292.361 345.208 291.41 345.208 290.238 cv
345.208 289.065 344.258 288.114 343.085 288.114 cv
cp
f
343.085 286.214 mo
342.407 286.214 341.856 285.663 341.856 284.985 cv
341.856 284.307 342.407 283.756 343.085 283.756 cv
343.763 283.756 344.314 284.307 344.314 284.985 cv
344.314 285.663 343.763 286.214 343.085 286.214 cv
cp
343.085 282.862 mo
341.912 282.862 340.962 283.812 340.962 284.985 cv
340.962 286.158 341.912 287.108 343.085 287.108 cv
344.258 287.108 345.208 286.158 345.208 284.985 cv
345.208 283.812 344.258 282.862 343.085 282.862 cv
cp
f
347.891 330.134 mo
346.719 330.134 345.768 331.085 345.768 332.257 cv
345.768 333.43 346.719 334.381 347.891 334.381 cv
349.064 334.381 350.015 333.43 350.015 332.257 cv
350.015 331.085 349.064 330.134 347.891 330.134 cv
cp
f
347.891 324.882 mo
346.719 324.882 345.768 325.832 345.768 327.005 cv
345.768 328.178 346.719 329.128 347.891 329.128 cv
349.064 329.128 350.015 328.178 350.015 327.005 cv
350.015 325.832 349.064 324.882 347.891 324.882 cv
cp
f
347.891 319.629 mo
346.719 319.629 345.768 320.58 345.768 321.752 cv
345.768 322.925 346.719 323.876 347.891 323.876 cv
349.064 323.876 350.015 322.925 350.015 321.752 cv
350.015 320.58 349.064 319.629 347.891 319.629 cv
cp
f
347.891 314.377 mo
346.719 314.377 345.768 315.327 345.768 316.5 cv
345.768 317.673 346.719 318.623 347.891 318.623 cv
349.064 318.623 350.015 317.673 350.015 316.5 cv
350.015 315.327 349.064 314.377 347.891 314.377 cv
cp
f
347.891 309.124 mo
346.719 309.124 345.768 310.075 345.768 311.248 cv
345.768 312.42 346.719 313.371 347.891 313.371 cv
349.064 313.371 350.015 312.42 350.015 311.248 cv
350.015 310.075 349.064 309.124 347.891 309.124 cv
cp
f
347.891 303.872 mo
346.719 303.872 345.768 304.822 345.768 305.995 cv
345.768 307.168 346.719 308.118 347.891 308.118 cv
349.064 308.118 350.015 307.168 350.015 305.995 cv
350.015 304.822 349.064 303.872 347.891 303.872 cv
cp
f
347.891 301.972 mo
347.213 301.972 346.662 301.421 346.662 300.743 cv
346.662 300.065 347.213 299.513 347.891 299.513 cv
348.569 299.513 349.121 300.065 349.121 300.743 cv
349.121 301.421 348.569 301.972 347.891 301.972 cv
cp
347.891 298.619 mo
346.719 298.619 345.768 299.57 345.768 300.743 cv
345.768 301.915 346.719 302.866 347.891 302.866 cv
349.064 302.866 350.015 301.915 350.015 300.743 cv
350.015 299.57 349.064 298.619 347.891 298.619 cv
cp
f
347.891 296.719 mo
347.213 296.719 346.662 296.168 346.662 295.49 cv
346.662 294.812 347.213 294.261 347.891 294.261 cv
348.569 294.261 349.121 294.812 349.121 295.49 cv
349.121 296.168 348.569 296.719 347.891 296.719 cv
cp
347.891 293.367 mo
346.719 293.367 345.768 294.317 345.768 295.49 cv
345.768 296.663 346.719 297.613 347.891 297.613 cv
349.064 297.613 350.015 296.663 350.015 295.49 cv
350.015 294.317 349.064 293.367 347.891 293.367 cv
cp
f
347.891 291.467 mo
347.213 291.467 346.662 290.916 346.662 290.238 cv
346.662 289.56 347.213 289.008 347.891 289.008 cv
348.569 289.008 349.121 289.56 349.121 290.238 cv
349.121 290.916 348.569 291.467 347.891 291.467 cv
cp
347.891 288.114 mo
346.719 288.114 345.768 289.065 345.768 290.238 cv
345.768 291.41 346.719 292.361 347.891 292.361 cv
349.064 292.361 350.015 291.41 350.015 290.238 cv
350.015 289.065 349.064 288.114 347.891 288.114 cv
cp
f
347.891 286.214 mo
347.213 286.214 346.662 285.663 346.662 284.985 cv
346.662 284.307 347.213 283.756 347.891 283.756 cv
348.569 283.756 349.121 284.307 349.121 284.985 cv
349.121 285.663 348.569 286.214 347.891 286.214 cv
cp
347.891 282.862 mo
346.719 282.862 345.768 283.812 345.768 284.985 cv
345.768 286.158 346.719 287.108 347.891 287.108 cv
349.064 287.108 350.015 286.158 350.015 284.985 cv
350.015 283.812 349.064 282.862 347.891 282.862 cv
cp
f
352.698 330.134 mo
351.525 330.134 350.574 331.085 350.574 332.257 cv
350.574 333.43 351.525 334.381 352.698 334.381 cv
353.87 334.381 354.821 333.43 354.821 332.257 cv
354.821 331.085 353.87 330.134 352.698 330.134 cv
cp
f
352.698 324.882 mo
351.525 324.882 350.574 325.832 350.574 327.005 cv
350.574 328.178 351.525 329.128 352.698 329.128 cv
353.87 329.128 354.821 328.178 354.821 327.005 cv
354.821 325.832 353.87 324.882 352.698 324.882 cv
cp
f
352.698 319.629 mo
351.525 319.629 350.574 320.58 350.574 321.752 cv
350.574 322.925 351.525 323.876 352.698 323.876 cv
353.87 323.876 354.821 322.925 354.821 321.752 cv
354.821 320.58 353.87 319.629 352.698 319.629 cv
cp
f
352.698 314.377 mo
351.525 314.377 350.574 315.327 350.574 316.5 cv
350.574 317.673 351.525 318.623 352.698 318.623 cv
353.87 318.623 354.821 317.673 354.821 316.5 cv
354.821 315.327 353.87 314.377 352.698 314.377 cv
cp
f
352.698 309.124 mo
351.525 309.124 350.574 310.075 350.574 311.248 cv
350.574 312.42 351.525 313.371 352.698 313.371 cv
353.87 313.371 354.821 312.42 354.821 311.248 cv
354.821 310.075 353.87 309.124 352.698 309.124 cv
cp
f
352.698 303.872 mo
351.525 303.872 350.574 304.822 350.574 305.995 cv
350.574 307.168 351.525 308.118 352.698 308.118 cv
353.87 308.118 354.821 307.168 354.821 305.995 cv
354.821 304.822 353.87 303.872 352.698 303.872 cv
cp
f
352.698 298.619 mo
351.525 298.619 350.574 299.57 350.574 300.743 cv
350.574 301.915 351.525 302.866 352.698 302.866 cv
353.87 302.866 354.821 301.915 354.821 300.743 cv
354.821 299.57 353.87 298.619 352.698 298.619 cv
cp
f
352.698 296.719 mo
352.02 296.719 351.468 296.168 351.468 295.49 cv
351.468 294.812 352.02 294.261 352.698 294.261 cv
353.376 294.261 353.927 294.812 353.927 295.49 cv
353.927 296.168 353.376 296.719 352.698 296.719 cv
cp
352.698 293.367 mo
351.525 293.367 350.574 294.317 350.574 295.49 cv
350.574 296.663 351.525 297.613 352.698 297.613 cv
353.87 297.613 354.821 296.663 354.821 295.49 cv
354.821 294.317 353.87 293.367 352.698 293.367 cv
cp
f
352.698 291.467 mo
352.02 291.467 351.468 290.916 351.468 290.238 cv
351.468 289.56 352.02 289.008 352.698 289.008 cv
353.376 289.008 353.927 289.56 353.927 290.238 cv
353.927 290.916 353.376 291.467 352.698 291.467 cv
cp
352.698 288.114 mo
351.525 288.114 350.574 289.065 350.574 290.238 cv
350.574 291.41 351.525 292.361 352.698 292.361 cv
353.87 292.361 354.821 291.41 354.821 290.238 cv
354.821 289.065 353.87 288.114 352.698 288.114 cv
cp
f
352.698 286.214 mo
352.02 286.214 351.468 285.663 351.468 284.985 cv
351.468 284.307 352.02 283.756 352.698 283.756 cv
353.376 283.756 353.927 284.307 353.927 284.985 cv
353.927 285.663 353.376 286.214 352.698 286.214 cv
cp
352.698 282.862 mo
351.525 282.862 350.574 283.812 350.574 284.985 cv
350.574 286.158 351.525 287.108 352.698 287.108 cv
353.87 287.108 354.821 286.158 354.821 284.985 cv
354.821 283.812 353.87 282.862 352.698 282.862 cv
cp
f
357.504 330.134 mo
356.331 330.134 355.381 331.085 355.381 332.257 cv
355.381 333.43 356.331 334.381 357.504 334.381 cv
358.677 334.381 359.627 333.43 359.627 332.257 cv
359.627 331.085 358.677 330.134 357.504 330.134 cv
cp
f
357.504 324.882 mo
356.331 324.882 355.381 325.832 355.381 327.005 cv
355.381 328.178 356.331 329.128 357.504 329.128 cv
358.677 329.128 359.627 328.178 359.627 327.005 cv
359.627 325.832 358.677 324.882 357.504 324.882 cv
cp
f
357.504 319.629 mo
356.331 319.629 355.381 320.58 355.381 321.752 cv
355.381 322.925 356.331 323.876 357.504 323.876 cv
358.677 323.876 359.627 322.925 359.627 321.752 cv
359.627 320.58 358.677 319.629 357.504 319.629 cv
cp
f
357.504 314.377 mo
356.331 314.377 355.381 315.327 355.381 316.5 cv
355.381 317.673 356.331 318.623 357.504 318.623 cv
358.677 318.623 359.627 317.673 359.627 316.5 cv
359.627 315.327 358.677 314.377 357.504 314.377 cv
cp
f
357.504 309.124 mo
356.331 309.124 355.381 310.075 355.381 311.248 cv
355.381 312.42 356.331 313.371 357.504 313.371 cv
358.677 313.371 359.627 312.42 359.627 311.248 cv
359.627 310.075 358.677 309.124 357.504 309.124 cv
cp
f
357.504 303.872 mo
356.331 303.872 355.381 304.822 355.381 305.995 cv
355.381 307.168 356.331 308.118 357.504 308.118 cv
358.677 308.118 359.627 307.168 359.627 305.995 cv
359.627 304.822 358.677 303.872 357.504 303.872 cv
cp
f
357.504 301.972 mo
356.826 301.972 356.275 301.421 356.275 300.743 cv
356.275 300.065 356.826 299.513 357.504 299.513 cv
358.182 299.513 358.733 300.065 358.733 300.743 cv
358.733 301.421 358.182 301.972 357.504 301.972 cv
cp
357.504 298.619 mo
356.331 298.619 355.381 299.57 355.381 300.743 cv
355.381 301.915 356.331 302.866 357.504 302.866 cv
358.677 302.866 359.627 301.915 359.627 300.743 cv
359.627 299.57 358.677 298.619 357.504 298.619 cv
cp
f
357.504 296.719 mo
356.826 296.719 356.275 296.168 356.275 295.49 cv
356.275 294.812 356.826 294.261 357.504 294.261 cv
358.182 294.261 358.733 294.812 358.733 295.49 cv
358.733 296.168 358.182 296.719 357.504 296.719 cv
cp
357.504 293.367 mo
356.331 293.367 355.381 294.317 355.381 295.49 cv
355.381 296.663 356.331 297.613 357.504 297.613 cv
358.677 297.613 359.627 296.663 359.627 295.49 cv
359.627 294.317 358.677 293.367 357.504 293.367 cv
cp
f
357.504 291.467 mo
356.826 291.467 356.275 290.916 356.275 290.238 cv
356.275 289.56 356.826 289.008 357.504 289.008 cv
358.182 289.008 358.733 289.56 358.733 290.238 cv
358.733 290.916 358.182 291.467 357.504 291.467 cv
cp
357.504 288.114 mo
356.331 288.114 355.381 289.065 355.381 290.238 cv
355.381 291.41 356.331 292.361 357.504 292.361 cv
358.677 292.361 359.627 291.41 359.627 290.238 cv
359.627 289.065 358.677 288.114 357.504 288.114 cv
cp
f
357.504 286.214 mo
356.826 286.214 356.275 285.663 356.275 284.985 cv
356.275 284.307 356.826 283.756 357.504 283.756 cv
358.182 283.756 358.733 284.307 358.733 284.985 cv
358.733 285.663 358.182 286.214 357.504 286.214 cv
cp
357.504 282.862 mo
356.331 282.862 355.381 283.812 355.381 284.985 cv
355.381 286.158 356.331 287.108 357.504 287.108 cv
358.677 287.108 359.627 286.158 359.627 284.985 cv
359.627 283.812 358.677 282.862 357.504 282.862 cv
cp
f
362.31 330.134 mo
361.138 330.134 360.187 331.085 360.187 332.257 cv
360.187 333.43 361.138 334.381 362.31 334.381 cv
363.483 334.381 364.434 333.43 364.434 332.257 cv
364.434 331.085 363.483 330.134 362.31 330.134 cv
cp
f
362.31 324.882 mo
361.138 324.882 360.187 325.832 360.187 327.005 cv
360.187 328.178 361.138 329.128 362.31 329.128 cv
363.483 329.128 364.434 328.178 364.434 327.005 cv
364.434 325.832 363.483 324.882 362.31 324.882 cv
cp
f
362.31 319.629 mo
361.138 319.629 360.187 320.58 360.187 321.752 cv
360.187 322.925 361.138 323.876 362.31 323.876 cv
363.483 323.876 364.434 322.925 364.434 321.752 cv
364.434 320.58 363.483 319.629 362.31 319.629 cv
cp
f
362.31 314.377 mo
361.138 314.377 360.187 315.327 360.187 316.5 cv
360.187 317.673 361.138 318.623 362.31 318.623 cv
363.483 318.623 364.434 317.673 364.434 316.5 cv
364.434 315.327 363.483 314.377 362.31 314.377 cv
cp
f
362.31 309.124 mo
361.138 309.124 360.187 310.075 360.187 311.248 cv
360.187 312.42 361.138 313.371 362.31 313.371 cv
363.483 313.371 364.434 312.42 364.434 311.248 cv
364.434 310.075 363.483 309.124 362.31 309.124 cv
cp
f
362.31 307.224 mo
361.632 307.224 361.081 306.673 361.081 305.995 cv
361.081 305.317 361.632 304.766 362.31 304.766 cv
362.988 304.766 363.54 305.317 363.54 305.995 cv
363.54 306.673 362.988 307.224 362.31 307.224 cv
cp
362.31 303.872 mo
361.138 303.872 360.187 304.822 360.187 305.995 cv
360.187 307.168 361.138 308.118 362.31 308.118 cv
363.483 308.118 364.434 307.168 364.434 305.995 cv
364.434 304.822 363.483 303.872 362.31 303.872 cv
cp
f
362.31 301.972 mo
361.632 301.972 361.081 301.421 361.081 300.743 cv
361.081 300.065 361.632 299.513 362.31 299.513 cv
362.988 299.513 363.54 300.065 363.54 300.743 cv
363.54 301.421 362.988 301.972 362.31 301.972 cv
cp
362.31 298.619 mo
361.138 298.619 360.187 299.57 360.187 300.743 cv
360.187 301.915 361.138 302.866 362.31 302.866 cv
363.483 302.866 364.434 301.915 364.434 300.743 cv
364.434 299.57 363.483 298.619 362.31 298.619 cv
cp
f
362.31 296.719 mo
361.632 296.719 361.081 296.168 361.081 295.49 cv
361.081 294.812 361.632 294.261 362.31 294.261 cv
362.988 294.261 363.54 294.812 363.54 295.49 cv
363.54 296.168 362.988 296.719 362.31 296.719 cv
cp
362.31 293.367 mo
361.138 293.367 360.187 294.317 360.187 295.49 cv
360.187 296.663 361.138 297.613 362.31 297.613 cv
363.483 297.613 364.434 296.663 364.434 295.49 cv
364.434 294.317 363.483 293.367 362.31 293.367 cv
cp
f
362.31 291.467 mo
361.632 291.467 361.081 290.916 361.081 290.238 cv
361.081 289.56 361.632 289.008 362.31 289.008 cv
362.988 289.008 363.54 289.56 363.54 290.238 cv
363.54 290.916 362.988 291.467 362.31 291.467 cv
cp
362.31 288.114 mo
361.138 288.114 360.187 289.065 360.187 290.238 cv
360.187 291.41 361.138 292.361 362.31 292.361 cv
363.483 292.361 364.434 291.41 364.434 290.238 cv
364.434 289.065 363.483 288.114 362.31 288.114 cv
cp
f
362.31 286.214 mo
361.632 286.214 361.081 285.663 361.081 284.985 cv
361.081 284.307 361.632 283.756 362.31 283.756 cv
362.988 283.756 363.54 284.307 363.54 284.985 cv
363.54 285.663 362.988 286.214 362.31 286.214 cv
cp
362.31 282.862 mo
361.138 282.862 360.187 283.812 360.187 284.985 cv
360.187 286.158 361.138 287.108 362.31 287.108 cv
363.483 287.108 364.434 286.158 364.434 284.985 cv
364.434 283.812 363.483 282.862 362.31 282.862 cv
cp
f
367.117 330.134 mo
365.944 330.134 364.993 331.085 364.993 332.257 cv
364.993 333.43 365.944 334.381 367.117 334.381 cv
368.289 334.381 369.24 333.43 369.24 332.257 cv
369.24 331.085 368.289 330.134 367.117 330.134 cv
cp
f
367.117 324.882 mo
365.944 324.882 364.993 325.832 364.993 327.005 cv
364.993 328.178 365.944 329.128 367.117 329.128 cv
368.289 329.128 369.24 328.178 369.24 327.005 cv
369.24 325.832 368.289 324.882 367.117 324.882 cv
cp
f
367.117 319.629 mo
365.944 319.629 364.993 320.58 364.993 321.752 cv
364.993 322.925 365.944 323.876 367.117 323.876 cv
368.289 323.876 369.24 322.925 369.24 321.752 cv
369.24 320.58 368.289 319.629 367.117 319.629 cv
cp
f
367.117 317.729 mo
366.439 317.729 365.887 317.178 365.887 316.5 cv
365.887 315.822 366.439 315.271 367.117 315.271 cv
367.795 315.271 368.346 315.822 368.346 316.5 cv
368.346 317.178 367.795 317.729 367.117 317.729 cv
cp
367.117 314.377 mo
365.944 314.377 364.993 315.327 364.993 316.5 cv
364.993 317.673 365.944 318.623 367.117 318.623 cv
368.289 318.623 369.24 317.673 369.24 316.5 cv
369.24 315.327 368.289 314.377 367.117 314.377 cv
cp
f
367.117 312.477 mo
366.439 312.477 365.887 311.925 365.887 311.248 cv
365.887 310.57 366.439 310.018 367.117 310.018 cv
367.795 310.018 368.346 310.57 368.346 311.248 cv
368.346 311.925 367.795 312.477 367.117 312.477 cv
cp
367.117 309.124 mo
365.944 309.124 364.993 310.075 364.993 311.248 cv
364.993 312.42 365.944 313.371 367.117 313.371 cv
368.289 313.371 369.24 312.42 369.24 311.248 cv
369.24 310.075 368.289 309.124 367.117 309.124 cv
cp
f
367.117 307.224 mo
366.439 307.224 365.887 306.673 365.887 305.995 cv
365.887 305.317 366.439 304.766 367.117 304.766 cv
367.795 304.766 368.346 305.317 368.346 305.995 cv
368.346 306.673 367.795 307.224 367.117 307.224 cv
cp
367.117 303.872 mo
365.944 303.872 364.993 304.822 364.993 305.995 cv
364.993 307.168 365.944 308.118 367.117 308.118 cv
368.289 308.118 369.24 307.168 369.24 305.995 cv
369.24 304.822 368.289 303.872 367.117 303.872 cv
cp
f
367.117 301.972 mo
366.439 301.972 365.887 301.421 365.887 300.743 cv
365.887 300.065 366.439 299.513 367.117 299.513 cv
367.795 299.513 368.346 300.065 368.346 300.743 cv
368.346 301.421 367.795 301.972 367.117 301.972 cv
cp
367.117 298.619 mo
365.944 298.619 364.993 299.57 364.993 300.743 cv
364.993 301.915 365.944 302.866 367.117 302.866 cv
368.289 302.866 369.24 301.915 369.24 300.743 cv
369.24 299.57 368.289 298.619 367.117 298.619 cv
cp
f
367.117 296.719 mo
366.439 296.719 365.887 296.168 365.887 295.49 cv
365.887 294.812 366.439 294.261 367.117 294.261 cv
367.795 294.261 368.346 294.812 368.346 295.49 cv
368.346 296.168 367.795 296.719 367.117 296.719 cv
cp
367.117 293.367 mo
365.944 293.367 364.993 294.317 364.993 295.49 cv
364.993 296.663 365.944 297.613 367.117 297.613 cv
368.289 297.613 369.24 296.663 369.24 295.49 cv
369.24 294.317 368.289 293.367 367.117 293.367 cv
cp
f
367.117 291.467 mo
366.439 291.467 365.887 290.916 365.887 290.238 cv
365.887 289.56 366.439 289.008 367.117 289.008 cv
367.795 289.008 368.346 289.56 368.346 290.238 cv
368.346 290.916 367.795 291.467 367.117 291.467 cv
cp
367.117 288.114 mo
365.944 288.114 364.993 289.065 364.993 290.238 cv
364.993 291.41 365.944 292.361 367.117 292.361 cv
368.289 292.361 369.24 291.41 369.24 290.238 cv
369.24 289.065 368.289 288.114 367.117 288.114 cv
cp
f
367.117 286.214 mo
366.439 286.214 365.887 285.663 365.887 284.985 cv
365.887 284.307 366.439 283.756 367.117 283.756 cv
367.795 283.756 368.346 284.307 368.346 284.985 cv
368.346 285.663 367.795 286.214 367.117 286.214 cv
cp
367.117 282.862 mo
365.944 282.862 364.993 283.812 364.993 284.985 cv
364.993 286.158 365.944 287.108 367.117 287.108 cv
368.289 287.108 369.24 286.158 369.24 284.985 cv
369.24 283.812 368.289 282.862 367.117 282.862 cv
cp
f
371.923 330.134 mo
370.75 330.134 369.8 331.085 369.8 332.257 cv
369.8 333.43 370.75 334.381 371.923 334.381 cv
373.096 334.381 374.046 333.43 374.046 332.257 cv
374.046 331.085 373.096 330.134 371.923 330.134 cv
cp
f
371.923 324.882 mo
370.75 324.882 369.8 325.832 369.8 327.005 cv
369.8 328.178 370.75 329.128 371.923 329.128 cv
373.096 329.128 374.046 328.178 374.046 327.005 cv
374.046 325.832 373.096 324.882 371.923 324.882 cv
cp
f
371.923 322.982 mo
371.245 322.982 370.694 322.43 370.694 321.752 cv
370.694 321.075 371.245 320.523 371.923 320.523 cv
372.601 320.523 373.152 321.075 373.152 321.752 cv
373.152 322.43 372.601 322.982 371.923 322.982 cv
cp
371.923 319.629 mo
370.75 319.629 369.8 320.58 369.8 321.752 cv
369.8 322.925 370.75 323.876 371.923 323.876 cv
373.096 323.876 374.046 322.925 374.046 321.752 cv
374.046 320.58 373.096 319.629 371.923 319.629 cv
cp
f
371.923 317.729 mo
371.245 317.729 370.694 317.178 370.694 316.5 cv
370.694 315.822 371.245 315.271 371.923 315.271 cv
372.601 315.271 373.152 315.822 373.152 316.5 cv
373.152 317.178 372.601 317.729 371.923 317.729 cv
cp
371.923 314.377 mo
370.75 314.377 369.8 315.327 369.8 316.5 cv
369.8 317.673 370.75 318.623 371.923 318.623 cv
373.096 318.623 374.046 317.673 374.046 316.5 cv
374.046 315.327 373.096 314.377 371.923 314.377 cv
cp
f
371.923 312.477 mo
371.245 312.477 370.694 311.925 370.694 311.248 cv
370.694 310.57 371.245 310.018 371.923 310.018 cv
372.601 310.018 373.152 310.57 373.152 311.248 cv
373.152 311.925 372.601 312.477 371.923 312.477 cv
cp
371.923 309.124 mo
370.75 309.124 369.8 310.075 369.8 311.248 cv
369.8 312.42 370.75 313.371 371.923 313.371 cv
373.096 313.371 374.046 312.42 374.046 311.248 cv
374.046 310.075 373.096 309.124 371.923 309.124 cv
cp
f
371.923 307.224 mo
371.245 307.224 370.694 306.673 370.694 305.995 cv
370.694 305.317 371.245 304.766 371.923 304.766 cv
372.601 304.766 373.152 305.317 373.152 305.995 cv
373.152 306.673 372.601 307.224 371.923 307.224 cv
cp
371.923 303.872 mo
370.75 303.872 369.8 304.822 369.8 305.995 cv
369.8 307.168 370.75 308.118 371.923 308.118 cv
373.096 308.118 374.046 307.168 374.046 305.995 cv
374.046 304.822 373.096 303.872 371.923 303.872 cv
cp
f
371.923 301.972 mo
371.245 301.972 370.694 301.421 370.694 300.743 cv
370.694 300.065 371.245 299.513 371.923 299.513 cv
372.601 299.513 373.152 300.065 373.152 300.743 cv
373.152 301.421 372.601 301.972 371.923 301.972 cv
cp
371.923 298.619 mo
370.75 298.619 369.8 299.57 369.8 300.743 cv
369.8 301.915 370.75 302.866 371.923 302.866 cv
373.096 302.866 374.046 301.915 374.046 300.743 cv
374.046 299.57 373.096 298.619 371.923 298.619 cv
cp
f
371.923 296.719 mo
371.245 296.719 370.694 296.168 370.694 295.49 cv
370.694 294.812 371.245 294.261 371.923 294.261 cv
372.601 294.261 373.152 294.812 373.152 295.49 cv
373.152 296.168 372.601 296.719 371.923 296.719 cv
cp
371.923 293.367 mo
370.75 293.367 369.8 294.317 369.8 295.49 cv
369.8 296.663 370.75 297.613 371.923 297.613 cv
373.096 297.613 374.046 296.663 374.046 295.49 cv
374.046 294.317 373.096 293.367 371.923 293.367 cv
cp
f
371.923 291.467 mo
371.245 291.467 370.694 290.916 370.694 290.238 cv
370.694 289.56 371.245 289.008 371.923 289.008 cv
372.601 289.008 373.152 289.56 373.152 290.238 cv
373.152 290.916 372.601 291.467 371.923 291.467 cv
cp
371.923 288.114 mo
370.75 288.114 369.8 289.065 369.8 290.238 cv
369.8 291.41 370.75 292.361 371.923 292.361 cv
373.096 292.361 374.046 291.41 374.046 290.238 cv
374.046 289.065 373.096 288.114 371.923 288.114 cv
cp
f
371.923 286.214 mo
371.245 286.214 370.694 285.663 370.694 284.985 cv
370.694 284.307 371.245 283.756 371.923 283.756 cv
372.601 283.756 373.152 284.307 373.152 284.985 cv
373.152 285.663 372.601 286.214 371.923 286.214 cv
cp
371.923 282.862 mo
370.75 282.862 369.8 283.812 369.8 284.985 cv
369.8 286.158 370.75 287.108 371.923 287.108 cv
373.096 287.108 374.046 286.158 374.046 284.985 cv
374.046 283.812 373.096 282.862 371.923 282.862 cv
cp
f
376.729 330.134 mo
375.557 330.134 374.606 331.085 374.606 332.257 cv
374.606 333.43 375.557 334.381 376.729 334.381 cv
377.902 334.381 378.853 333.43 378.853 332.257 cv
378.853 331.085 377.902 330.134 376.729 330.134 cv
cp
f
376.729 328.234 mo
376.051 328.234 375.5 327.683 375.5 327.005 cv
375.5 326.327 376.051 325.776 376.729 325.776 cv
377.407 325.776 377.959 326.327 377.959 327.005 cv
377.959 327.683 377.407 328.234 376.729 328.234 cv
cp
376.729 324.882 mo
375.557 324.882 374.606 325.832 374.606 327.005 cv
374.606 328.178 375.557 329.128 376.729 329.128 cv
377.902 329.128 378.853 328.178 378.853 327.005 cv
378.853 325.832 377.902 324.882 376.729 324.882 cv
cp
f
376.729 322.982 mo
376.051 322.982 375.5 322.43 375.5 321.752 cv
375.5 321.075 376.051 320.523 376.729 320.523 cv
377.407 320.523 377.959 321.075 377.959 321.752 cv
377.959 322.43 377.407 322.982 376.729 322.982 cv
cp
376.729 319.629 mo
375.557 319.629 374.606 320.58 374.606 321.752 cv
374.606 322.925 375.557 323.876 376.729 323.876 cv
377.902 323.876 378.853 322.925 378.853 321.752 cv
378.853 320.58 377.902 319.629 376.729 319.629 cv
cp
f
376.729 317.729 mo
376.051 317.729 375.5 317.178 375.5 316.5 cv
375.5 315.822 376.051 315.271 376.729 315.271 cv
377.407 315.271 377.959 315.822 377.959 316.5 cv
377.959 317.178 377.407 317.729 376.729 317.729 cv
cp
376.729 314.377 mo
375.557 314.377 374.606 315.327 374.606 316.5 cv
374.606 317.673 375.557 318.623 376.729 318.623 cv
377.902 318.623 378.853 317.673 378.853 316.5 cv
378.853 315.327 377.902 314.377 376.729 314.377 cv
cp
f
376.729 312.477 mo
376.051 312.477 375.5 311.925 375.5 311.248 cv
375.5 310.57 376.051 310.018 376.729 310.018 cv
377.407 310.018 377.959 310.57 377.959 311.248 cv
377.959 311.925 377.407 312.477 376.729 312.477 cv
cp
376.729 309.124 mo
375.557 309.124 374.606 310.075 374.606 311.248 cv
374.606 312.42 375.557 313.371 376.729 313.371 cv
377.902 313.371 378.853 312.42 378.853 311.248 cv
378.853 310.075 377.902 309.124 376.729 309.124 cv
cp
f
376.729 307.224 mo
376.051 307.224 375.5 306.673 375.5 305.995 cv
375.5 305.317 376.051 304.766 376.729 304.766 cv
377.407 304.766 377.959 305.317 377.959 305.995 cv
377.959 306.673 377.407 307.224 376.729 307.224 cv
cp
376.729 303.872 mo
375.557 303.872 374.606 304.822 374.606 305.995 cv
374.606 307.168 375.557 308.118 376.729 308.118 cv
377.902 308.118 378.853 307.168 378.853 305.995 cv
378.853 304.822 377.902 303.872 376.729 303.872 cv
cp
f
376.729 301.972 mo
376.051 301.972 375.5 301.421 375.5 300.743 cv
375.5 300.065 376.051 299.513 376.729 299.513 cv
377.407 299.513 377.959 300.065 377.959 300.743 cv
377.959 301.421 377.407 301.972 376.729 301.972 cv
cp
376.729 298.619 mo
375.557 298.619 374.606 299.57 374.606 300.743 cv
374.606 301.915 375.557 302.866 376.729 302.866 cv
377.902 302.866 378.853 301.915 378.853 300.743 cv
378.853 299.57 377.902 298.619 376.729 298.619 cv
cp
f
376.729 296.719 mo
376.051 296.719 375.5 296.168 375.5 295.49 cv
375.5 294.812 376.051 294.261 376.729 294.261 cv
377.407 294.261 377.959 294.812 377.959 295.49 cv
377.959 296.168 377.407 296.719 376.729 296.719 cv
cp
376.729 293.367 mo
375.557 293.367 374.606 294.317 374.606 295.49 cv
374.606 296.663 375.557 297.613 376.729 297.613 cv
377.902 297.613 378.853 296.663 378.853 295.49 cv
378.853 294.317 377.902 293.367 376.729 293.367 cv
cp
f
376.729 291.467 mo
376.051 291.467 375.5 290.916 375.5 290.238 cv
375.5 289.56 376.051 289.008 376.729 289.008 cv
377.407 289.008 377.959 289.56 377.959 290.238 cv
377.959 290.916 377.407 291.467 376.729 291.467 cv
cp
376.729 288.114 mo
375.557 288.114 374.606 289.065 374.606 290.238 cv
374.606 291.41 375.557 292.361 376.729 292.361 cv
377.902 292.361 378.853 291.41 378.853 290.238 cv
378.853 289.065 377.902 288.114 376.729 288.114 cv
cp
f
376.729 286.214 mo
376.051 286.214 375.5 285.663 375.5 284.985 cv
375.5 284.307 376.051 283.756 376.729 283.756 cv
377.407 283.756 377.959 284.307 377.959 284.985 cv
377.959 285.663 377.407 286.214 376.729 286.214 cv
cp
376.729 282.862 mo
375.557 282.862 374.606 283.812 374.606 284.985 cv
374.606 286.158 375.557 287.108 376.729 287.108 cv
377.902 287.108 378.853 286.158 378.853 284.985 cv
378.853 283.812 377.902 282.862 376.729 282.862 cv
cp
f
381.536 330.134 mo
380.363 330.134 379.412 331.085 379.412 332.257 cv
379.412 333.43 380.363 334.381 381.536 334.381 cv
382.708 334.381 383.659 333.43 383.659 332.257 cv
383.659 331.085 382.708 330.134 381.536 330.134 cv
cp
f
381.536 324.882 mo
380.363 324.882 379.412 325.832 379.412 327.005 cv
379.412 328.178 380.363 329.128 381.536 329.128 cv
382.708 329.128 383.659 328.178 383.659 327.005 cv
383.659 325.832 382.708 324.882 381.536 324.882 cv
cp
f
381.536 319.629 mo
380.363 319.629 379.412 320.58 379.412 321.752 cv
379.412 322.925 380.363 323.876 381.536 323.876 cv
382.708 323.876 383.659 322.925 383.659 321.752 cv
383.659 320.58 382.708 319.629 381.536 319.629 cv
cp
f
381.536 317.729 mo
380.858 317.729 380.306 317.178 380.306 316.5 cv
380.306 315.822 380.858 315.271 381.536 315.271 cv
382.214 315.271 382.765 315.822 382.765 316.5 cv
382.765 317.178 382.214 317.729 381.536 317.729 cv
cp
381.536 314.377 mo
380.363 314.377 379.412 315.327 379.412 316.5 cv
379.412 317.673 380.363 318.623 381.536 318.623 cv
382.708 318.623 383.659 317.673 383.659 316.5 cv
383.659 315.327 382.708 314.377 381.536 314.377 cv
cp
f
381.536 312.477 mo
380.858 312.477 380.306 311.925 380.306 311.248 cv
380.306 310.57 380.858 310.018 381.536 310.018 cv
382.214 310.018 382.765 310.57 382.765 311.248 cv
382.765 311.925 382.214 312.477 381.536 312.477 cv
cp
381.536 309.124 mo
380.363 309.124 379.412 310.075 379.412 311.248 cv
379.412 312.42 380.363 313.371 381.536 313.371 cv
382.708 313.371 383.659 312.42 383.659 311.248 cv
383.659 310.075 382.708 309.124 381.536 309.124 cv
cp
f
381.536 307.224 mo
380.858 307.224 380.306 306.673 380.306 305.995 cv
380.306 305.317 380.858 304.766 381.536 304.766 cv
382.214 304.766 382.765 305.317 382.765 305.995 cv
382.765 306.673 382.214 307.224 381.536 307.224 cv
cp
381.536 303.872 mo
380.363 303.872 379.412 304.822 379.412 305.995 cv
379.412 307.168 380.363 308.118 381.536 308.118 cv
382.708 308.118 383.659 307.168 383.659 305.995 cv
383.659 304.822 382.708 303.872 381.536 303.872 cv
cp
f
381.536 301.972 mo
380.858 301.972 380.306 301.421 380.306 300.743 cv
380.306 300.065 380.858 299.513 381.536 299.513 cv
382.214 299.513 382.765 300.065 382.765 300.743 cv
382.765 301.421 382.214 301.972 381.536 301.972 cv
cp
381.536 298.619 mo
380.363 298.619 379.412 299.57 379.412 300.743 cv
379.412 301.915 380.363 302.866 381.536 302.866 cv
382.708 302.866 383.659 301.915 383.659 300.743 cv
383.659 299.57 382.708 298.619 381.536 298.619 cv
cp
f
381.536 296.719 mo
380.858 296.719 380.306 296.168 380.306 295.49 cv
380.306 294.812 380.858 294.261 381.536 294.261 cv
382.214 294.261 382.765 294.812 382.765 295.49 cv
382.765 296.168 382.214 296.719 381.536 296.719 cv
cp
381.536 293.367 mo
380.363 293.367 379.412 294.317 379.412 295.49 cv
379.412 296.663 380.363 297.613 381.536 297.613 cv
382.708 297.613 383.659 296.663 383.659 295.49 cv
383.659 294.317 382.708 293.367 381.536 293.367 cv
cp
f
381.536 291.467 mo
380.858 291.467 380.306 290.916 380.306 290.238 cv
380.306 289.56 380.858 289.008 381.536 289.008 cv
382.214 289.008 382.765 289.56 382.765 290.238 cv
382.765 290.916 382.214 291.467 381.536 291.467 cv
cp
381.536 288.114 mo
380.363 288.114 379.412 289.065 379.412 290.238 cv
379.412 291.41 380.363 292.361 381.536 292.361 cv
382.708 292.361 383.659 291.41 383.659 290.238 cv
383.659 289.065 382.708 288.114 381.536 288.114 cv
cp
f
381.536 286.214 mo
380.858 286.214 380.306 285.663 380.306 284.985 cv
380.306 284.307 380.858 283.756 381.536 283.756 cv
382.214 283.756 382.765 284.307 382.765 284.985 cv
382.765 285.663 382.214 286.214 381.536 286.214 cv
cp
381.536 282.862 mo
380.363 282.862 379.412 283.812 379.412 284.985 cv
379.412 286.158 380.363 287.108 381.536 287.108 cv
382.708 287.108 383.659 286.158 383.659 284.985 cv
383.659 283.812 382.708 282.862 381.536 282.862 cv
cp
f
386.342 330.134 mo
385.169 330.134 384.219 331.085 384.219 332.257 cv
384.219 333.43 385.169 334.381 386.342 334.381 cv
387.515 334.381 388.465 333.43 388.465 332.257 cv
388.465 331.085 387.515 330.134 386.342 330.134 cv
cp
f
386.342 324.882 mo
385.169 324.882 384.219 325.832 384.219 327.005 cv
384.219 328.178 385.169 329.128 386.342 329.128 cv
387.515 329.128 388.465 328.178 388.465 327.005 cv
388.465 325.832 387.515 324.882 386.342 324.882 cv
cp
f
386.342 319.629 mo
385.169 319.629 384.219 320.58 384.219 321.752 cv
384.219 322.925 385.169 323.876 386.342 323.876 cv
387.515 323.876 388.465 322.925 388.465 321.752 cv
388.465 320.58 387.515 319.629 386.342 319.629 cv
cp
f
386.342 314.377 mo
385.169 314.377 384.219 315.327 384.219 316.5 cv
384.219 317.673 385.169 318.623 386.342 318.623 cv
387.515 318.623 388.465 317.673 388.465 316.5 cv
388.465 315.327 387.515 314.377 386.342 314.377 cv
cp
f
386.342 309.124 mo
385.169 309.124 384.219 310.075 384.219 311.248 cv
384.219 312.42 385.169 313.371 386.342 313.371 cv
387.515 313.371 388.465 312.42 388.465 311.248 cv
388.465 310.075 387.515 309.124 386.342 309.124 cv
cp
f
386.342 303.872 mo
385.169 303.872 384.219 304.822 384.219 305.995 cv
384.219 307.168 385.169 308.118 386.342 308.118 cv
387.515 308.118 388.465 307.168 388.465 305.995 cv
388.465 304.822 387.515 303.872 386.342 303.872 cv
cp
f
386.342 301.972 mo
385.664 301.972 385.113 301.421 385.113 300.743 cv
385.113 300.065 385.664 299.513 386.342 299.513 cv
387.02 299.513 387.571 300.065 387.571 300.743 cv
387.571 301.421 387.02 301.972 386.342 301.972 cv
cp
386.342 298.619 mo
385.169 298.619 384.219 299.57 384.219 300.743 cv
384.219 301.915 385.169 302.866 386.342 302.866 cv
387.515 302.866 388.465 301.915 388.465 300.743 cv
388.465 299.57 387.515 298.619 386.342 298.619 cv
cp
f
386.342 296.719 mo
385.664 296.719 385.113 296.168 385.113 295.49 cv
385.113 294.812 385.664 294.261 386.342 294.261 cv
387.02 294.261 387.571 294.812 387.571 295.49 cv
387.571 296.168 387.02 296.719 386.342 296.719 cv
cp
386.342 293.367 mo
385.169 293.367 384.219 294.317 384.219 295.49 cv
384.219 296.663 385.169 297.613 386.342 297.613 cv
387.515 297.613 388.465 296.663 388.465 295.49 cv
388.465 294.317 387.515 293.367 386.342 293.367 cv
cp
f
386.342 291.467 mo
385.664 291.467 385.113 290.916 385.113 290.238 cv
385.113 289.56 385.664 289.008 386.342 289.008 cv
387.02 289.008 387.571 289.56 387.571 290.238 cv
387.571 290.916 387.02 291.467 386.342 291.467 cv
cp
386.342 288.114 mo
385.169 288.114 384.219 289.065 384.219 290.238 cv
384.219 291.41 385.169 292.361 386.342 292.361 cv
387.515 292.361 388.465 291.41 388.465 290.238 cv
388.465 289.065 387.515 288.114 386.342 288.114 cv
cp
f
386.342 286.214 mo
385.664 286.214 385.113 285.663 385.113 284.985 cv
385.113 284.307 385.664 283.756 386.342 283.756 cv
387.02 283.756 387.571 284.307 387.571 284.985 cv
387.571 285.663 387.02 286.214 386.342 286.214 cv
cp
386.342 282.862 mo
385.169 282.862 384.219 283.812 384.219 284.985 cv
384.219 286.158 385.169 287.108 386.342 287.108 cv
387.515 287.108 388.465 286.158 388.465 284.985 cv
388.465 283.812 387.515 282.862 386.342 282.862 cv
cp
f
391.148 330.134 mo
389.976 330.134 389.025 331.085 389.025 332.257 cv
389.025 333.43 389.976 334.381 391.148 334.381 cv
392.321 334.381 393.272 333.43 393.272 332.257 cv
393.272 331.085 392.321 330.134 391.148 330.134 cv
cp
f
391.148 324.882 mo
389.976 324.882 389.025 325.832 389.025 327.005 cv
389.025 328.178 389.976 329.128 391.148 329.128 cv
392.321 329.128 393.272 328.178 393.272 327.005 cv
393.272 325.832 392.321 324.882 391.148 324.882 cv
cp
f
391.148 319.629 mo
389.976 319.629 389.025 320.58 389.025 321.752 cv
389.025 322.925 389.976 323.876 391.148 323.876 cv
392.321 323.876 393.272 322.925 393.272 321.752 cv
393.272 320.58 392.321 319.629 391.148 319.629 cv
cp
f
391.148 314.377 mo
389.976 314.377 389.025 315.327 389.025 316.5 cv
389.025 317.673 389.976 318.623 391.148 318.623 cv
392.321 318.623 393.272 317.673 393.272 316.5 cv
393.272 315.327 392.321 314.377 391.148 314.377 cv
cp
f
391.148 309.124 mo
389.976 309.124 389.025 310.075 389.025 311.248 cv
389.025 312.42 389.976 313.371 391.148 313.371 cv
392.321 313.371 393.272 312.42 393.272 311.248 cv
393.272 310.075 392.321 309.124 391.148 309.124 cv
cp
f
391.148 303.872 mo
389.976 303.872 389.025 304.822 389.025 305.995 cv
389.025 307.168 389.976 308.118 391.148 308.118 cv
392.321 308.118 393.272 307.168 393.272 305.995 cv
393.272 304.822 392.321 303.872 391.148 303.872 cv
cp
f
391.148 298.619 mo
389.976 298.619 389.025 299.57 389.025 300.743 cv
389.025 301.915 389.976 302.866 391.148 302.866 cv
392.321 302.866 393.272 301.915 393.272 300.743 cv
393.272 299.57 392.321 298.619 391.148 298.619 cv
cp
f
391.148 293.367 mo
389.976 293.367 389.025 294.317 389.025 295.49 cv
389.025 296.663 389.976 297.613 391.148 297.613 cv
392.321 297.613 393.272 296.663 393.272 295.49 cv
393.272 294.317 392.321 293.367 391.148 293.367 cv
cp
f
391.148 291.467 mo
390.47 291.467 389.919 290.916 389.919 290.238 cv
389.919 289.56 390.47 289.008 391.148 289.008 cv
391.826 289.008 392.378 289.56 392.378 290.238 cv
392.378 290.916 391.826 291.467 391.148 291.467 cv
cp
391.148 288.114 mo
389.976 288.114 389.025 289.065 389.025 290.238 cv
389.025 291.41 389.976 292.361 391.148 292.361 cv
392.321 292.361 393.272 291.41 393.272 290.238 cv
393.272 289.065 392.321 288.114 391.148 288.114 cv
cp
f
391.148 286.214 mo
390.47 286.214 389.919 285.663 389.919 284.985 cv
389.919 284.307 390.47 283.756 391.148 283.756 cv
391.826 283.756 392.378 284.307 392.378 284.985 cv
392.378 285.663 391.826 286.214 391.148 286.214 cv
cp
391.148 282.862 mo
389.976 282.862 389.025 283.812 389.025 284.985 cv
389.025 286.158 389.976 287.108 391.148 287.108 cv
392.321 287.108 393.272 286.158 393.272 284.985 cv
393.272 283.812 392.321 282.862 391.148 282.862 cv
cp
f
395.955 330.134 mo
394.782 330.134 393.831 331.085 393.831 332.257 cv
393.831 333.43 394.782 334.381 395.955 334.381 cv
397.127 334.381 398.078 333.43 398.078 332.257 cv
398.078 331.085 397.127 330.134 395.955 330.134 cv
cp
f
395.955 324.882 mo
394.782 324.882 393.831 325.832 393.831 327.005 cv
393.831 328.178 394.782 329.128 395.955 329.128 cv
397.127 329.128 398.078 328.178 398.078 327.005 cv
398.078 325.832 397.127 324.882 395.955 324.882 cv
cp
f
395.955 319.629 mo
394.782 319.629 393.831 320.58 393.831 321.752 cv
393.831 322.925 394.782 323.876 395.955 323.876 cv
397.127 323.876 398.078 322.925 398.078 321.752 cv
398.078 320.58 397.127 319.629 395.955 319.629 cv
cp
f
395.955 314.377 mo
394.782 314.377 393.831 315.327 393.831 316.5 cv
393.831 317.673 394.782 318.623 395.955 318.623 cv
397.127 318.623 398.078 317.673 398.078 316.5 cv
398.078 315.327 397.127 314.377 395.955 314.377 cv
cp
f
395.955 309.124 mo
394.782 309.124 393.831 310.075 393.831 311.248 cv
393.831 312.42 394.782 313.371 395.955 313.371 cv
397.127 313.371 398.078 312.42 398.078 311.248 cv
398.078 310.075 397.127 309.124 395.955 309.124 cv
cp
f
395.955 303.872 mo
394.782 303.872 393.831 304.822 393.831 305.995 cv
393.831 307.168 394.782 308.118 395.955 308.118 cv
397.127 308.118 398.078 307.168 398.078 305.995 cv
398.078 304.822 397.127 303.872 395.955 303.872 cv
cp
f
395.955 298.619 mo
394.782 298.619 393.831 299.57 393.831 300.743 cv
393.831 301.915 394.782 302.866 395.955 302.866 cv
397.127 302.866 398.078 301.915 398.078 300.743 cv
398.078 299.57 397.127 298.619 395.955 298.619 cv
cp
f
395.955 293.367 mo
394.782 293.367 393.831 294.317 393.831 295.49 cv
393.831 296.663 394.782 297.613 395.955 297.613 cv
397.127 297.613 398.078 296.663 398.078 295.49 cv
398.078 294.317 397.127 293.367 395.955 293.367 cv
cp
f
395.955 288.114 mo
394.782 288.114 393.831 289.065 393.831 290.238 cv
393.831 291.41 394.782 292.361 395.955 292.361 cv
397.127 292.361 398.078 291.41 398.078 290.238 cv
398.078 289.065 397.127 288.114 395.955 288.114 cv
cp
f
395.955 286.214 mo
395.277 286.214 394.725 285.663 394.725 284.985 cv
394.725 284.307 395.277 283.756 395.955 283.756 cv
396.633 283.756 397.184 284.307 397.184 284.985 cv
397.184 285.663 396.633 286.214 395.955 286.214 cv
cp
395.955 282.862 mo
394.782 282.862 393.831 283.812 393.831 284.985 cv
393.831 286.158 394.782 287.108 395.955 287.108 cv
397.127 287.108 398.078 286.158 398.078 284.985 cv
398.078 283.812 397.127 282.862 395.955 282.862 cv
cp
f
400.761 330.134 mo
399.588 330.134 398.638 331.085 398.638 332.257 cv
398.638 333.43 399.588 334.381 400.761 334.381 cv
401.934 334.381 402.884 333.43 402.884 332.257 cv
402.884 331.085 401.934 330.134 400.761 330.134 cv
cp
f
400.761 324.882 mo
399.588 324.882 398.638 325.832 398.638 327.005 cv
398.638 328.178 399.588 329.128 400.761 329.128 cv
401.934 329.128 402.884 328.178 402.884 327.005 cv
402.884 325.832 401.934 324.882 400.761 324.882 cv
cp
f
400.761 319.629 mo
399.588 319.629 398.638 320.58 398.638 321.752 cv
398.638 322.925 399.588 323.876 400.761 323.876 cv
401.934 323.876 402.884 322.925 402.884 321.752 cv
402.884 320.58 401.934 319.629 400.761 319.629 cv
cp
f
400.761 314.377 mo
399.588 314.377 398.638 315.327 398.638 316.5 cv
398.638 317.673 399.588 318.623 400.761 318.623 cv
401.934 318.623 402.884 317.673 402.884 316.5 cv
402.884 315.327 401.934 314.377 400.761 314.377 cv
cp
f
400.761 309.124 mo
399.588 309.124 398.638 310.075 398.638 311.248 cv
398.638 312.42 399.588 313.371 400.761 313.371 cv
401.934 313.371 402.884 312.42 402.884 311.248 cv
402.884 310.075 401.934 309.124 400.761 309.124 cv
cp
f
400.761 303.872 mo
399.588 303.872 398.638 304.822 398.638 305.995 cv
398.638 307.168 399.588 308.118 400.761 308.118 cv
401.934 308.118 402.884 307.168 402.884 305.995 cv
402.884 304.822 401.934 303.872 400.761 303.872 cv
cp
f
400.761 298.619 mo
399.588 298.619 398.638 299.57 398.638 300.743 cv
398.638 301.915 399.588 302.866 400.761 302.866 cv
401.934 302.866 402.884 301.915 402.884 300.743 cv
402.884 299.57 401.934 298.619 400.761 298.619 cv
cp
f
400.761 296.719 mo
400.083 296.719 399.532 296.168 399.532 295.49 cv
399.532 294.812 400.083 294.261 400.761 294.261 cv
401.439 294.261 401.99 294.812 401.99 295.49 cv
401.99 296.168 401.439 296.719 400.761 296.719 cv
cp
400.761 293.367 mo
399.588 293.367 398.638 294.317 398.638 295.49 cv
398.638 296.663 399.588 297.613 400.761 297.613 cv
401.934 297.613 402.884 296.663 402.884 295.49 cv
402.884 294.317 401.934 293.367 400.761 293.367 cv
cp
f
400.761 291.467 mo
400.083 291.467 399.532 290.916 399.532 290.238 cv
399.532 289.56 400.083 289.008 400.761 289.008 cv
401.439 289.008 401.99 289.56 401.99 290.238 cv
401.99 290.916 401.439 291.467 400.761 291.467 cv
cp
400.761 288.114 mo
399.588 288.114 398.638 289.065 398.638 290.238 cv
398.638 291.41 399.588 292.361 400.761 292.361 cv
401.934 292.361 402.884 291.41 402.884 290.238 cv
402.884 289.065 401.934 288.114 400.761 288.114 cv
cp
f
400.761 286.214 mo
400.083 286.214 399.532 285.663 399.532 284.985 cv
399.532 284.307 400.083 283.756 400.761 283.756 cv
401.439 283.756 401.99 284.307 401.99 284.985 cv
401.99 285.663 401.439 286.214 400.761 286.214 cv
cp
400.761 282.862 mo
399.588 282.862 398.638 283.812 398.638 284.985 cv
398.638 286.158 399.588 287.108 400.761 287.108 cv
401.934 287.108 402.884 286.158 402.884 284.985 cv
402.884 283.812 401.934 282.862 400.761 282.862 cv
cp
f
414.686 269.675 mo
413.448 269.675 412.442 268.668 412.442 267.431 cv
412.442 266.194 413.448 265.188 414.686 265.188 cv
415.923 265.188 416.93 266.194 416.93 267.431 cv
416.93 268.668 415.923 269.675 414.686 269.675 cv
cp
414.686 264.224 mo
412.915 264.224 411.478 265.66 411.478 267.431 cv
411.478 269.203 412.915 270.639 414.686 270.639 cv
416.457 270.639 417.894 269.203 417.894 267.431 cv
417.894 265.66 416.457 264.224 414.686 264.224 cv
cp
f
414.686 269.193 mo
413.715 269.193 412.924 268.403 412.924 267.431 cv
412.924 266.46 413.715 265.67 414.686 265.67 cv
415.658 265.67 416.448 266.46 416.448 267.431 cv
416.448 268.403 415.658 269.193 414.686 269.193 cv
cp
f
421.795 269.675 mo
420.557 269.675 419.551 268.668 419.551 267.431 cv
419.551 266.194 420.557 265.188 421.795 265.188 cv
423.032 265.188 424.039 266.194 424.039 267.431 cv
424.039 268.668 423.032 269.675 421.795 269.675 cv
cp
421.795 264.224 mo
420.024 264.224 418.587 265.66 418.587 267.431 cv
418.587 269.203 420.024 270.639 421.795 270.639 cv
423.566 270.639 425.003 269.203 425.003 267.431 cv
425.003 265.66 423.566 264.224 421.795 264.224 cv
cp
f
421.795 269.193 mo
420.824 269.193 420.033 268.403 420.033 267.431 cv
420.033 266.46 420.824 265.67 421.795 265.67 cv
422.767 265.67 423.557 266.46 423.557 267.431 cv
423.557 268.403 422.767 269.193 421.795 269.193 cv
cp
f
428.904 269.675 mo
427.667 269.675 426.66 268.668 426.66 267.431 cv
426.66 266.194 427.667 265.188 428.904 265.188 cv
430.141 265.188 431.148 266.194 431.148 267.431 cv
431.148 268.668 430.141 269.675 428.904 269.675 cv
cp
428.904 264.224 mo
427.133 264.224 425.697 265.66 425.697 267.431 cv
425.697 269.203 427.133 270.639 428.904 270.639 cv
430.676 270.639 432.112 269.203 432.112 267.431 cv
432.112 265.66 430.676 264.224 428.904 264.224 cv
cp
f
428.904 269.193 mo
427.933 269.193 427.142 268.403 427.142 267.431 cv
427.142 266.46 427.933 265.67 428.904 265.67 cv
429.876 265.67 430.666 266.46 430.666 267.431 cv
430.666 268.403 429.876 269.193 428.904 269.193 cv
cp
f
436.013 269.675 mo
434.776 269.675 433.769 268.668 433.769 267.431 cv
433.769 266.194 434.776 265.188 436.013 265.188 cv
437.25 265.188 438.257 266.194 438.257 267.431 cv
438.257 268.668 437.25 269.675 436.013 269.675 cv
cp
436.013 264.224 mo
434.242 264.224 432.806 265.66 432.806 267.431 cv
432.806 269.203 434.242 270.639 436.013 270.639 cv
437.785 270.639 439.221 269.203 439.221 267.431 cv
439.221 265.66 437.785 264.224 436.013 264.224 cv
cp
f
436.013 269.193 mo
435.042 269.193 434.251 268.403 434.251 267.431 cv
434.251 266.46 435.042 265.67 436.013 265.67 cv
436.985 265.67 437.775 266.46 437.775 267.431 cv
437.775 268.403 436.985 269.193 436.013 269.193 cv
cp
f
443.122 269.675 mo
441.885 269.675 440.878 268.668 440.878 267.431 cv
440.878 266.194 441.885 265.188 443.122 265.188 cv
444.359 265.188 445.366 266.194 445.366 267.431 cv
445.366 268.668 444.359 269.675 443.122 269.675 cv
cp
443.122 264.224 mo
441.351 264.224 439.915 265.66 439.915 267.431 cv
439.915 269.203 441.351 270.639 443.122 270.639 cv
444.894 270.639 446.33 269.203 446.33 267.431 cv
446.33 265.66 444.894 264.224 443.122 264.224 cv
cp
f
443.122 269.193 mo
442.151 269.193 441.36 268.403 441.36 267.431 cv
441.36 266.46 442.151 265.67 443.122 265.67 cv
444.094 265.67 444.884 266.46 444.884 267.431 cv
444.884 268.403 444.094 269.193 443.122 269.193 cv
cp
f
450.232 269.675 mo
448.994 269.675 447.987 268.668 447.987 267.431 cv
447.987 266.194 448.994 265.188 450.232 265.188 cv
451.468 265.188 452.475 266.194 452.475 267.431 cv
452.475 268.668 451.468 269.675 450.232 269.675 cv
cp
450.231 264.224 mo
448.46 264.224 447.024 265.66 447.024 267.431 cv
447.024 269.203 448.46 270.639 450.231 270.639 cv
452.003 270.639 453.439 269.203 453.439 267.431 cv
453.439 265.66 452.003 264.224 450.231 264.224 cv
cp
f
457.341 269.675 mo
456.103 269.675 455.096 268.668 455.096 267.431 cv
455.096 266.194 456.103 265.188 457.341 265.188 cv
458.577 265.188 459.584 266.194 459.584 267.431 cv
459.584 268.668 458.577 269.675 457.341 269.675 cv
cp
457.34 264.224 mo
455.569 264.224 454.133 265.66 454.133 267.431 cv
454.133 269.203 455.569 270.639 457.34 270.639 cv
459.112 270.639 460.548 269.203 460.548 267.431 cv
460.548 265.66 459.112 264.224 457.34 264.224 cv
cp
f
464.45 269.675 mo
463.212 269.675 462.205 268.668 462.205 267.431 cv
462.205 266.194 463.212 265.188 464.45 265.188 cv
465.687 265.188 466.693 266.194 466.693 267.431 cv
466.693 268.668 465.687 269.675 464.45 269.675 cv
cp
464.449 264.224 mo
462.678 264.224 461.242 265.66 461.242 267.431 cv
461.242 269.203 462.678 270.639 464.449 270.639 cv
466.221 270.639 467.657 269.203 467.657 267.431 cv
467.657 265.66 466.221 264.224 464.449 264.224 cv
cp
f
471.559 269.675 mo
470.321 269.675 469.314 268.668 469.314 267.431 cv
469.314 266.194 470.321 265.188 471.559 265.188 cv
472.796 265.188 473.802 266.194 473.802 267.431 cv
473.802 268.668 472.796 269.675 471.559 269.675 cv
cp
471.558 264.224 mo
469.787 264.224 468.351 265.66 468.351 267.431 cv
468.351 269.203 469.787 270.639 471.558 270.639 cv
473.33 270.639 474.766 269.203 474.766 267.431 cv
474.766 265.66 473.33 264.224 471.558 264.224 cv
cp
f
478.668 269.675 mo
477.43 269.675 476.424 268.668 476.424 267.431 cv
476.424 266.194 477.43 265.188 478.668 265.188 cv
479.905 265.188 480.911 266.194 480.911 267.431 cv
480.911 268.668 479.905 269.675 478.668 269.675 cv
cp
478.667 264.224 mo
476.896 264.224 475.46 265.66 475.46 267.431 cv
475.46 269.203 476.896 270.639 478.667 270.639 cv
480.439 270.639 481.875 269.203 481.875 267.431 cv
481.875 265.66 480.439 264.224 478.667 264.224 cv
cp
f
485.777 269.675 mo
484.539 269.675 483.533 268.668 483.533 267.431 cv
483.533 266.194 484.539 265.188 485.777 265.188 cv
487.014 265.188 488.02 266.194 488.02 267.431 cv
488.02 268.668 487.014 269.675 485.777 269.675 cv
cp
485.776 264.224 mo
484.005 264.224 482.569 265.66 482.569 267.431 cv
482.569 269.203 484.005 270.639 485.776 270.639 cv
487.548 270.639 488.984 269.203 488.984 267.431 cv
488.984 265.66 487.548 264.224 485.776 264.224 cv
cp
f
492.886 269.675 mo
491.648 269.675 490.642 268.668 490.642 267.431 cv
490.642 266.194 491.648 265.188 492.886 265.188 cv
494.123 265.188 495.129 266.194 495.129 267.431 cv
495.129 268.668 494.123 269.675 492.886 269.675 cv
cp
492.885 264.224 mo
491.114 264.224 489.678 265.66 489.678 267.431 cv
489.678 269.203 491.114 270.639 492.885 270.639 cv
494.657 270.639 496.093 269.203 496.093 267.431 cv
496.093 265.66 494.657 264.224 492.885 264.224 cv
cp
f
499.995 269.675 mo
498.757 269.675 497.751 268.668 497.751 267.431 cv
497.751 266.194 498.757 265.188 499.995 265.188 cv
501.232 265.188 502.238 266.194 502.238 267.431 cv
502.238 268.668 501.232 269.675 499.995 269.675 cv
cp
499.994 264.224 mo
498.223 264.224 496.787 265.66 496.787 267.431 cv
496.787 269.203 498.223 270.639 499.994 270.639 cv
501.766 270.639 503.202 269.203 503.202 267.431 cv
503.202 265.66 501.766 264.224 499.994 264.224 cv
cp
f
507.104 269.675 mo
505.866 269.675 504.86 268.668 504.86 267.431 cv
504.86 266.194 505.866 265.188 507.104 265.188 cv
508.341 265.188 509.347 266.194 509.347 267.431 cv
509.347 268.668 508.341 269.675 507.104 269.675 cv
cp
507.103 264.224 mo
505.332 264.224 503.896 265.66 503.896 267.431 cv
503.896 269.203 505.332 270.639 507.103 270.639 cv
508.875 270.639 510.311 269.203 510.311 267.431 cv
510.311 265.66 508.875 264.224 507.103 264.224 cv
cp
f
514.213 269.675 mo
512.975 269.675 511.969 268.668 511.969 267.431 cv
511.969 266.194 512.975 265.188 514.213 265.188 cv
515.45 265.188 516.456 266.194 516.456 267.431 cv
516.456 268.668 515.45 269.675 514.213 269.675 cv
cp
514.213 264.224 mo
512.441 264.224 511.005 265.66 511.005 267.431 cv
511.005 269.203 512.441 270.639 514.213 270.639 cv
515.984 270.639 517.42 269.203 517.42 267.431 cv
517.42 265.66 515.984 264.224 514.213 264.224 cv
cp
f
454.541 281.38 mo
466.97 281.38 li
466.97 293.808 li
467.97 294.808 468.97 295.808 469.97 296.808 cv
469.97 278.38 li
451.541 278.38 li
452.541 279.38 453.541 280.38 454.541 281.38 cv
cp
f
432.707 336.496 mo
438.019 336.496 li
435.019 333.496 li
429.698 333.496 li
430.702 334.495 431.704 335.497 432.707 336.496 cv
cp
f
414.853 318.697 mo
414.853 313.33 li
411.853 310.33 li
411.853 315.707 li
412.852 316.704 413.852 317.701 414.853 318.697 cv
cp
f
414.853 326.905 mo
414.853 320.101 li
413.852 319.104 412.852 318.107 411.853 317.11 cv
411.853 323.905 li
414.853 326.905 li
cp
f
424.443 336.496 mo
431.3 336.496 li
430.296 335.497 429.294 334.495 428.29 333.496 cv
421.443 333.496 li
424.443 336.496 li
cp
f
420.038 333.496 mo
414.853 333.496 li
414.853 328.311 li
411.853 325.311 li
411.853 336.496 li
423.038 336.496 li
420.038 333.496 li
cp
f
467.969 334.497 mo
413.853 334.497 li
413.853 280.38 li
467.969 280.38 li
467.969 334.497 li
cp
412.853 279.38 mo
412.853 335.496 li
468.97 335.496 li
468.97 279.38 li
412.853 279.38 li
cp
f
426.915 292.466 mo
427.223 292.774 427.223 293.273 426.915 293.581 cv
426.915 293.581 li
426.607 293.889 426.107 293.889 425.799 293.581 cv
417.209 284.08 li
417.153 284.024 417.153 283.932 417.209 283.876 cv
417.209 283.876 li
417.266 283.819 417.357 283.819 417.414 283.876 cv
426.915 292.466 li
cp
f
464.958 331.42 mo
465.014 331.476 465.014 331.568 464.958 331.624 cv
464.958 331.624 li
464.901 331.681 464.81 331.681 464.753 331.624 cv
455.252 323.034 li
454.944 322.726 454.944 322.227 455.252 321.919 cv
455.252 321.919 li
455.56 321.61 456.059 321.61 456.368 321.919 cv
464.958 331.42 li
cp
f
456.367 293.582 mo
456.059 293.89 455.56 293.89 455.252 293.582 cv
455.252 293.582 li
454.944 293.273 454.944 292.774 455.252 292.466 cv
464.753 283.876 li
464.81 283.819 464.901 283.819 464.958 283.876 cv
464.958 283.876 li
465.014 283.932 465.014 284.024 464.958 284.08 cv
456.367 293.582 li
cp
f
417.414 331.624 mo
417.357 331.681 417.265 331.681 417.209 331.624 cv
417.209 331.624 li
417.152 331.568 417.152 331.476 417.209 331.42 cv
425.799 321.918 li
426.107 321.61 426.607 321.61 426.915 321.918 cv
426.915 321.918 li
427.223 322.227 427.223 322.726 426.915 323.034 cv
417.414 331.624 li
cp
f
441.151 305.951 mo
441.151 305.989 441.121 306.019 441.083 306.019 cv
441.083 306.019 li
441.046 306.019 441.015 305.989 441.015 305.951 cv
441.055 301.279 li
441.055 301.264 441.068 301.251 441.083 301.251 cv
441.083 301.251 li
441.099 301.251 441.111 301.264 441.111 301.279 cv
441.151 305.951 li
cp
f
441.111 314.221 mo
441.111 314.236 441.099 314.249 441.083 314.249 cv
441.083 314.249 li
441.068 314.249 441.055 314.236 441.055 314.221 cv
441.015 309.549 li
441.015 309.511 441.046 309.481 441.083 309.481 cv
441.083 309.481 li
441.121 309.481 441.151 309.511 441.151 309.549 cv
441.111 314.221 li
cp
f
442.882 307.818 mo
442.845 307.818 442.814 307.788 442.814 307.75 cv
442.814 307.75 li
442.814 307.712 442.845 307.682 442.882 307.682 cv
447.554 307.722 li
447.57 307.722 447.582 307.735 447.582 307.75 cv
447.582 307.75 li
447.582 307.765 447.57 307.778 447.554 307.778 cv
442.882 307.818 li
cp
f
434.612 307.778 mo
434.597 307.778 434.585 307.765 434.585 307.75 cv
434.585 307.75 li
434.585 307.735 434.597 307.722 434.612 307.722 cv
439.284 307.682 li
439.322 307.682 439.352 307.712 439.352 307.75 cv
439.352 307.75 li
439.352 307.788 439.322 307.818 439.284 307.818 cv
434.612 307.778 li
cp
f
500.405 283.071 mo
475.965 283.071 li
475.965 280.547 li
500.405 280.547 li
500.405 283.071 li
cp
474.965 279.975 mo
474.965 283.642 li
518.741 283.642 li
518.741 279.975 li
474.965 279.975 li
cp
f
497.445 287.884 mo
475.965 287.884 li
475.965 285.36 li
497.445 285.36 li
497.445 287.884 li
cp
474.965 284.788 mo
474.965 288.455 li
518.741 288.455 li
518.741 284.788 li
474.965 284.788 li
cp
f
492.133 292.697 mo
475.965 292.697 li
475.965 290.173 li
492.133 290.173 li
492.133 292.697 li
cp
474.965 289.601 mo
474.965 293.268 li
518.741 293.268 li
518.741 289.601 li
474.965 289.601 li
cp
f
505.019 297.51 mo
475.965 297.51 li
475.965 294.986 li
505.019 294.986 li
505.019 297.51 li
cp
474.965 294.414 mo
474.965 298.081 li
518.741 298.081 li
518.741 294.414 li
474.965 294.414 li
cp
f
511.61 302.323 mo
475.965 302.323 li
475.965 299.799 li
511.61 299.799 li
511.61 302.323 li
cp
474.965 299.227 mo
474.965 302.894 li
518.741 302.894 li
518.741 299.227 li
474.965 299.227 li
cp
f
508.56 307.136 mo
475.965 307.136 li
475.965 304.612 li
508.56 304.612 li
508.56 307.136 li
cp
474.965 304.04 mo
474.965 307.707 li
518.741 307.707 li
518.741 304.04 li
474.965 304.04 li
cp
f
502.363 311.949 mo
475.965 311.949 li
475.965 309.425 li
502.363 309.425 li
502.363 311.949 li
cp
474.965 308.853 mo
474.965 312.52 li
518.741 312.52 li
518.741 308.853 li
474.965 308.853 li
cp
f
495.478 316.762 mo
475.965 316.762 li
475.965 314.238 li
495.478 314.238 li
495.478 316.762 li
cp
474.965 313.666 mo
474.965 317.333 li
518.741 317.333 li
518.741 313.666 li
474.965 313.666 li
cp
f
486.92 321.575 mo
475.965 321.575 li
475.965 319.051 li
486.92 319.051 li
486.92 321.575 li
cp
474.965 318.479 mo
474.965 322.146 li
518.741 322.146 li
518.741 318.479 li
474.965 318.479 li
cp
f
491.838 326.388 mo
475.965 326.388 li
475.965 323.864 li
491.838 323.864 li
491.838 326.388 li
cp
474.965 323.292 mo
474.965 326.959 li
518.741 326.959 li
518.741 323.292 li
474.965 323.292 li
cp
f
506.987 331.201 mo
475.965 331.201 li
475.965 328.677 li
506.987 328.677 li
506.987 331.201 li
cp
474.965 328.105 mo
474.965 331.772 li
518.741 331.772 li
518.741 328.105 li
474.965 328.105 li
cp
f
514.266 336.014 mo
475.965 336.014 li
475.965 333.49 li
514.266 333.49 li
514.266 336.014 li
cp
474.965 332.918 mo
474.965 336.585 li
518.741 336.585 li
518.741 332.918 li
474.965 332.918 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.0.0
%%For: (\700\755\762\756\755) ()
%%Title: (1509.m00.i125.n010.S.c12.296937170 Futuristic user interface elements vector set.eps)
%%CreationDate: 9/28/2015 4:36 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bj4cadQdZB51d3W".;lXABfaq6j-4X0JR>)&HS/Q5QLQ83A:B(rM^j=HEDn&lk;;8c.PU>5J"J(mcs*&?G174g?`-f)Qh<,
%B(tcE_MT9I<]nPTGS,>mXZuf+ldjP9IWLT!'c)3tNdh`h/)C'@H*]<^lZ_[>_4]S#GPd$C6MY8r;qS4C^c/[<qe!IrrN!0UY1:jk
%:2.cK]%q*[\%DV1g9;,&/Io@!H0*W[W!*X7cQ!J1m[OB$cl<OH)/,Mgh1)_%8HR'7>Pe+DFR2es+++DY#QFDS?iO%Ag>ZJ3rE/FX
%kI[g`dS:q+*]/5OIVma&G(@qS_1quUi6+H`H!Isp%g>0$/-R,NG71L/qh:A"L(&=/!1:"dJ!U".r+/A:;#dZMm/L0=rJ>rG$?!Zn
%FS>DXN.rPa"CMNX^34#j4%4ZC9:SSNh8AB#Y?`)*\N(Z8/-s#+OSDZf"PX3OLJBQ0$7g\j(ZV1H48_l9Aq.q.B`@.dXl`ukKr<1!
%UY1u70(ju)XoEu1IA#QqQA"ucg<KW_:2:+b'+Mpt#eSn^ZOJ*fp$Hp^S"*$jJ'/I[[Jia=#^s,8^0ij$/OYp$m`!.j[J$rKHD<'K
%]^.L;LYXnZd1tR3Mf*3\!og0B7]ogs5eJ3jfWJj%@`qb0o0M?Dit>iO'!+7IR\CHN47,=HIG&P0ZoY6<&XYOsCtXlAoNMdk`h?=e
%`%N`?0d8ieqN6_h)MZ.A7nI/O?d$&l5Zl"]"%IU;djTFdR6:c@ccmdj!McIH4d"X]+8e36ih@f3iP=%]?)Z-8Y_N2QcO98KoQ@?c
%!FJ%TG;"8(S`B,[s&gg/\jt#^Rq@*$m=U*3KpP<eiK(U)V,+8SHu]>T'5/!W[De2F#n4hM$ff\.*VOnII,TeM$QCUBlu*tb?^(ja
%BNrq9eloc!A!d@hopZ-T/_&m3_S=.Xh`UR?jF`*%#!TS`,PY\pKbj7AgIr/S$3C/2/prDGcmsp\[Q8mrgYEpGY<E_:SOVRTXl%=>
%b?hg3WV$YsMuSp)lVJJk*4jQX`)pGM&B8+-YY*\1g03*ZEjbQfE)VB1P)F/o'g8c=YJeUt&]PS/?f`J3)kOnTe*Jmqs1<mL:fQM5
%@K62(][hWVQ%u\uTBA`#G&)'Bq6D;"<;2md&,U_3aMDA#SjcTIOUm]Y)(2k#NS!^R(Noh7*,j@>-('dc`-_r[d>[2:n$(L6]^,nm
%pFc`KKu7f;rP'l;ER=l-D9*3c[(q#7l[cd(C(%Qu@"JpurSN]%(]LPlgX>\JNpM=W@$!=Wi*LG2Y-m#dPCBWXg8b0Z!?C*;Q-XTp
%%-gF@Pu"]N5JC+,&cCd3=EQf*P#C#6LD/"Qrsjb$Cdo!L.u3.6IjJ)=kPe:<-V%j$\Y9e[/&eH/4b^"-$f[Kb;rOQa%fWI;l_fGO
%l_n1V\!geR*nI<O>9+!f$O7KM@8hhj[]($<:$tn*@eT:^&!Xa]FLCnFiGI!sZJg:en</Ne.k>*39A:(d*kZb"lbO`K2E]?Y$`idK
%]A;`[=;12MPuaH0ppL+I0jh$tQMs'dGMpXZctU7;F>7Su:p:?39Ds;k=f-Z%C,c"6%PQcT*pe!'pa,epr5f"!pi=KbXBTlV%h>8[
%cA>]fcW^34QMRZ4(nQa9eu>3u;S[f6[li-VS2OS!Vo'M&W.NJ2-]]s2kE+`ml%r6jq$N=BV</%<)EmDe4^PEp,DTs6cn([LB+>f.
%:/?Nq?fI6MfQ`75\LZ^>NZ>>BV3ge112AL_GgSaeJ@/7f3F4eAel]?D`ht#B1L?*e`VI^RYkD]cO-+/8W=?kAjc:5DW&A=,pR=B"
%^m]P'Ato41KO[/a]Q!i3i1ccT?;h$*,u1@b0Pj&A2dW9\0?:B-H2=433iB;%-%UK4"QQ%`o5L5K+H0ZFLT-[)TR5(i2kPoF<fX`%
%P@q&d9WuX!A<7)Em5=bu=K(9l"cL[795&H;q0LLDcIBm-\U33!%f!mna)IFX(Hbe;cbP0*o=2$5=P:rh0T24PoN-4m@V*#Ng!.X]
%m^QVVF\DU#[l(ZFCV(S(D[tBB3RU?SV;5Tp[oh?9Q?J1_h-t)BeX(Hn<FEjQnd3"%bJB@Idp5fr%LRLHE09`lmV#hq7"d-f8#QLo
%l@_bPb?U$$VF;Js6V77=H2#W)&Nn.gcDQj!'N6"UHd/f&[L^-T!rT,7fSNpMN?-Ig0-gLaa7-+ee=ue:9[]TJH'0]WOQE>UolbBJ
%^084!EIPaLX65S#(7pgoK3l0T8$I<A?"`?UF,5N=V^5<ErE&B!NiiU;WF;p$F3Q"':<d;0)+omH4OGf82(^ibc!J#JB:$<_BXHD@
%l9+)t(S-jkj.\4WQ_OD09/'[3Zi'Gr@#a;gX"ufR2hk>9=W:C^F[f8PW_8^_VfeTSCX:pR5Ko=JBiLON[eMXd\Pb/hppBmfaC:Cf
%^!k[MaC-'r7h1?#bQ?o?k?$5@e')/]WEfo:X]f@YZrFC!"*0i?ed'<^9D&1'-MCLrIT)B-Y#9[$01Pc:s3[I`:Ejl2]KhKnfU85H
%(p)*6EX"O7(aZ('K0@3(=q2G@%.pkTNq5AV(pt#oaPb=$YF>:?Z.<h&:X>NJ4>Y)!cB>^_rOJ@AF81@eZ]jH4DFFDsD1BO(9[flN
%c2L:u.<Cq>\:TXX*qEbNq;9spcLJ!c@LmahLRb3(.IJAN_9I.c*G[7i5[Wjss8/Nqd=#N5CL#&FEEqiL0D:BTO6^-=)_^oE(]241
%IH0j</bY/?qo8Y6en"4CNIULlNlN*7boWa9!\8D:j)#:d,V)P?!6PoQ[#U2##0h1t"2S.gcQGj1Qso6tJ3SSJ3`"C9Pb-UW2TNaX
%d6EA10X"SjnJV(LZT]VUhLC5+V;)^^mWiNtVLpCa+VSqOg.B'4m&\%UCTbKgUik*kqm4gi2hu2IAn.stYB<>&3%Rs?Mq$E(FnU;C
%Flk>TB="'gbI&HqjNeV;ZO&[K.*%o`mD#dpMd4kPl&sN\CI&GMRVhgMB/Yj9ST:0rdc0TbC;-adQ7'c[?YEE8o:!j?%q5'0c5/'q
%%l9c(?uOYJ!5:\&V[oZ39q.p08]cH*:RS@@e&+du]Cg@Y<dqe/+BDVj?Da?>O_GSnG`c,GSpslg?5ABa7H.m@GZc:u(5\AHian6s
%=X7>QKuD1,]Yr>\k;+n#U]\0cRHk:00<O2G4sP&9n#X#[:ZG24AMd--1uB*MjLJf/eh=,GF4nI4?W`H2%Z:]Fr[l`KFY7RHZ8YhF
%5;>.po4,BigoIhPk1^]9is\^7ZT^B%DKAuTNrQhc>0MnGZ.>A=\T)VIe()%Kkni]t\A;m!K@A=:5lW=Ii&-iTF7Y"8(&Q.dimmkc
%qLQ:(.hMGeZ-0NP!5A(fEQ]-07*BYi^[+iM?f&:-N`q%Ye+Hl>Cq4d4m/5`AQK.)+F+!5ke]Ad`Y.Y\4-`7hscMb-e3P7U%O10%$
%dG<uJ+]%aXQt#i1735(b*Zko]6T,kZbsp!<o=8jH6Fa)V]O"nkcYU4qj*%od&-jjiO4q#<fig[,h-R5?)ZF!LMRh`9TD>'_''6"@
%mrG!QSXXV`;kA7P7bb$)c/g@rCPZ,cFfsN9Z[X`icG:R=Q&Z=YVmT"gYO^67D=`0ni31U7:G'fZ,MG-n5)Uri&ftM%V;G__]=?;X
%?^R$hD)SWS*+NpWYgh/EQMSjETp]Nf1c%p#?%qTfY'Mq6L^[lV1:X(QmH!JQF+)li0AIrIJ+:+@78Pf_6.$l'qX'4mSfjZ93VLTA
%neY)`s'L-`?tLKsRe;Hs(/L#F*g0`t"3m.pb!%8`G_1;t3R5L[1@(.aiX,1pjLBGdr;Y'TGZC@Y?d+L2l2gI*G#g?4;jjLkJ*fhu
%=gQ=_SG`<;A"m5PAWJh=fBU7WqaIuZB>#VVNU7Onq0C&cc?M%,B=kHjEW-TPph-ar6.!Kt&uoX,fOI%D%@Z&Mk)YF4Vk3(&_aO<7
%a`_pV5ItM1%lqYYg`-[bF:X,.@=?X[YOM`1.sKW\kN\!qkp]CS@gtBOT)?5*c/lIe?nQi:?*NC>=e@N+?<[=_:JXpnkJ;#Zr1rug
%C(DpWOuCoB]6:ZuHeDMjD)ZIB0DW+-;;^H,Ln!NDReo0%<cWks1Oi!9b#Pqt@rb_LWJL0:?[<c:R\P@m0:DTh\7Xm8g6Fa&pJ8fS
%*,LeBXTTsb>9I06B/&M(#`<mKd@&$oqU^&LbW@m9:6)4YkA:pXI6`4G-<A^LhAnQPgTCGho,k;NiF2+%O*0V046[H"Cs$^JhrIKr
%)Ps@u9su]9p&2FC,?Lk.'uPW'\E_o:aeG8!]:7JThjJ=Vol(1Diikq)&,Wc[i&K%%(hU"us&rAXo0M)qbC9B[__#qlp^g=t2j.LC
%5-h9-O1^b3mDTFqTD$mU&^/99Z()@1=6em=r7s8S.,Sb!a]I)upY+[6#&!q#22erWjA=8>4S`4]c*+3Q*;KJL:WVYN.%/Nd^\%nM
%-sZ"h^,'Q(X+'5G^Nn]71P`l'.;i+$T9or>dr[*KNiB(KBB&4%\8se#GL,m5K,:#KpZU]%>.&\Tir#NVbHpas$;X<rG,s)njg_S$
%?>J/:]6P/aV!,1=WjVl,r>aq1c)GJ\lfXeM7*0/"jQ@)PO_9GSPa[mTrFW6=bOZ]=XjLek>9ghl0oU5%Bh=R;\tcP[l7]X]irq9_
%:J8i2VpRVEF`Q;2%!HO>L6Z!aP*F3/GYBFn;X:^8F#i[1-"?$86*4BhkcCscYNYu-7#m8PcR-ORFZR73nC4GThYPKG6BOG@h+qqH
%Lc9g15'q4X.gcE^GU5?HnZ8oS*kAfG$daC^!OQPN\6hFW\JTB$*cj>>"BU#qj\Wd&bUpiikV:,4;J:ol(0G%Xd.d4c)g,$;s.LU%
%6O!ElUNM\H=fr*,2\s+g(ZdPYQR!N"_h)I"V_bp_hJ'IT4iss=[d\[Zh=CdXc^.!&$dZ<OHje7Zqju.-XBX^Hb?qA@Y#dj0Ems=N
%q1LbFk'QKW/iYG&<h);3jLMI(MV!!,W>2:0h[sK36TV(?@`f.tY@;(H^'MEUGtrP-qQ[td(<gjjl0$h+$]F>KjrnQ^pO^\9Hf/B$
%T9@NA@FM=83cu/iS[p$6YJkkBYMNBRj%H8n[nj3iI*)%hpbUeHTLHD*osr$lX_6?6YW%Ll?>#h(dk+m=4XUVt(#Q<;W+a3&c*2<6
%-,tFUM"0@OMIGZ]j7f^--P^.XF^'d5<r^nfccf1YMj';!:I`WQ=.?ZVc[9(JZ$7E>O^[cHcAC:aemHLDe[D3UoNO<lDrgg\1HEb@
%,5>4p]iXf/U04hDi_>pVjC3*MkdMVb\9]MW()KC#:f<=o<#8%^VB/bkNbZf!r4Y.jYrJa<OT9k#?EgKC4IaQqm,hq`0PcuB?kR@+
%N3ZQdc,3`PC-B2f?EIj!Cd3\71O]NS.iIiG0@ZM#j5`FfZH-_'C7LRL8_$7!A*Rj#77Lc66fI59A2NkuYfLM%m$`.T`r%$UZ,gV&
%RUm6PNC?<H?8<GM<Q]"9&nZ#:)HZ&R$:iqhamPk,`Fn)I*(LQrX.I2tG@,ALZY!EP3p&ZU0cYC+3dj4"Y;K?4](&p/\]s)+Z)k#'
%<\2f(-aTP:d[P+QSbHSf1PVLmpF>7iEAO4(=Zep9ru$Z-Ng@YR'c-,K`Hpt[YP3(UArH?=@_F]6Y4E"7bW3`.j#LB7jcF5^i*.c-
%((7jqJo@pP>:fQPpk$i+8di?`G2<(]3O.q/S*&BRO8\Bio(4^7q^O_P]TT>U/QR/g^WNm@3R6C*ft2F1b,OJo^M.=AG;`a#"^R]p
%p7'sh25s.=(Z0VIE+@Ab<t"1KNJ$e'aEcmhF"Ej5^CtHkJ`gFD6JCcSa4bBZ`qOCXLe`#Acge&;Y2D3AY+@N:@m.k5r#G,.k(nWP
%F>*,3:OkY_^A6[?$(P-kc-+$]kM)CbShCuBI4*U1?\W\<k+#[$A+jj550D9Tk/J/!&SC2"C\Di9X-HIrSPHM>ctkZ,q=6-%.asQa
%P[cN7fB#Y,RIY/mBaoCU>.o4<ljS)R]t'YRc>1d3Nifb#=Qrokoj8m8d5F1K(RT]r'?$l%1[PceI]CYT;k'C>.Yf_L&lG"K)eaFK
%EtYhHht"GXEum"4b14OEIamQ%lHISQs34>tbiA5Xj*n?1h]-pjj&Wd_n&.tJH3VW&cXAb.9[oW)$p!,#EPHjl`tl>?e0;M%OVl?-
%2G\@=4BZQ*U3*u;*$_7[Y@!f,>d>_Q-)-*k-!%Y.C"@<0938=)latt8[ks5Adh8\3ri>`K8(WC(B3=K_S>AWqWHklki\^42:ao"2
%98n=`0>2E8Udh+:D#Kc;)!RdDOt&sM8ju[s?Z71.b@d-5lH5jPBq=F-DTe7'i!N`1\oJO'AA&<t;<h6I,YB+djs>G\3/KC`q:T"9
%CY$P;SKiDBLIY4En3pm\`EAEc3K''@;Y)[:bkYD+*22JaS40t$ZVIZc1&GT\l<!4$8fhCVB2KFW;>uR.AoSSt`n!1\%\R(OZRE@H
%ilk3+=6V8.*b"1WU0a?Y8O_2dE>Bj%+.N('J!J<Rj:Q!17fDf2V4#@[27[Q!$_qL+[[ce&BB;25[BRUIh7,1(L6sA*e)]FZh.k#L
%STB4!a#LhR/tCEQUulYdbEE$uQb._opbKgfaOBL:G"'1))PF'Ug0_I8B&VtQ2b04p<U3`BdH+3@_U0qTh87QjUUsO[Z)t36SVD<4
%*:k'?ogQ?r#H\E.Tp6@LDmEmNoUA)Eo:ku?lbqep;L`pFr7Prt^eW3;h7l#K04q;^O.Sa#r"SuniDUT'nA/Ua^^kf&i![k_cT_9B
%^L?UL,\P/6\]#(_kIl%;2e<_1Z<q>KJGo5F`fPWD<=Ik@E5D[(#^o3jE$IU>iBuhK^)t5tgC50q+gtnX!Cn-eM[SuGX;P5#rU)'1
%lPY*H%bP+lgFDP*5(9pINBc@EI:co\g].QQC7l&K"_s'bWKAT>]OpnQmH/B?'Z05X0kilnNm397K?3-r/B;bg6YtG,-TPb\F_maI
%cOmb]5aS/rr`+:;I*aAWnD/SJ7IjLUj$.n`/=eGB$8#6tlkhLig8afFAdZqs'8k?CffKTL9BCq:')6__5L1G*Q6j;ugI-1"V>aX/
%Y-nPPJ'_u[Q5:#/_dN^9RX]VPoDGQAAki5RFJpS6;&#g>Q#?PPm;H$?6W!3QY7D>_"r7$aQoY3io1I$SUKo\jekZ)!C?@HP)<K(\
%ID'_`]_-F3G%^=;cWYh&2KhuO_X*2c;2aRK@/`1\Wlju?(R/]ZlY"JI0eVWW'j[C;!KUF^')(i7<_sS.bX$<;k7JER&M<uD42q6&
%PY:&->@7!$U/a:tESck`OiPmKmg-\r'NY7XmhT$Yg$%p!cMGLffKGi-pG^JP\iQdp@$Jp00Fm^Ke:1u`*/oAHj59"^C(9:@nR"*!
%^ZWCr&)+/^eT'W`itid'2f%eR,gQ(C--cV,ASM"(\\9q%Z@"<1i_5G8/ko]]'fR\(\(fQ1:kF=&OiarL)f0?EMDOaC7RR;jZe=_P
%-I5P5#_>FPGs$K-DrnL(JhrUn1c$ihGE*jhb[8uog\g,4=W]i^gNp0]m@W!"Go]8Ca/sOVdaDaJTZ(PQ!*C+G)ZgLbrKH@TJgm#6
%)=1=CM4(MgV,@RX[e]sooFJ1u:n2sYV)VY+-Mkc-#MJEe:\r>P+NH>[S.DCm9ZUn,Q*JforA?[*'kTeTnWrP8L9:'uIrcsM8Enfh
%cPl,mIU(CVX^SpL7@0POiProD8*u4`ko==-HkR)D4t@8+l(6/kULn#6>i+djfef-jbZ(.$M8R>f)?4U*`14)FJgKYhq"#(R`Rs,D
%YF4>/]K*&NC;Wp3Bn(i)pjZo<7RQV,jVjJ][-?I+gWa>_/Y([Z`dPmK,0=8--SEpF_kV+Oh^I"-r*"%H7p%\=IFfQHeu!$![bKE?
%gXr53e"f[,/spa(X@08CC\A-g(;BuK4UZrBOqel.CRmbpen8'(!2W]uMZ5WE`$iUWU4sA5)nEPag9*$Z3e,]b#>!]@=_t^S#GGG0
%s(AZWf_g(ufP7dJ[A+M*86nn40Etii%!rf._L?>UD"csm0C1V&h=_"LL$]hEG+4-5EE/;gmPZ#dMf\I6B@8RrYBgEl]ZWaIYh`n7
%>6eu\KbtTH5*q8;:KOXK3[Y`OP@e7,gUl[K%\l"4ddA1,gAB.O7=0R_R2u:2gS=`'r,SF+[1Zg[NN81@BRuha@1t\HPA^G-?M^bP
%Xe0`%pF#pBAi_g:]/lm*oNF[db**BY)V(P;5dB+F2&]'/kI&-/ZF:6gh-mT/6sLuX?.p`l/r!YKl)Y@2((MsC4gpk/]KL+_n1XfX
%p3Z-+Jhf]hQ+>N5%slJ]]-QkP%&'lKbA@,?D!!1iD."(Oa=rc?L\7`M,&Af0Rt!?N)%9`'A)5Bpqs<=e_I2$bT'65caUX50OZllp
%<nc6@BX_!FHNUpc.<1a69etHF_GD4`i'b(rctkqK%=o/5f'Mj)#5mfRcq'M*G3cOo)_=Hm>2kW\a=u&1*IO&`b=;0oJ4NZ*$sNm3
%E,C+/eZa/0*^H&)O-t/1)(ckF^Fa:#h<XciKu7f%HuP0*%kCOq[sG,@8c$GhRS*\g;GRgIWs'6I'OD<=824+eWHA^M@ph8Ef#A2P
%To1!5GM<RgT6R.7[@L(+I0%am]A:.4@Wd#^$_+R#)&r%87Wos51.cO$b6e%C\6QRkhQ%(n]<us.o<cm1:@%B=V;AXANUC/.;b.U:
%):Ju=]W>5sU=X;5R8;Umi*Y!fCnB5WCir7jA]I7R#>c9(Jb9o2DMNMa6\pd1Y*uJp?`I]cii[:/"pHdB3o2O;$N=29:rNjX<6Ip'
%06q:ms,9BR<VnXg;.aGY=3F3Z_FpsfWcKJ.a\qY=Xe"g?UFHR&5?X:86CD=6HN1@H[R9\F'qLR.cVa/'Ep9G03)]duP.Za\2_IP*
%r35GYT6.+F5q#7"o+*22AsJ!TXUZ$Bdk4$Nh9N7Uc;[YQSZVM?n7T;bDPq-fF<0f3GAFlZ,==GrpgN89gGs^TpK3t+c*Q&Q7e2m[
%9?pt=Y&e'**6NkhBF'&NQ`Bh+BO_E^/[ONZq&p$]d'<O+%@gZ22"-p-eRV808mVIgh4\do/e-6mGVX#)dL\;1C3noiD,eW1n@BTF
%nB_63,25/:U$>p,<p=O)I\)&k<L"+QB2n-e."C>SINqbl<_PB"q;.rYH>9_<<Dbu$%KU1TgM\nf)0RPnGgRP#hlC'a"ZB?@Vt[=5
%<E:..!G2ueI.&*kO'9Hm)Iq3#S*K4(QLCB7T,!Dh38?Y\/rC*KS:O1p5Hjb+#-%0:#!6Gg(P='%PR$);?U63mc\kE7h;N'(fqV%O
%Xe5VU96c7\8MF*WQY9$Er?n(gSZQp?a$Hrh'^<`i'FgMO*PofWLB#p9oc*iq;4JIC?`quEk`r0=AI2[8FiqO3q@k5/3q[K(RN8hE
%;WE,gj!WH``H-?s%mSnufD"B>^EC:q_ukCe:al?T"b$CGo*Dc'h(+ZL>aEL)`'>r]s'i%qDXS2=TQ%Bl\/8:VOPGC^Q)Jm[0>SEV
%HnC/bNiW]k-(-h5;ki"I(GZ[Tn]T%sU1@-Gdo0C<:JsP%o-oNjrDZY]-kdn*XtdgQM#KB22aXK0F-n@HnoMpYV_qQd2TN2W[d-'0
%\\&X?E6++!?XDrdG<*Q\AejYh:MN8P:<ms2")u9(Ik*6DE)3bt=i?=^6Pp,"K?M2CAK'rBs1"!9;&2g!*:[#hgjG_^?TEuSog$c!
%\D98BV.W9D+I&'0`J;rSN%8^bP!,*#K_83EIqa+;"^1Hu_n%`Gdu@J_*lLXPcLGIp7hG,rl2aa#<N(^d3)]u"c"!'9UB`T]rA6/:
%@E#H.CgTB@#q#KG7V9i+X:A?+4Kac+-"U8bhJX*2,hB-kMLXb?G^9[)<c6Q)?gcfSTg?BK\TCZ*6G7PJ-]55.S1%HS2miWq$_EBD
%[""6+*Df;7Pi_[CR9k*a)Uj[K1$DBGdr,3#@uA)('-d9mj.bDu(NjhJe:sg:R)3Sbm<+2NL6bYXCn/LSk`1erbRCg<Dmb.P[e#`[
%0k==tUC/-b'9\\?fk:k!-_7N"K_VOfp[Km'$EV`k=2+H=9Y%oYQ89"??d]qa5YI_S4+P+$1o!ee:q@pVA:Z**mFqeA5XhD2KWC[h
%$EED<HuDCQb(p]e8"O"FSP4M>"aR!#>jqHm?Za=fT^u/qJ,gn3'A(aYIj7'!PVUf!/2Xih[2AuQ_jMi6.4fiV6E(A2Jr9lW1KQKj
%2S4h`H4\nRb[=g4Cb%Dh#M!UqlulP%?E_0L>+94#P/<s@:4=gAkq#6.W6cBI]\Hi#)d_A9`qO8Us0r%s(F6i;RblKtV%cP%FFe7=
%rR8sj1H;7Z7XIA-5nAG)A=OV*6h&eO1`>u0<pJm'JHaa)AT91M5<*HO_"i3"Eje&1/f&.uR7pUFlQ5FY(fi>7%!;oua*cBClgJG4
%YLu-XerA4I3\4Z#L!i`T$+k\@'sD`uo(530_T])]AUC>O^8T#31L,A_!SH;`48<r-U08UQ^O-='VA0r5QcVW59ui)7@_;TT)j,s2
%1fg+.=T[HQgg`MnbMeS;%ZHD8F?.).>*`m?I3WTBmKg/9-+4Up1=uPO:49@XQQGfB>KX#d>cKPc,-T!SF-eE$-o5%6]NB&oZ',n%
%86_V.(hMYlVG7p@Z%Z56-\,@@g<Ae4H(Kr=Rk31QOL[.Y_1^-`XMR`EIDK!,TPP479Od_?S0h>Cg8f%>--$cRnVF2e=XGmrI@]pC
%;$2l<XFcP$nK%BMK_!@jSg`f2I)Q2mUcLV.QK$.l67&];=/]IS27c<9,OTS).bb-S2Q%XkmQs\r'A;P6<+]^YYTOgicqHL7ZaGX=
%aXfk/AWL9:kHsYLh=7;=kE1L0*6Q#5ceib/7]'(AS7C-f6C/P,Z__\AG1BYtPfiJp@F@Y/9BBY`aD<<.)=>5U2R/.T7=0c?PsJCi
%cE"INO*K*g54&Qtd]-KX5Vf:;F"%6!"ep)LKqh's@pC'V)Dr=0JQjfE!P2QR"D'(=PXW*4&j)XV;m=B0=PR^t*p"Bo^ObY\8V>Ij
%6uC)+Hs*YNL=+g6bT;1CS8(Et2EW@\9AW$o,<QNY[EMQKRY,q$eJku!A@S=]1C,&dKj]MbA\#Mp7CQ\lHeUZ/dq\lIRuP<Y;ducj
%*^hD<QsmVNCPn=kXj1Ja#P>7fDLW>+JX<d64<Z\Y?#G_@I]_4;2KH1)cFoBLa:>t:V9?9<3!.iL)G0Xb:$m*ch>1j#HetiGs6>CZ
%+4@FP-!Z?q[Hn$'B.+jL?k_:$\)#L.YKYgV?eCOTeAu)2aa+md?/T;^P#.iL>eX]R3pL%?doYOLj-P&FM<u#p@V4c9F\gr[PASZ'
%bfkQZqe&o6qcuB\pI/!UkEsf2d61@<kH3$s/u>'=oH0Z+11V<h6<(''j&Z(iLB/,JN;V[kXL45VYhqKS2LaC;G9o_Y!EMZSbIFN-
%?4EVEl\huJ5!6M<5O-a%WREG%'"o>CGqV:Ug#G_2T'5j&jIj1Y&GkEt@ddSJ#I[*`\b$lBIAo^r\2[q<[G)Se1W/?P)R,L[iC8nH
%F)3gO]8T4ga^^^)l\l@0K[MId-HdPFO[a.iro2rAGmA8fp92#ogl$p*@!Q<GN]<cmpqu3[q&;=on5EF<8".JLUh6-HU`g-l*,!28
%Q"?;p;hd#2Qg4P;;/KF;rG;1kkKPXJM:m@EEfSC1q+D.>3Gq6/pa,CCdf:W#Na"P9phT#ciTB5(`tUIN"I&Eofi\9;D4h1WV+JlX
%n@_A\coAi`l)jM=f/,g0*hW;jOfmIoHhHrhp>eW6a,(cECRkYn26g1a!`USAXOA`b,h53JcfXXaHe8BuQP)mS-##+>=1,7VQ&1IB
%2VSl5ng2a-RCmjs4Y")Y?dYZL(e#TBiR)+F9)9pGI9<YZ#K(#A4BS^`gH1t4!kU%LB!plUJr+kmYLZ905a6XIl(Fe14<JCJ'W7d[
%o$1"k=+K$0^Vfi4p\<k;O8%8`5.n4&Haips^&;t_F//crr,hV-F7%ZS[H45Hj]8KC\/Dr.\eX"&h0AnZdB<4g[JK.5mRI5N*c>mV
%]?r4bo57[]T^od:Z>A@P=Sl"/\$<[&)f,qS3tHkc``i%=?^5pqgcTlYWk,J'2%Rj3LQC_c@e%`8MH7.T*XILcm9?XMLF:!^pWo>c
%LR$uLH+,hbIPEsus!YBsZ!Hm;^>8_D^@N,]<0"(n8"$L8%--C;c)Znt8r)NfS'b2L\^f"FlY"tE2c^1&oD=g7>8Q$e:E%8=L?iXP
%)u.b%n`RC?Ap^<ODY88GFBC^95M1][^>5sAmHTalouD:5MM?ZG62A^GQS*ZsrM-[IfX\H$&q.Mt3`rr?&PTj<2(jDQr-dgYIB2eN
%=t6.j?e<k%\(oa42d\+c]>%4Wo6S%(]X[_"c*J@eC\<#@N.#Hsh`@p3$IZBUTGI6*2nuK'^-$1I[Vn=CZdQVgl(V-?\G_$dE-GgZ
%fr5?iK!dP02bKY;Sb)^hGLmmhkFWg(_XPD"fIcd^48/WZ<EhCbY<3c:!R6=BRc.K&C94kd%r,K_HhZLIb&VR0*U]I+);\G5D3T7q
%DnOn0NdZ)qFCjWFE8setmXD^]rhf4*eN(52RCE'lEskB^'\p=:bjmK5)nbGi<B]%u],Rim%f3&"[Hu3uFt4)<laO@,h>bi7A-2JD
%(Z#KP!bAC-lT60fj8Ph@FnobMmFH>U^:_,O9sj&qGBTVa^U*>mHF1*H<$%YoPRY<S\A$Phro+<pVWJ`LHb&Ak1/M`WR:bD6Z=#=K
%gh3IP*ln1oS!C0^h6?g'lieJ_n+G+;jno#!nUp!h[VE332`HAaf<=2I>OPmb?C!PE.`Vdr*udF.YFY`^:%/&>=/!tO60#l6=8Vud
%:%)BPj`]b_gTT_ipY`mAnbK;NmIKd1)g(l=>8Zce\k"M9pi6;GoWif3q0(k;j13Nsd^9nnX:#G``E2dU^T%/C,!?:-g;_k*n9X?g
%g$g1;>XGth'?V0\qU\\F#;Ca9QJ#iu>9=cm:7Q7gO"8fTV[]!eKCs0KgD/ospQk8dG2k5IH^W$Q``:"ih<4=mi.C9O8OHMNXSSab
%opO)%c2.Cqg:-IGj6+CE[=7ne\U3qk]&:NV88tgU2n,,kp[4>CKDi-Yqpj[ap/`(9n%7B.*,IK78)8^CFab9_]5b<-Ek4+6fBTR6
%9Ap-=D:/o@:YTfH`ihV[>$4%HZcj&S24p4d9^-N*E?C^qUU[U4I=IR%0/#r?4aA+j_r03g/E_l!S*iJX^$WFYmBu>=s1u8GkfGc,
%*B/i[En-5[[jlj:)6CJu_gP>.IemZE;lr1Wf"8EeIFpO:Cj4`X98BG6DF,;gn*:1(>Kbh=cM$Xjn7-24q",%qqg<`H\6hCaY4HPm
%ps.=gq!FX[Qal_Nh,EF_J\q$)L[OlUahr>Hhg_[HH)GRRYA_qrB"?ZmrPO]`k^.YfSU3;c(Dn#@d!]N.Dk8QR>2/@=lm:ZV5O@:.
%;743p6<q!:*F3J54oFgcB:d&NX@"WM_\6F^H&sKeICm8&1H5U=?,,?:g)'.;V1W^4b4=;soPJ+:Bt4L<^:aPs:qaPVJ%58W3k.0A
%n694dq(t@^2u<3tgVRKCTY<EnqqSI2@JIKY_`g,0\o62%c6(g6>PGS.BC?q^n7QYArd8irf8Fi&o%TW]NrXM-Kl:6Io1qW+=/%R1
%2p85baqORCFH?ID^U9Z(2(I2K]CDKjAUcANY=8hISSZ0Hg4o9Jl.mT[kM=AbN\P69j#>:C-lL='i;EC$8TeT@iX@;geTGQ2<g'R:
%I=)I<)Op<PiQH?lo(k*=qH-'>>U6"p_a@"M$W;AkUqa5>T<<%JYIB:M+>7!tn6.]bZm=:4?\fnrcW:?<Bj<T$0<+(J/L;R8^uZd4
%=1/Q"0Kt$ole.%T01<4CP<jn$'kAq.T/0p>$Q:+')ALi-iepmFL`m`cA&suLm_cH4Wlb*scmrT270gGF19',So=O4PJdh?>hN6f'
%C&c_t;4Y&>gL-#A/u\PUeVL;c=_J=-1eOOC97f\]h:#<9Pj=queJ!8gA40.0hrdDBs)<o6C??c3l(4&-n]OD-(c#?;>YNWCUq]Hl
%BFi*$W!"LmUg^!+k8gUTPl/lQBkJ!Q=ZJoX8<_T)FFPRC\-c&eo>as#C&%54)#N)1#RrH[=AOR!^T.E,L@cUc!phkTDH7/dNp>\[
%6P1?mm,p>.E]B^[h^&1dHQhUGUo1'%Z/Np;^0&!8qe16="dkqXA;7&W8r%>VGC[p2`gu68XA"Wp3hsZj%a=)`ea7:emoR!%h(,(#
%c(if["XGTW+hXhFD7mRPqP;pCno\HCIeMg1Qtf46it(m/i5,PoX9BH#Npa[,>(CTn.jlik+,^\QDs-O9S:cg_TuCWiNAl'Iipu?Q
%reJYfk<Cl(8=NtUV>X0Nji5-'rXg^Ac>AchID4-4I:9OuY-36-mO#\sE;f2p=?"!'Dai?Z0-<C1%$mG!ZIlQDO%q1LHWs9;&:"!:
%,"CD0@.@1fP/p5t*EZ(Com#9Km]s7`Lc4+8:iiK1@!DWLM=J"U9+1d;5?pkO3%Y_[:LGcNaSbU4M@1f_q8S$bb8Dq2U3<gA'Eb;c
%\'AM,p[6]]O1@tbak$HHF\lgM3-m%G^T<'nCboNL`0^L=!Vl:cjnWM-#:S@jg3g<un_WE/>G$[5EjqW'Ys[2OQ(Id)dp,$*!UqL^
%?EEL@%r2Kr8J@=L:W#-Yl=&r=lfZXX@@/B%0pb-j#$4)WX,hkjSfS572VZ'ia2D^=_(+s-Hs(`8G,kq%m+"/?`mitro'f6>qGA6i
%?h7T['`i$X3au*sIYUiR*OIcn6hQWbG('D\95!;X[90T7&+;AA?Y<\GXoe3/Hr,2M]2:cjFDVb[rq]W;J^6ar\G1ICD"g,pS+_k*
%4]#241?QdBRIfndI\HYO[G!TY>Kg'mR-UP`qd=JlIHsg/2\^.Zq0_YNp/^A9Rr^)DO$s"O^A6\s'\9>22IGigloB:IT>-J8?G+$Q
%HM-:U%Ef<]0A_/%EDbB%D1uU=7se:E=):)=]PR:k,AFU)c(LY">)hJ-NILp"[C<aEp+`JLAj'Jt`n$nrlSpNc&@l-@2P4l5(Rl20
%4dTLdXr2EXpn\\.4^ZTD*-si,XV-#n[Cjo%rp8nC]t;H/\?<<F*a<N(@'85@hYqiqg*r69h,lo<db/mBlMg2$e,'A%Qjr*E5_f#X
%m]K&*?_4E"T(VQ#bOj!'[B2rnS0#[>;fW_]q<%71lia0>E`O/=N*T,H-AF7]NB*..1Me>SqR(ZTD@Kc8j`ol3`)p5.b)%Hd,UZ]s
%'AIqX%H_^hP$RrVq0AHr>.(,@0=L>`h]%lQ^UG0!O:RtuBN,o5nZqG39@k]7G90tRo$\Pp;6G#E4Y$%#"nMe)c?fB7?Yt8(h3=pc
%](]U=?/2o_h1H3W,-*A'8"[9)I_#+`fKZpTnRM16P+KNcFmfD;*8J11RYZ1?*5qD^>=T2f[*6UG]C:kDkocnnl3VR6h;3]CR>Z+E
%]"?MJqXX4@.tfEgbkE+7h5]AA5*`dWp_C<U[h5qU%hU&pmZ!5!a00D_G0X;62uP](MPXDKp.e6WL\J9Mgj8NOgcVn^I2]nW$0L3!
%b0J&m4ViV8o-3+nf+3sefqARRdGaJ^#MWU(gjWTj#*j&6URTGlB1mH80]\AT`Q>5<kSE^][H!_]V\rGsQr`qd>PIRia*bV==Fcg@
%pN?)N`g`I8TdF%K9:oGsL=P\i:&hH-@XN1YR^MbWagu:RcaQ$]]_h[&GdV\WeLguNbA?.B?$ZJB?C#GeUAk,!ceXYS/h?MT?ML8/
%p+fKUXnh)H)4T2Z-?/Xsa]`Iq\bj2I2sK(n"+U4>POmbH407XiiG;D?l,E_cQJGIOO?=$04Xn,o^Nl@5+FG[Da?4at^\/86l6#n2
%l&?c1Eg3\/78WR0*oG8bYX9!,lLQ-C\GbIPHDOp?0fkVTr,UhdaE;stQ<VsZqU!3pQ_i!&SShJ8&fpFP\)*$eO!!#NQ`F?:2qBm6
%1b=uPXY4P`=5jVMTf5U&kJdm)-N<^HlU,`<4/(4"HiMA7_ua<&Qb'(Jn'M]'EN,Z\roYY>+*`+E6b:F8LOk@Hc0-SG=_[3+'ZU#4
%V#4CVIPl@&ZC[6:V`2'-V9^ODjc,K&V`,^O4/M_g=XgsRl/$Wun2T4&D6I#qKHp!02m.)#^29HX7(rS$P$Gsa[[au(\@nOgm@@Q9
%X.#hUr+@pprhR5SIfE:?jQX[F%r:XAWEeq]>6D=on-V4tpY-X*NXmd6j,\e)(R=!/@qB0C`HTn,8am5)%YO*%S[.$Edc:$kaf00L
%_gH-bi(j0cC%KM,V<b!Kea`:n7HNd#_4\)][*9qLot*/$]nT;Xrl=0sb=@#mhn6N11YUN;c*K9S#s=f'$NdiU#F4>e5-,!kj)Zsi
%G6X\S4h7tKmJ06O`g:,q\D&\-:<U;#d;NN^7o/QYmAbBbjl=C!H5M&?=Z6'nO1Vi=^AHcm*<5B4o&S3#-H$pE+;2fh2]i78d5=[2
%Vt$')5X-uYnZL;Fs2*>"(\a+'e%N542tHi]D]r5/o"F\DhK30`rqL;>rDE"f*L&$1Jkq@2k)-qm/:RpH^%Sm,rlXh6b\Pj&1;!m*
%oujdbQoRN>hl_.2l@&t/Y8$FPp-#6cG=pi1mP`_VrEcI-3_m587L$7"4A)uS)d%]bauW\]^$ihnH?f=UZ%\N%C3'f,U\F(k"D\9Q
%q63f'SB'BfTO3,R[d*>YD!bBYGhW%gatIsAX;?[&p#Q'@Rr=,ROQ6>XB-3]W"i22NH*\N/guKsp\N_%;NKWef"nN]1X"26VI3OZ5
%Y1S/Kf@k&MHf'uZrU`4$Zuoo]hk:Xj<*pc^.(*hb[`*8Sm&f*J9)IH0Yd42t7mdGVB,@"XS8UBTgKX@:_.Qm7>jH<H7JflE&]g$2
%qc1A#?9:?cI2c5]hZFX7(a2d$.bFq)]i?%`Eueqq^"p:"o$2[1iKoh2EalAB(O`Xuj72q>TY=^EPk<^ip%J)b)PAIW*[F7JiB#Y2
%r_\-L'n6l1bbN"0(k!\Hl/C'k]C4D[k/Du(NR`.hl`)/`?eZ(mE0rq<,CF^@<Jm@VL2:4HKmSA`.rWT(lgqqrF7o5e#ekeTP(*&`
%>Xk*AlV5iN?Bh1Zh?fSn\F9CcWqI-Y^ok(gI*q;%05Lhhh0YClUls$QnBM^FYi>fk`XfMe2bp$D+']dD0(6fm)IFAgBoOQo/JNB%
%)ngA::0HI+*@u,ZD,0MA&q+l&IW>=%.9\0,B5qCBk[ZA-FdefV=ecSAH2[P5'L"-6/Y@K.>SdeAXm6qlYM:drkKhb`l^dNUc*crm
%mB)AUc`\K3%:@r#SE1i8E;C[%?lD5sQ1iu3>BJ!FO)+2B#'\s1Y<7<sZ7JN1i5T@^bJC2g$%!c2_ljjs-s(k"3UqaflcU*:>/?sU
%pU4ItFRR9DqK?0<8F<@_O8=MN>5GUW>]]8f^Ai-s]O'R;,Cl3.jm\qj?%:;7q.5725oPaZiMohg\$t$sYn*J>qs^`j[M`slnkTsF
%nV(mPDL_P2EQZRkgu40hQ-SroQa4.ZX9je)5?N1=epkA4l5Z?'[%AR;DL_QCSF\0AO-'D[Ze[POf7(71*PT8l0(.8Dq<cqbiTotE
%eJFipI'8._kAQ>:-WBWG[kM7`X?js3k:`8NM,^X]brb6HQ$]V<p%@G@cSnMEnd]I+Ft4.<-F?RG'4E"$pME3T[9;ZcguhJd:@QAP
%V@:LQld^-F/t*m6C2^`A.hB)&hqHqE]</1gmnR5Bmoaq.;>=AbqW5cddb.U/5Ok%b:J3X\I<W3Ph5U^(rQX01G?\KgkLKNQ)Z(8f
%!k[32TNC%KYdO$c3na/^\gsQa[(\)`PR]3rHgLCBO6<pk%q,XT":MGVgE`^:](^12B_C_#j`Bbd%FX'S6[\\?F3o2E")Qq9CYO8;
%52BnR<-I!W[tufSEaF1*Z+]dW1Fhd?=RHg`)B!Yh&M:F\os]qk[s[h1CtqkP+':Yq[)"QS.[fiNjr#"b)Tg4LXDZS&I:"UL*ad[V
%rjMIP@3ac1jk7%OMf=I7"hoFggNiU:5?N@.q?Wm2DThM]3h1:4c`@cqs4mhcT4jBP=M=5b`uuorhtZ`nqcg],@i0ajQXMio%^tY`
%SjI4rDte.hYI?^PN)/=(J[_O.TjR^q3]sMT)41Bl&KVfH%jk?PM]Rh0LWS"q-2qnf?0gEYp$#tECObQW`$aE`IZ(niSK0olK=i(n
%T8ij15B]?jB>K)aG8M-4-Rq*i%tF?_XWIH2T;=FrICE&?n0<ddr\3Zo?*AH%L"1c).tk=E6K-Pm`l4dIkX;Qoq;b*0k%:S&r9eca
%QeWu=0DO[7(Z)M'm+0][YPU4-(^6>%^AdXEX&*9?hYkEX;!P=30B#teoIU;);%1<$Lg9qqEZ><J`0MEg>Z4J$`[W[%3UErAm&t'k
%krW:&'l9qT>PS!H.Q%-T0DGMANu,(Q7e.?IT)\=&nIeFm=&o:^o06bOit#;\Ga.Wm5keXn\_qK_@>[>j18_05n:F2O%FSC&*&-nl
%a7b.QaC.Y#SBrom;%OFBSCf>]!VD%dMRo*TFDX*O/30D&N2&'HL$BGRRI(?Tlp?DS)]#,OY]$;Hk^$)&S>'Wm1%Z[9+,/tqWgW5]
%W_R(@h8n]sh4c!BA^;f?1^tbDaRM`n\qOm2]8E6lJ(hQF?&U?("6U@URgt?BA@\I3h*O!*>t$G"L10EU:*M'G"@7_[9ug'fN1<bD
%DP<NPXs=jr`Ae9Cp'#QB-l+_jW7c8h[)-2rW`uE6[]9['76>%[%cN&<kXgjolrmH;$,$qDY$T@f;p]P:Vs&k1/=6^V^h(Fq2&l7H
%?>)j(:u+GqZX$!R./KXVMT8cFF_jhb<2eJl<"*0MO$[sse]`1_5o]"m&MNR&)t^[%&N-#c*>lY%0FH>^<&<9/"MJ7aE/tQU7GIQi
%KGl_;%Z;+o)'_u668c)T75-?G$g0mr.687>^N58N9fmOG$/CZADP<NPY&\C'(V>]7oE(Kk)"<)rlj,Tl\*+#+7B7+[af6,^;;/ml
%RK?_!Arj`JKGkh33-%F3VW)(Ca!4I;68c)TWF"0\o1$/*4)XE=S=i?2VHn-]I^3$(:tMm_[OTA3ro64_@Hh[gh-3)3d2=D8#:5=%
%;=Ke-6Bh"A2C_q0B!s5'%o,JMM\8/2d)k?:S&U:9'3-V`1YYn>>u*gAd%K.:)$D<7dPRB51/ZRg27$RW:esHe$iN8t"[SZKB[\r'
%AYQ2YC1b*#U$HCu3:T@?`#`H0U.sZ9QAMUWWgW6(JpJ=::4+]-&sC@n1ef=&9N8Drc"pI,FZ/EmCr-0*jZB&QZA9Dnl^9:3<;!;[
%XX\@;-3?@4LqEmOS=d#s3gXEPWeG2"]8E8QM4jIODCfEPS=aKD31"3NWeG2"]?7&39GA9dG*eBuU82KYQXuqtKkb53MP-PtTSVdO
%EY?4aM)L?7=XL.PW+NIg$0"V]]!e;J#sXIA'5\ZNZ:n6*:sEf8He-V>)7,Vp!)_L+7KYk0CLs9:"Ysl`3QIG#E#h5EK*G>GatciI
%5W,TB2.`b$#]/LGEl-7''5<`U@[X0r?d37?F1S[0WlKgi?gRB?Suf=22((m9RSBq!&>cG-N-<<HbOo7Gk_T9\f33tKm<]=2_9%B3
%U3'D#dB;!)#B>>33p'TR;7#KeW[8MdLsf:'7_=Oc"If)0V3V=FL4-,dVd_jodM5cn9hEN`3R\WB4>*rO2&l63`4&72F?u2>Xs+\s
%,L;7kAJV"PdnqiCj,k`q:h@!a#mPS#EhgudB-D"H*IoY[;[W\edT'::]9u$?NX(O0-qZuTNfn2mA%7J@<VOn3Sj[aD.$1=JYfT:)
%%%#AE,,dRdM<sG&TM=INa[A]/QdMu$6`Sn)^lF?Wg9;VU=WiRYdVUI;]$lk9NXc6@0Gud:-jecdg/S8uV^FbN*=B/f*&a35$/[Ml
%<<GX5H5b:qTg5%n_^6%n@9pJ#oDlGrH;%Y,cST7:dY3s9@.>e'#Eh%IB@qi5c\jnD*^+I^^;J!DB8'aZLj=.,^:l6;p/orPgl&J3
%(H;JM\_Z61E@C-U_In-Fcj0d^Z!/>TE$3Gah,'bAC^FiO`),U[@<=uI(m?X^!tT8lap*=Y#o'HTqTMaI0a-GF[g/.Mco[6kB/Yhb
%BESF#Vr_$m&8Z?NFY")2Zti/Uk46=a&Fm%A>SpIA`&j8$!1+JI631@GSj[#S'EjFE)_iBo$3?J4nJ5NWlM6$e0ISslcc:S&%N$<k
%(>Q'*VqM<2,8%1W*`s6mV"b,*JOpN\1!X6b&j<H1hN*j]@i95=V-f$Q6dJQ\!bCn>gJ-B2<mb7%`*f6'l5Y-QWuo8tZKKk:<6B"K
%1/$l%oLS1mDCDkbH8!o+QJ!n=dikAs[29g5"b"pO'acX*m"CK<'QGO[Ati^Mq.9^]Z^qs\C"].`0qT&l5i]*XZ\])CMj9MB[(K'k
%XpA^>DI?YQXQ6=3FotD4G,fRblRVj!phL1/Jt6^NE^hSd&On&D)6l5eKcV6]H3eo%=MW2b5r[FIea^Ed6)'9(q!Z;'SoeTV`q#j7
%f68&^@];kPM$(X@&1XSF$G%6sS1"aY]48r8MXB+k8R[_=!IUt(-0:KdOOT?ncE,)YBu+?_fLmV$eEBANE_%qV8WSRK!"e9-04?Z@
%J!_3Pn0sZ]$ec9PP;F,")RdCkMs6UP0V:A&jFDifCpV=O[idr;QGqLsTnc*t'dSN$!%UW&@m'R\lQoA>Rj]&'8f/=4=u?ucfRhec
%Q,W.CG:l67(HI:&01_`qpmJ%;K&kRL1LbM)QCHNH;qm)I/t)s=%pYglY-)$M3Yq=iEBm>)\JFX4YY'tN^eI'HR(?*0FVW'%n.V6<
%W!+dhVH-"c&;N-@=V3pP?r(01JH>_:<-/t<&T(_sM?huTU6=DK&s\&_$7L?q:ZY:;?"OQ>C2I'>JCJ)<Q)3FZ$V%/>Qd(81=;lg1
%>U"[E7r6A5JjO,l7&bGgW`?!3-nT48Lj9UMD[PXmfXFF@kl8@aRoY&J*">g#&5W_1>=[(>3\"cWmWY-)I%4u2&T/MZ:!%#!nX3`?
%KHLO=7YB2C$IlZ9m47R=2MbKK(iK^m50J(?7D1jYgX_0h(dt?7-n;(A'N"FdNlmcYqq\-#H.CrhgFs(]oZ/i#%R_10BM(Q61_-80
%3Z?Nue23DU2(QU-$*5V\cmBuodBS>F,AeYlbsP<:*Wq[ZBaQ8;8l+PBmJUYgfIRu0*&mrPZ"*DIQLK'G6O3eBefcHH%\d-ZRYF_G
%iWP7)J9XF86eHLX![%mR3gh.#fEP2f)i@7m1^+RWWMFR#k'jdN4E1.'1)b[N/:p<M_4Ab5QnhJD9nOiONCL;W2%?BlbmL^M!ilYZ
%G0"'#;5aj1.,)+!%-&I&NC-PlR&5DnVt<s6eDBXP:VbB`a_1ZNc\dZp!2P-:dZf>MBHBR@Gr2O$W+dY3CK?7:&f>O:AEuT\0.b,J
%93YGI@2fYRdh#?uU`)b>;]7,ulKrd7-3gqtV-Fq?N,1;/[+VIr&-2egMSc;`,c9+hgK'3n/GQ).&f>Bi=Kt"EL):J([S>IFK\D*P
%`$bg>6p_5/G"P!\9We8*ZbTc!Nf9+:bQ>u7^bJ2IJ7,rFV4`o.%7,hj&Ci8[1mF:`.qkM"<Y\a#P;1#,lL9pr(dnf(+A0mG;(7m0
%JE!L!<6j"Mml$5.$tEdpS.!hdbqKd+J/Qh#JjO,l7&bGgW`?!3-nT48Lj9UMD[N@s^`radJ4Q3Jdqrm=0Fso-4;='4BaQ8;8l+PB
%mJUqoK])H]EPfu<[N'*.(]_Vl-X'@S$DD_VV<61(<hZCa[&dCRk"/r\J]0oCJcR6.fqje=XV&H5Lf3h@<!oKOT_Ks!Pr#iBHd+?e
%46>(`16/8@9#Cg&_=Eq)6:ddqUB?Tn70^X&>!+a+%g%M!KPJ1f;;3i>6HjfQG%bDl,a?B]8CU<@@<J-p5p@$&gmFKQ`OVBSdLp:5
%W.pPNb*cG'=CT?*P>9gSIlap2Kg:<[8Y_$.-n7*1aX=3'bdC8'V,/s2K[j(g#AF_PNMJhW7N,7Sl1RsX.:&2p2)qiDO^TH)^d7s!
%P"3]g!GW_\)YP>I<#m<Y[!jae6Ht]\bqp#5f;Tf:66S1I7L]_KWl3@C:^&:RPqt9WYsa^_,+ZY<rcG#-$\8R@P"#m2;,h9AP>PN0
%R!5698tfk.86<irO!\=$g.[<#1D*SXW+hnC;YhkUC2m,X,AJMuk%OHBj.g--#dG#:e4Kop'o5F1X_+,U+\#(TB%dM@ldQH.TFfgJ
%UP=a><UsiBW.^tPb#oXQ=Q7CUO\Y0aG<5>j76lNp8>Cor-n=nFaXO?'bem6rV,/srK[k2P#`2@`NMKFh8;J`%2%<MP8mg[R/P[jJ
%A=,q9GE>%[!Ra:W6Hu<'_b:c0)T3ndeh^oLW0pP^O[d4A.N=$d#_Fs4TOB#R.cF@uW.:,0b*i*q=<bj@OA>KlIki+A,uB(ij%.BJ
%%:W4NR&&01`OlU:9F<Z+8\-s[KJX8Cd^Ba$10u*%PRV?"paJ@k1UT0HKG$-Q-@7S!Qk@b5+@8bT-oI0=8e#7X9'[Ad1W2t$e4_B$
%Fe'F;+r!@"C"+gMU.RaH"4`L]=#j3;'2'koB$s6mjA0ECZk/$i1MP>m'1J`%0mTVgN-Q=VVA*dBQa"%r&Kq_nTp[`PQjHV9Tr*BU
%8Em1FWPs]?Qjbe8j:CgZ1IPCP7&ZM1C7'jP;M1@TdX&o\%5h&k2:G6$?)NRA#_gW!)E#`lW01!+5W,A0<R0+RD`3ep_$jb2)fDO_
%k]sEF1pHRQ&Elq6&><^aW*q$18e#MR>0k7u2,bEq$Ih!J'eVS^ll,2$"4C4:PZip:;F!rC.j;$sEi'=r[ul2d`u$\s!k%sQ#TQ*a
%^p4@d&0XM0PT%Y/V#iXd@k]#]L65@^Dp`.BQ5Tc,5S+)<e"6Z7Pr*5X#uN"BVL`JQl)U>R`Hb,1H9R-'"GrqV6:on]o@V140EKim
%ndqGZ(G0X6Q%C'qbEbY>[K'Islm,;R8gof5Q)L+W`Tih4eO0r]ba9h`a`]NJ9(=_E<'j2]j\-[i/7iT68Z,LL5Flmb.4D!OKS`rC
%,QtOS0Is64N6+k1U_IQUCpCRs\nW-%+XU)([1L0MBY&Ig5Y=u:9`7[:@;?]N-WH3mQ$#M=#boS=Zadq7)UjS]I'D0SVELnu;Q-"e
%`Tih0eO0rmk0Y<Z%gAeGRKP)_V5\L4r[*r62%69ZWQ:],\=sZOdO)gV0!Q"?>(;nOelp(h-T+d/27'^%3_?e1+p:4W+\7Q&J5SL)
%_Dd^@dT/A,L\!FCq'![!Odh`t'M;sdJ8F+$+m>Zel3q`oo@T63I[HM`]R[UD3fO?\<RJ?D6AZRJU?3GNeT%$U1_>e^QueeWgRR>$
%5YV@2OO@2j;i;<Yj:!j7)(798e+48GJIj[P:4:VcLaj/!7&op=1Bo^8$8lHVXKL_977%++8.%1iUd6T&DBDl?dT&;+K+ja:$kqlN
%#l.D_'agWHC*5\6;>Y$'kmjUgX^@SOW-M:>3R;,VS>m847&YYnC01a=/Y/bi.S/g(S>j>]9lu,HoIP[nl+%.t5_p<bVa"oB7$S+!
%1=^]j)2"A,L#Pehe*:JLOu*G2b_.B%'1'$VRKfc8V6=p:(+6LC8ZdYmL719\=k#bLLfas\C*eH]%;Hf[B#P-8;@58T-*ac4=O\#r
%Tf1>t@3\1JGa\gd+fVP`Q3J_F056eEmhm<nH=mh$5_tk"UP=U:<=754:s5:F_aZ*)gm>tEH=Kh$5_L%IUP=mBeH0J(W.pPNb*cG'
%\!SnWMH2KA'Gq/OJs\_#R6W=:>f%U=L)E$Gk!T2l6e=<<`\(^#mpuW3&kW::&iJ]<XH!mb-:/m$N>XE"cDsN98>p5N,pY<IcHtFd
%,"5r\*@E>NFI8t/VhddI5q6uP`hB?\)b-Q*],5Kaj.oL-9#U!UeC-5[Ju2D<@2T+Rl#cep!=:?C1Gh%qplH=^7rO8<(#N`N$%QX8
%nKP@J!N!Xep=*9b&;qGQKpo7i<laE!';5u+7AGTC-n<0a1mA%S=t4/uDIQHd0oV.E'ONnse#ZIN9nQju[1,R$hD"6Eg;Ujb)CL6-
%&YZ@&@QHrrJ@';-V8b5d+ebd,P`X6k3CA.WM?VBc(o9g40T]5')i-qG4t8N;[P:UX2N0N$Ecjc=9ToP&3"RTM,c=41#VDfK__Mo@
%nnB"7"f@a2C!B@'![NNJZ'jTDLMrW$MP+B3,c$0gW72_TQs-s96rD.':c%scl579M+r!AmB[e^F7>6D`L/L?);rnGT:$at\0oeFH
%VYJT;aY`;t6/uY.0FgOJhD>DcY%GU+:'rl(U1%n]Sd\1%">-B6__;3-_Pu[_p^%t+1\<T1;eX*#qOEr49:dEXI,j*t&r@J15tpQ9
%[u:[E$lJ+tU#lY<>oeufBd*bW/V5B.M1K^#OG4B3TqQL]eg>G2baeY%<1)`>S/a=eVhd5>U=;"(.eTYfTQW1;e2V0l4ElP1ot`@.
%66S1G7LeBS<(Ns%-m^,q<R/tJ`(lg7j63gWMD'Ba9X@J+1lb$7j%r_?9iF=EC.8WlUepZi)-5A0`K1@Zco;q$N'gGcTr+NJOO-re
%6[KJ.B1@iT:Ojn.oI2N>3^qCT)E!I@;5lKK!O\sG0oV;_bqis6>os\H+r!B(B[e^G7>6D`L/L?);rnGT:$cs>0oeHlV>/JO__gZn
%6/uY.0FgOJhD>D<?"AU,-]K#lbHSE=)Q%3cOL>Ume2@NR"k4fn$Bf]bBBX5BB?JRXGbRn%V,)bYc7,J^K.&U:JP*=a$E.4SLgc_d
%C7ZfjlM<a_&tolj7\b]T-n6Ll1mAUcROVr`mro_k=#UI!j*4#_4qYaL],!4]32[&97\b]T-n<cE#bZ&m)hr')BN:^6ll*]j)mEtZ
%NChBFcnlXu9LDZ#TVeE)OO-od6[-<"2!jAUcjU-2KnU\0+P@3^G%e*T&[[Ne%GO]Yl:k2Bm:o*!j.oN.,0UN.L)\[<@cU&!Uh2l*
%*/tlVTr=&LdniY-BW@Sr^#*WGcN;E7R)+<rT'iKg,QRC59$KCcco;q$N'gIA2bcSR(E&pd8Y`@UI]KP1?*UG7K><l($qM<B;/.'Q
%jUqn=,T''eWgocrhea>LI(s:u"71d)Qq!/;^g(TX:(_=_7&b/7<9d1V5j`;U%-+/1W^$[@S?UX'StTdjCBfI3dAUInM@'YI%Ae`2
%VTKe1qq]9^_>-0)38h'*C,CMFecX7N(bcLXN^aK<:fQ^S;aB_b7L\=Q:u3D.Gh3d.$jn31R+D`PNMB@g3#!)?C)T\N#u-[@Zo;nb
%W"FC0M]F/<:_cUr5pI>CD(c3@Y&,Pp;+%8FqXR?R"LVY>pPks0!4a^U,]lOS6A^+_M431t=C(BJ+q]JR2s*#uik1^JV21QG.O(^o
%Ei'm*[[V"K9(-pIIsOm)V4\A<8u%-7&Cih[9j=`6gnCNu8tkC5.TTX*U.@Wre4^3+X@,<&SgJt[885,pWPaS[X;XRV]:[0:g*/s/
%#_FC$TOAuQC?=F:Xk#2o<)Ngp:igsuX6]^],_?Rb&\`mYg5)J$5"u0FOO@/i;hl%@AMoFBG<q?U]iU(h:^G=A;8Z.bC)u;GY1>Gt
%>#I_a:ii[;=3&!P9nYdM:l&":)5n6H'1#'_1fhoOj.pj'WL[uu<3qAWVHO6-dWRsAg52J+Kt+Cg's0DLM4%87\a>9>otDl<5_rT8
%UP>$^.L"m$6:22RFd9:T33h:@_ao)t'Y2\>W$hb%cq#'4N.e.\+E$ab4l^E,[8I>h[pZJPhEs^U#Z3Ble1_P)V21QG.O(^oEi'm*
%[M*En9(.ugIsO<oV4\A<8u%-7&Cih[%:?5Ogu"o^8tj7J/Cmj+W^oH$e4L')N'oo[SSB6HOO@,h;hGb<Pr272G>F>c\\j:K+FrU:
%QsgtgBt`K&Y?!:DE`1A^:igDQ=3&!S9nYdM3f$]*(oRuUM4aoJROVt8Ddkf8e3LNrWqjP\<g82&g.7#t1D*UP&3#3KVK'Y?(b1N6
%gU('gn$=2M%OE>)6k)L\</RW2TH[8P.qe-e@_9%&U%E4Po#LK09e#]mXC3N:)MURXlOZ"/[AIs<P8Yp)RTm4&?15<J&VR*V1hmkb
%U/FBR";R'I=?0<@'AL&T%&J/KO[$PZMGd7V%Acq>:l&j,iWc[=2"$#p6`!V#q\H6urDt7r&2f\A%7<ulMPuB),#T=0BBjJG]=<Th
%oI_ZbVtXXt$4<K#1hmj7;6<4@/682dqkD#*C"1eX`S,Vk<mr0&YnNk]:'N0ne24NNdeYG+C2m]E]$sE`j,3d!I9@896J>+h;DSna
%Wt74M[A%YrPaX%TRbPDU?15r\&VR*R1ht["U/FBR";R'I=?0<@'AM>#%)o\_NDK[8Bi,3ETqO;X(^a-B6bS>X'ogtEe4qIBguHB=
%HBT+Y+@PUm;8Z-CPnIgUW/$VSb*d"7fN,1a-bU7Qr94YpP_)58-]K$f6<*7^GEfM4EU/i-.YX>g]i\QYfHLo\W1c%_(lG%c6qme!
%Oj[>l;igOY5Jg`7*kKI+bS3Z-2urO9^b[,,-?^b^.mX<c<FeOTr=M;'8SZ`QOU/ftQ;49g$kc2!4\4)X+2R6P_4c]^Li[(oO!r;u
%r=K`@'1#'_1fhoOj2CX]$q'9]$fk*%E1dmN;+'<F#rNDcV%.JY7V`od)Q9?-W4>-Eeb'u=VEkbMP6)1DBi'_c$(qo/g+$b#E+8\h
%L6:-^KfPOM('i!T&S`K&B0m%q5cHj#J'eVC9a5@)'P_NH@!18^cpT:8(=K-i,"/hdRKtAdV6"^7$7E8F@b=6?>TeNBIflN4LmeW/
%9rOU2.WpPo0Nur8aZp<#6I"m0?(L>#-mAkk%>?2f'LB-_RKtAeV6P'<*[e?Y6LBFf(RdMBhp=\$LtIQ#RLhOuW)Or._.Z:'I0O/X
%'StKgThu^%2`(gJTp7HL=:%hVTI,8*8?/_\V8J.,Nu1@73u>u/hVUR9&>DY29bV7eMFn?;*fSZ+DDG$=V,25["KUS^L*f511m:B<
%1Eibee3m+F.?0TKof05D&]7Fkk5tJ.q\ppe6I\iABgN7t;5lq<K@-.-XTiO='P_HF?u<TrTh,duXe\5"8/g"+WV00m.:&2p2)ql.
%&]7"_#6Xdc],W5N!iUCoQ3fDY@T%-SpS*q2Rgde'.Fd,odFHA<L*C(lg,b$fo+4k-LI=r>.8?'`of)b@Y^72QL$%a0k'!F"1'A`$
%-"I9Hm)\=;J=mrfAr97R&7sR>![iiA6<%7ZJgahS>Fq0HK:"68UBKjPm*Mr.6t*la:7OT&/MD[?jG[Bl-SL-=OPM)D`_"2&Ksa[G
%'S>][fjU$up-pefF;$(@R'9]QU=jMh';'O>F='U`TI<\_.,g,Z-j;n6?j`WG#YO_[;:ITlM1#Y%Cai3$1ck`CLEK,K'*2[ZUS,d3
%f-"Ml9TW<TNC2$$K>W^Z`f>GO,1qb0Sk2b:WD<(N5@t=`"BGD8Aui\5G=')f=dO+ACcfjunrb67@OA*YW+NJ"0ufngZU=?I8ZL-c
%]ekLp\d;=o:sE`t@U/eHj?$e%D&A5S,n^-^5ZPRfg$6N.%[h,'P._"r!dKW6J&k)Z$e<IE-cUDLr+'hE!`e_pa^1-iap+kKX\Oi@
%fOsO&A1mt=$/nC[8#0"CZr#"`G>aC34NdfdmlX/WS9gE30obH6WgW8R?H2I4`pi5EKhEt1_R(iR)Pf3rf*]I_ZYK`;Lr`=V:?X"m
%8;j1A-"A$K#0"B;,+?/V1L=T20@Efr+u(WG1O4u11&J&/+=+KPP1Q/oC(cdU.O(gHUq4]O3h013g9?^^.3ia\nOs(Y&D@Drg!iKI
%C@u"U>Up[J^skh&eBD-,Fe*m11c.NN,XKmE"I.mp!iUaIWleK@RoIhiY`I"2,AT(%9\:]u)FrtqWGOJjeYZ:)>.'alV3X]HB#Yai
%A'.s'5`",`Tr)fX.`G=S:^'EZQ*[hVWH>OV*L0/bhGgqO#XBOi&>l\2Kb2f"_i2*+18]GuNDc^CXObon[TO1c&@%?e%3$1`'N#H.
%4XAQXcI1[)1=alB3ese>dtq\thgi(j8G8L>LnIpuQjhS-ed5\mTbM2&WNe3*RPbD)W.>Xt)Mk+c5Xbg`OO-uf6[t:l;B,=,l!rdJ
%jd6AO'LM\)igSR+;6;t)K5233U6ccHKpjH*XH#;Q9`uVS+bc@#U8Sc'&OAQ*eQ'oCiM?%nL5f0p(jT'EAKh,.cpjD/VD^b?Wt/.e
%>03/rV)Cr>7Wo\clO:*HTb2#^$(CQ2TTi3[NuCP=Wgop!8Yr9nl_rl!ng<qNKR3jK1+HF$m@l;:1<b&[]jc;S=s\lkM.p7dA<mrB
%!YN=`e?Fm_$K3fRPWu.EEgH-BZYf>CF(uYBS6kfaceK07.&?6_L\%L!#ccFQO6iX)otbieUGQ0QK-&^dlMA^f&j_?-8>2o?-n7Yb
%6r4CcFd9:Tpq(C]cC'Fo'<-WVaI5/k:\^h!RRj(92b\n'et,(,O#ki^h@1-p:u7p17uu3nBmV+W&2fS:9bUB'MPu?(*YR0VB5$dY
%)b?MQ2_:b"cm*2gQp"lM6>.Nj*oF15U0;j=PWl*LT63(DPX;F#cr9dC>p$CC+p_$R.Fb^97AYft#jNS4Y&]g<J$4hYZ2HSS;jE2F
%4f_s,XF^O=msb9++#aV\Ri1;t*A"OA`mbHKT^>/NAWS"Ro!-,h`Khk3Z6R;1;&<(WJ7s[)SpVg"p>(NLSp],./m;T"2g4"*/4P18
%mq&aEEGcLP%9j=b$UJ#6<e1\Mr('-q4(-=+a:WW&8;Ju6Z1Od%-U\`/@>Lt"PMF6?3TN]13Hj!c@jZpA>!,sp6)bmqm4&<,VduIH
%f_,X\YleuQL(=Y7BZ5Y[+LX9\"q$"#jTU'&4F5!ON$k8X'[Mt9LtD<-*(5?TOSL$hUo&$i6:dH;FpoUe6Opl6Ll2;V?r5bgmQb#-
%ioAh#ggUhNMtDB&3BTKa(`GIuTE-lYUWg'[[sN[Z@^bC8+@#"PV1S!6Y#H`"kX/tr08O"m@@//T"SQsah1-Rkn6crTI`uX8-B&q9
%5j##iMZW04(,Q;Y)uHq6&*"u;Kq&g0,3WjWjmZ/V?qJGKI0N-US2c'L+^R)WasRF93J\9dM.5;.6BEBWI(%_Hg5/2%HOA!OS9a>=
%Z$9/-/inr:-9Fo!DCch>J;MemmgNX'Di4k&?uZE.!<@0iJ1ZmG4qW]c&gUEm21_uK'_EN"Zm5e2-KYkY+e&j+Ba8V"Q7'ZdkhZuC
%YdK(-Cl=9q(KA[#[4E'f9Nm=,@H\"m1^KP)mTj5fMs#s?%Z_V2KTWbQ6UJF0W5n#s$!7c2.]ock6\lAO.!'kXnO$(Zhuj[u*(S.c
%9Bk9*BLV3d9ICT;Zj_(o?X@7'Z*X05nfpq9*pgZJA5Iq<;)*k]j+]uaeCV?jJt_aR]K,3@$jqZ^(u<7KrIWj9jU0l^Y`o(')M%[U
%ngcoi(k?jnGiT2O^2([o-t^dAeO<Jl_YEVoM_GF&kn4?VNg&Wla,"5\5eJ_Z'ef9?K&CZW?",XG&>`%Id.'8*d,MA9'*=W_A7OMZ
%DU<GLrXMED#9>e`VEa:]Nn=qRB]S]?/RZ:!-7@.6^iZ)^J6^AA5d&FG*!J'/!"GY^8/."m=jF9SO7C&'l)L$o:(hgQ)i3KiMp%,#
%M1HSL60QGLlS<+t+\t5F$7^i+-3<or5B:?E'R5/B^uVk>=#au^]i^[g^7<_!`9W!^D)I0lJhT'86"DfB+f%b.B\sR/I7O,95':ne
%M58aBXb]K;*h,Vf(7(L+n\pM;6[dRLdlU69i$?t+X/BiEo.?>[][17#4X:U!-KIIJ=jUT<,C(ak@*TE.+)eb-YCuI5QLKsrZW_o5
%NWUub;\/PQ6O!-=6ip3cY(-R.3sAQLeU1pbE!%/RI=:38j,cP<_$7VH+C5`X[I*i\_%8Z'AN#;TV+OVBFdrMM%b?P(kSSCf,jF#`
%(`<Kcl4%4u+?V4*+sD]=TB*CrWB/C#UojrXVPWQC6*\#7&I,)V'd![hFBFQ?+u%+B0KeWp.\\g7O$V\W3=S/p"M>*F%UVa,"BH>T
%#XO"Bh[7?L@\M(YW*?WnaWX99KF?$-JX.OH1;'[aHoMEBJ56_-''"PJc@St.dP;FljtE-688Ld/J`+uh:onU/K7HI:%j"_C$c]Up
%2Z\i)CtX@aMbRsfF1%]hSi:c-EDd;iTt72'XofgNS^:@JTBM\1nSM'EIVF6"E.6$_n,]$X,=a^o+"Hep&Pr`YI-q?86b!3'D:XaS
%`"MTl)$8Nn+2l$S#*+A0htc'XH=BGI&9r*7N(/6(Oq^^6H0cDUiDN.>OaM($CVb#/nWce4;tJQ#!AfJiMV5i;5r#+o1=d\B,"+bW
%nV:Hr?7HH(4lP=(+X/>=efD#VaCYh3GK!P,lkdk@(a:]^4TU7JL0>+l)atY*$8$u`(@_K:5*h;#O6p$Q#J-RFg";h@+j8FJgU63Q
%%Kq'klIim.4b.>h.Ss5SJ1U&T7$/DlaCT-K$:/JEfg7J!C:e9j5Y)RZfd't3H0c@KP(`*E\;C>RQ50o(6B"2OF#XU!".qh6>Z7TG
%p-3)t$>OPUHoqIQ=GRoqcn;Ok*1)Yjo9?rt"/1@*Kd<=?bbcY9?sP'AM;uB:2^)-3U7b*?2I&./$-rkhYjKFMJe-#)7O#[d,#p_/
%A<^X/ie/IB@E%A$e7-lYHf/9)OuQjU#RRUZ<#6.\>_\G_?L00LCsBf6F;6K6?jsl.a8Dg)%AA,!^&"FkjrjG=q9$R84ZPsbNYa&c
%9*R'QKS_@::;@YlNk0\\@@,<g23*@N)TNTa"VtXtO1Lu^2MVhe90o&<&ne=LQK+u1#IM`!5?&5XD2E4rD'+#2>aNBX.$poqR)fDF
%Z\]28f+D8oA"h9>aD+X>Ej]W'>ForQO>S4dA'a!&[;.&=oJ))q(0dHTofHC7oAt>7/1?kC<bSc"3uduXn]*!m01nKI'T0u!TIa%N
%,-b/Z`0b+W#?*E0nmQK0k9$u(Xt5n<'(mK8/WeX+O2YPTALLc1<(-n,'TBgenN\HMJ.G49k">r;gIb4<JH_@4&=&?OTu@ZZcj+r`
%Z`r'i3uR+:73Ge<"<q9meet_dTg1<iMi86pdC^t3F4M9I@YH#U@\\XR_ar?K68E$bM1m*)(e,uLj+j=YJll%_fW(Sqnm8R,"aL)c
%8R<t!]k#J%KHLn[?sTEl'0D3_Lq*m*8=6?p*gLA+K$]W4h.8;AahfL*/i%[6mA:65$&1amV\p2+kt44'O9AE=[u,r(GXbQKrZb6O
%7?QeG/bgOg3!*Zj@M'(?%&E3f@+5WfEY.$7LqQsH(\gQmCP\W72;sCDDWp'-hWBpg9#H=5R/7c]Fs%haZIgqi;rUp7pG!56Fb++>
%@G%X!;ok,],_7J>\k).u@QBDO+mAZ0$,nHsU(C&W;H.7SYrS?c:*kqd4N#H?a.%uH#K@]U.l5\l"X$08TH2*(BIoHOiJ8lLh.D5F
%/Zpp<BI&u)nZq2R0KmuYOap.mN.r@RkW91T]qV<!>qIG:+Ai]eCIoe-j_>KaO0%XPTr6I1YR$FaTI:E`?80ld,.Sg"`^=&q%#%(#
%&uS\R'^,!Y0jQN)-W*Ab[OcAkNZ9Gu%nYK>Lg4`KXrl)$&?&2ikdDm-QYE/EQq1kq[<&9QHg@tb$\p9+C&o;pUi^+eC@)OOCnPkP
%b<i1F/!;DNa7[r9i!u7-#fO7#EZjS`>#lIi:eH:P,W(H2Tt9S55nk.>g#fga(sPoKP=:T#s4\`%&NC^"=[:4Sf9'@YB'!%l_c#q*
%J:XO5Q+"35LcG`*'W+j\NEH>,/S&r*d6Ghq%`]0:o!oi`e6?]Jarj^.[X>>=@S%>Fk*MlNF[K^O5Opu)(%ob=".4EP&u_/^L2>C,
%ICt6/O,mT.rFA2jP3XM%*#s`M-d_7]I380?#CR[YKGB**R.X<&M!t277F+cNRS\k]9ucl/><SM"BL-Po0T[Fncf>2dLO:V),n@o<
%"Ha/JX,t.*hpGCh;l$0!99lnn;9p3R4BKtmgRBN?*0NB,U$Do>Jm\jU`+I2%^0_KUZEA%iYmTg43@c0(/5d4]'j7iD+1nOAh_bQq
%ocj'?jJJVjhRiP<a)bL;1'j0hZ:?n@:b%+ImLL-_p1(N&!`R6="UdI`0:Y/`@f[%kJefJ2+j9+,N!#V"NsI!ejd(:ZTIq'::M[#n
%f]EdXb/\M`Ou0Pr6BK.jOW(j*$m,Lm>rAADfT0R$;,ZJ.DPY^>oWcBjj1.El:LjJOb*Mt1Vol7UN$/a_a](Rma93&I;0sd2jZDIY
%%FLh!bJJ!Pi^jd'o+f3Lg4C3/+>T5L8T.;F"`b$W(nM&to;H#Noj6kJr/W-?kU`bT3f4f2ng,3\Fe*3nM[b59RSbPE0pkTH6g%%f
%@^.i;lFWeNK4b]X1Kc@SR8gI[h?45_`P=E:,7)C\"\N-fB8][%fO"X"@Ac@."<*I"o-26*RYbjK","R_X"n1n38hYWZm/o3%b*i/
%s/56iG3mkHmHhOf^OoiX#K]'\<`afU#2D(H\>SJ'r,;Vu2b#JWB?f/2FoaeZ^tM[7-^/*3&sj1TetK'lMT0p<m_7K);ZRmWm51sc
%O&MP.q1V3,a)e^"]0`[`cL4rVHthss\mP?!Y!Soud@)dH?dsI\bH$ou-:ZYL4FQ8+:-:KuB5)7U@3Hokr4%Gor:ofr#kfF[+^CYB
%UV@nI=lHqYMHmZ@3l/%%f9&I@@^MESbCc]:0PZ)Om4!@-XL8hXf<D_7/:M\r147eLQb24`+jRVoS*ROpe@AAE*nKr$Coe6"416KR
%gcQkI9\BNYV6.htFe2ln]\u_OK(h5_6PTO+ReQ<S#7kGUh9A)OpNpiCftX76G;PRJMGa<+2"sq&KDASn_aY/\iJ9U*Utt8Nb[Js(
%E.?fP7Bg^&XFu#*(L3Lm2M]i^pJm*O)Xe+/ptVA7>dU\rKFn+P[96DR0+['@?MUG.>P.P'4Jc>=iR+fq$%Dc:,jM4D250*s&jIa-
%IQMjIq\%e4)<H5)k;Cpl4U8bkqC4OQPBUrRPVer)kDm.:747';*45Z3/sne.5DGr,k%@W%jS?rrZlRRTMCik0+PBsS?'`1`^>.(u
%QF?(#WaKsrDT]8q`APONqXVIVDYR`OC_`@25!N<hIm6O]nIo>g0)%`RmJlI_O=1)sXa%GNK*uKnY0Z6:6r0/kQD2N6lbDWDDlrmn
%CF#@hp(8^%^/a/m6<a4?[Rtoc&3J*j#>.aYZH]M(m..&F]d\:R[oE*t2!hIp-G`s_S:qOQfuClMht>oICcsD>H]%7chGTbenXrh9
%AG$B.K9![*_,D:f)\=n[o;Hf\*['jjY)Ze\KRSAZI,Xb=-VM9kK[`e,U=EuoO7aQkp*D"gIZ1Mb3]I!3QdX\V7-[6AD!Z3l#cn"N
%.Pg1lI4frV5SV:Je'FimpO&L7KQtZ;=2O.hM$=dsopHAQ<DZ:9+CMD5B>WiXnT3FgpFi<K/TbfC3]?g.B@=Bq\P_tr=$j\KF0uJ)
%Rn$ca;Yk2pnW!AuKp`ljbBc>&^D&k]hFuPs0;\7%qmZafQ-Dei\b%V3mq^L9epduFr<*N)T,[fU"TFT]kW+?)\u2&#k'/n_VbTB-
%C&K2P;MM#90Ut$6=Hoku7HYG=>d],nHTXj5Jg+'i-M/DQaNf;q'G`:ad`X98/23^%_7+M6U>R'=,iTDiM=ronmBQ.HQ/.d"TOTMK
%4<N"laHe#8lc3KB<Wn,*I6'+_L`k!@%=?r\jVo`p:E8e:R@_H!e]8&F'SF+qBqF)]"h/)(01KAP<,.R58LMF6q&MetmiWtGkB!%R
%fA0U6f86FIkWUYlJOBYfF?[G@iA;o=J5%H2%(YPV!A0B$)l)EG(I[]6i:LaL(:)_Tq^H\4k#8Y6+WhBeldKSDYP8INh/H\o9J1ln
%ne]5h6jP)A38:Ec$e\3=ok18bh2G"Vh9uIJ/L/$,W3N)`'g0E%a-gm"hL(0U>#@hs9Vj+Q.88[:k+']Tp,b>>bP=u9lh(VuUIjM+
%-fi5..P@UfBducejR"AB$krG`I_lZ\)kO6FTT9=*nL::XiVt4b(o$YB(,"ic5`l1FCZc6'BuY6SqtHV-%#i7aGlJufV;&4()P,^5
%Gr.1)8haU.,*Sn/cI7'!i6*\U84?:#hU4d0fMB,#'rB;\H@A;e<^WL1)PctM&UE6EkPUJMaN+,<k-PL($gQie>GTdO0X$i+K=KdJ
%/nqG%cAPH8O,Kp#o2$hWp\u[J$M^ii&"JO$f$kS_9pkPbn!,Gd^HWXrTq%)o'kUP=%")N!<jq(##.C`_0VD+TghE,Z[d;CK-9agY
%quHu\/\3#,A3+kQS:bO;<Df[GF;'AT=u!kKq^VAj]BK6:VT608\o.8'-eSWYV5s&)+^*-@?_nXl+-Unt9V2UoP!S:cT8"+f,0_L>
%,@uA]%k:!l^GL.mik>3U-,nR=qtOjM-:`KuGDl+JX+U/!f.cXThT#HU^[dm;OtJ.;X*%gjrI'rS@rJm-Z8D#jN[')`7X^bXr`u6_
%ERTo6a3L_g)WRTt>GS_Ds72J]E>-siD@H8H:G;/FOa_S"DEmn5_J\^gXT'#6qcp\Kd[V]aWP9hXe=TVk0oh?Mmp8%^(@slVW9#1Z
%FXsEEj"[[no[;;BMO2>gh9ooFk-HqX42&>?2+4]cGOM[>mkJ(l]aa\MFP-^9*+Dg.F#-tRIn8[Dd(s#kG!`rX32S\aQ\%ks8@QgB
%frI`]rEpe=kgMLpHV!e[Xe'DR=biosqe-D*)_luc>IWgWcfaNKrSThnX1>^UrkG#Ys,'bQ5Hg<b8$_".)G/Up\sH;@;q#hmk@Qrf
%It(!&C8Vd^/?3hBJdGr^OM[0EWUe?(/hqk+\o#"aoZkF'C7[i?/ns;T-!5AKW:Y*[i_Rt4"%^s=MjLe[IOET,5,:0K1+cfc3H_;2
%7e>#s/Y^4rk?CQ:pCN$.5-;]B7)22\4R4_3>K$@]I(GPu]qpfFKKWLq,Gt#GTf>&^m30[\HF]D^[!'^oqhP$gV'de^e:PHU5cNG"
%L"DP@.?$tNb-ITL.5QCn_oUIWR8QhC^/FO2];5=^rdL+F9J$*H03MTj\MO&*DmfpGl@:N`GLMkP8s1c.A9Dd((5f=Z?h+oelg#_M
%4obI1N?LJlZ7"YZRk=L0kres?[eJU='oO6<p(SKl8p0Msl)>bqB:UVF]_:OAR-\^+Y8\[?0jck-<qO-kKTJYD#;Muhdlg.)44W78
%I=1de1q*>\NdWNBqXQaLmX@B]Q$\$H?U7T11iSU*P#qLfG92o3?86S_V\D=a::c3ue!em9MS*GIe(iB/%Gla(bfsG"s7V`WTC,go
%cN!KUcC6QXola(Q&*.n*?kLu^IXVQh%[SB&02;7nFk",#83O[UJ%Vur@G`.;Sc]cMjO)a]Ut>V90s[Xu[E^uXc(11.G2M>f+jhsH
%mTklZ6b&T]3)WOq3]2FRf#6kg]L^jmgb)OFkWLd#?01)\S;0+5pZHVmQ]K`9I>[GA\><9AeQdN_D85`u"*`r%;i_OWVV[*>kFdtJ
%3'PX(;]9]W-tBr<hPpS<r%JF:P,aStlbW38_PKG"HUt:g\:n"nYI:U=?13/9_:?$\Z$QIP>AkbB;h4VB[?"8UPX_PUTr47'>KLg.
%j5UhEiD)$:69hka=4L5k:Vn]sH@@_q%I\W1Eu(qH?'!fO\Cu6JCs56+k`kN4S:qcY]7#R^'C4cWiqs@0r,ib\!Qkq"cN4rsqRWi$
%U3dYnl.,C+\NRV&[?"J#]6?D]O(#Nj51i"+AFbSWnmrT.d[12ikk/L"E$XQA@1pYqR`EVAftb&=O+"M2'O?plOBrsBR_)%5^%OGm
%]6Dk*pB[q!hM1;UpeNQ>RC9CaLLC]bkR?cc+oV?h-"/j%g)hno0"kIshYRmmX$S]b0]1IuDWuomZC%Pnqn!#)gBZu<"^XarJdM=3
%gi)<7$Uade_LdD'HeaYt5*t+Xr87N,WnCgqL@C+2I=,Ho5J44P\d8i1DW,[$h1DN2PI)cKQFM'P+(#l5%kiTH+^!;;/UT1a>DTtV
%*?-u!D6^^e^2Q_P?\g#C9*%.Ypfr-S&9h2.EqGqNA5DgWU=ms*0.`tYq#/p`kL-sG/Xd)M;u\OKEBc(E/cG1U:6L&WO1U+lV0<=I
%'Q!`V7egoKrd<TSI!Q1ms8V8ss0qt\b'P*mrl=gVYZRe)qB#sVr>@gI^EA)[5Q5/`(2mPErn%/SGJUP(?@(p"5=e*B>LU-q*jX[h
%/Rge\b(*k&*QHK%Js::`p><u@%JY1(i9`K<f!7pJP>DF&cTqk3Yc(cFreOs%ir6J13XkIH!-J.G!a<b:6sHr>DqTE':T&X_jR<i<
%,+E6HeIZa-34g;+`.=8JO$#3L3SXBZE'3;E@>VrE6tr`I"2V5j.<1ICMj=d]*Cpi.9_nTB59uUWYc/7SCa.=R""@\IgmaO^T/.E0
%V&t;:B$cb>'aB"k(1"K/YU`GE^-IfGk9n4+%VkpcPT7YV7cBi2A0/Ne\DRY+G+kV<`1KNUP$==!PH?:2`![?3oq]/<F9a]sV+dac
%$-mbh(@W/Q6qW;UC3TXKQI<)Qdb&UPk=Qu^oph@Bc&Qgon4RfqA`@E4E\ATO_OgK48T%qi8SYWn>h=)Y+b[qSnGVqte=;DMo3?4s
%'muUQ3?H@(@A0:-FN;223aYO1KQq,6RZL(EC$KMT=9E^iddBlPENY8<d7bB9_"MKtA7&8QHYSd:+d-oQ!/O@<D8;V.IM#\"=ZFd4
%nA)F+!(Eh>)Y%SCL15TWd/Qj%")0u]YQW)3qRDlAh8rl^R6LZrM%]/&$.jsdfMX:i1AB:T]%!9&HL1$'3!f%iDsYJohuYRF[s&*3
%gf:u[+le_c$(0Po-$Z",>BY/SC?OmXqZq+VfKWhZm%+rXLjW%)i1[27k@^>U8=o89!ItN=NXVc0&UD[kghED']-o^uDAh4CB!).Y
%!OUr&9l`rCIN`C("GcSa/de]LI7]>?"n\.mPa)eR=q(Uh:l?bLW[+Zecb=PU?^q:"<Esp6;rnon$'&crcF/hj_H$mKqf=4nU&AAI
%)&s1YaLM9eV`12(L%h,N^,X%jD3RV9C7V7f<)T66'cP'13DLi]"RKXN'hK<]Da"ULplGU\T[HE1jTV1B^$?_;"!e8i@Wf,KZn1BI
%FN[3],pG@0G_j2+Wr6%9I0j.m9Y^-N)_Q#MC9JXu_K3IMo'b0@EI6o"8Al^CGKlI'3_)qR_.`s>9c_2WT6N:',>,73OAF,*G8&aE
%Abco)>U(LCJ:@L>p`#'LDo;1Fc_#A8]/#;?Tebm696\hY!RO2+6/o&@d.BA3QPc?>VIhMkr6k5.W\^8Mff&\,K5qGf!k-dHldR4?
%00f-BOVNNe6oO8^.I)6#i.268SQ!AL3]T#_;5.5Kg`12k+:?.LDXo[9@6qjoni!KbCdV2A>2AB#-`sSY"pkR6ZqNM"gR1Ol96,=c
%\%j<k9N@,l?`MZ/>mlAhj]*s@o-CZ+Ekc(AQ2h3G14U'T%M2B,IpWb@M(NB:Hoi_N*66)0n(gKsTrtRe[4`Q.CZjTP7#pXp/Pm2i
%U!@q+OG!Z>-^?[-8p=I]6c_ANoQ'q3*"q%#P:X]W,K>Up=%K7K?Ct\/9Sn.F:\/qj/f"00>oRoi%^"%JLW*6pM5`?)p/![)\R_[;
%6r)OcP%kL.<(Me7Xd<jE]B74A'1@2ag2nr+T_M,,4K#q!D^\1(ZF*OL:E*Jo2gP[33A7uFi:*Y#h@=6V."26SMlZ9YdSE/-qCG$Q
%mEdnq,"ND`RBBpe7GTipc@En7J=mOrci-sCO"\=j:m[-CEp-S'bDXJVHoR2q6^KaPC/4<)0$#9SipDuPj,r7BkMgpTpQ?`*9QLT<
%;mTIsU8#"m/Zs.^,nVkP.k]0P`6*n0E1J+CD8nSpilng8a@eMm'hK3#kTZ2j?can1#C[&#nT3AuHiUeSTU##Kf#OK]KA7*co3-,d
%%],nkf)mIsW,Ct5ISS#uL<SpN/e0_CKMNVrlZ1.<>"SN3#ghM:b!Y[Hb:Oq]d,L`S4aX0S+7I[(n(]BL'dK7\]s2_=DdUs4WM&pX
%>3gjlAgS.;lK$Dte!=CaTQkL%>scutX&M\XLhE>>cd)@0hN&n']e6Bko,CUg(IeWu1SPBh+20_gL';?6qQSoB8\`d`7AU7XVfI#A
%(E*U:O.M*eO3Wq</Cu3/6I0^ULE.@]qASY9J[Lctr^>ptT.MY=*L""/rua@fSc7Z5H2[D!R.D%T:G^G-ISroj10P9]7hY-Z'R48&
%'26t`o(b*p))3qU_a)J.A9*Ll1S=8pUnbqF'.k<lVe-9I5`nn+lgGD1=@Qq1c@J`q"qF3[-B'3Zn:I:?>!q?ckN]JJgrdjQDaUa2
%9^73ZL89LaG&DsJP32God4!N`F.1N/r#NX!I[bkq>/CRPY&!_VM-4@j[UQ]B7fLRWN5"t]OXA^[]4X^WNMiR=[3ph%9c&JucC&1"
%\rupA+hW"mgNiW0aXY#%,ZP'%'Iq^t_U:_J9:rh3<@l(a]c8B%PHZSW]]BEl6r@DGRH6CQ-)irV($h97g5_SKQlIur@$B)V5/&F.
%C=WW[SXU/?M%jJGVqp%&?o:,Xo^-J52b3.1[1cFJ1#>G9;f!.]/h3mJ>T3LM+m"=m/j.#&kF[rcd_*9]f$<q:fDO^f?h$]J=#_>A
%UnLR6Ziq+F=1!.4^ZQ]1kJQ#%'@SG44:<rjMVl4Lp^oYND\T[gi4"Z:%2noa41]J)/2s-CkM`&m1Q)g27F'FK&pFUsQJMok^+_)l
%XqH:Rdih3a8J81Z'ih?Ca6o=@7E',R^O7I9mJP(h#@?&!At6>s4l[!,!#/$M[L?k,EptmK4JTf5e8j^!)V.*$%$'9IEC_+5.&e%T
%E7ba&Dqaaa>:/8C.*TA.=I)^:%+Q&O23U+96ms]ZPg^;U(lWh0`FD>"9C[MjTfN-l.WX^>Ga4Xh;0MG9,n[3g5?#A:m]PMb5geF>
%9\Q?\9=!CMr`5NuHrW`!7T?*&h"KPESD]TnSAQD2[)JmaG`B7S`(k`?iD<-u#`QY9/Sg(+6aU%'W683=1II#L6^#>mb7oEp+@ZgI
%4mMg"if+%aeDXI['#g(02j;9C_"/dbEl.>OE]nks9LCb$T^V1bI@2j1%n$,RL]g.?+GC[LQ+$(?;tC8_"AT5j@N!5bfO!]FADLe%
%q&.aDdE91X9;Z]R_B@>#[8&$]R@Q!fPtVQcAZ5HC9f&LH"1C=oMDUdFrmZ\QR&PJXiSmd@>aNG/aZ8@-*Y;n-:o$0!q(B'X@(\\$
%9]S=bj"<VI_AethXEq>pD#;Xl%&9laj>$=92shk2)*s!H>J?6\%%O+-L[<=;*fZ;&WUuOk9G`QH395A$dr?uUr3Q1(A^\i2a/E2B
%GOA=,h1JBgraR@"Ws:M>g;5OU`^KCAmO*4,mlX&eUPdom<d,6)_(17:\j0_L<PK::A4b2l.?eg#LV?%K7QbYLBY-Sl=j*lSF>;R<
%4JXs4VZfKh8gadh#=.?A)F#lG/%0F69]%2aTn?<I^3iZ'#p?QBOqlC4@TN,q<Ru`XRJCkX:0o<W*"F!t](h=HW(!T)74@^6r=CMX
%fTZ66:`iA<C[jQOo2lQ9()W3>e399DF;EafRo;,uUMG+\oo\e#Qa%L!U.XiA0K=-HmhA!0a(%94>+=puIbF(%CKr_/3#KWq;@#k8
%f:#*U8Q<TnU8q;:4CT"jLb=A@WhDso7hR#W^ghMl?*Ql092\\d]4Y/7/<Ym[&4q8ndoJ;3MGK4uo!a<YI'l*s@$$W+h$k!]PB(8-
%#_KN*@2$'8fteC\5kJT!';*,JlQ)\4"q?nEX@=Dc95tJ8U2*qRHGaG^Gg3Z&n,,"@btr5(8PeQm,B:*'-cJ`?fUMFCB!T=%#s]*-
%@dR`%:4hqOoG!Hta_=Rtc;*[d5/8HiXgZ/5.I*3c80&9f<Ecu4G&"f@P[N10-5+dNi7X_@IIC$m*Lrcbar'(XgK%.,&^uK@!_JQo
%c?q^E)4AcYIF-G"F)7$RVKkc@g'rk"[CRaV4I-Bpl+.YAmXG`]1n,:ug2+bqSB(fe<G<ZaQsrZcp6G>Mjn-\==_=esLT/<t)dAfi
%[j/jP?*\q5`%RhD%FJ:T'SG2rZ-fWCoXcJ\f2,KPZ?g]H`_,6nYMQAfRQ2WbT'\/&pMOfgq^>LsHGtNu^I6_16n:TOBQ&('8n1Kj
%7P[Tg(_qBe-TD%dctFnK,4%]-6)\&)4e84q2abOlLa5Oo_[G#3/0OfFID4mP^HhMPOm<O^4$R!_`b:W35jMEC%p+#H#:SR6aM)=[
%S@,7kgF$aVJj2?/T-QGs&C@hLrNib0I*;\EiMN[>*;S6(Xml?LY!N9OR#YHqko'W0FU9BPVU_jSK@KP(`-J,d`:YgZB;)N0/'1k6
%:E.=s\;N$1!M^-fIPa9ta;I<Bg5(8KEonb<>s>gFlZ='VY_)WbdgV??--@3<&FaVb[iU0(4U8nAo3AP#(^R=RAkuI/"P-$Dfr^tb
%6s^Fh)*dH-&T)+N!;c7.1%n9h`Yq.4fmrml82C.jFJhZ7'8KNpr-bD4J:f#YPdCJCCIsB//p`1=[4A'Q&s5H-'_b"&DkY;#$Q2.l
%GptRN3l4c10-A=h8YeCMdFPnegrrC/U<D(d*AVSAfLTe=1@#&Y_'r$f5^>mCplq<6M2+*hSq5J1lS5#i5QnmHj2Q1Om#d*S-eN^,
%AE=K)@pG38ojj=.-'(&Ja9$:?3mAnb*TrESP=&3,bYf_LG-d_pP[+8KmBCO(8.O.F]HR@]l`1.F"[;#f@2&E.&rFB6fjgQ1HU6)#
%F^mRi`B[pBK>BZ\nBk>E+(snSN9KB^V^>Pd8.NW:A9Z$I1Pq7"(sY(9*O5$cV2L<sMW#g,FXMOT)p(]C7LDBUl7O2HImqm4S%,n?
%D8pi/:*@M'=@O)HjoEi=dfkQ<h"EuVM/n)eG6sW^QpA/m#Gh]g,`MfIR?.r!#q<_^qAe,Pa<b4(ICgISBlM26s5F;OEp/1s_lI"(
%eNkJe"XJ/V+;qX/k6BeS&U1=No&3qP?8RhXgMbH,+ZX;G#PeYP"L$0<M?=,(EI<B_qN9H)<ogG>r)b0i!D.;b8Dt##>,].aYK;o9
%h$VFn`,DYJ7D+2Q-G,D_N9Ddt6_V*-//<Tr/oQFF-="PnK`*-ChJqX3Y![+E<5=AMaEk6%C+ZiJs%.)<f$VR)<-uuPC)U.0:ir5f
%##=LLDNT\q_Ab>[beu3#GjS<m,r+8,PrA5?7HQX6=J2Erb=Im;<WZG][>^"<W_Z4(ZR@5VeB\:l/%e(//!BBR9;g:i2.,*2b2ZAq
%Oobfb"PC!_iY,[nqHiolV0NHP8aD*M#R2?5'[S2/.jTE;E$%64QY?,/A;=.pP3F8qX<@WsMT7D`U&d8#]gd<Jg;M90LoJ*MG1[,W
%0ba>/'&V1_@]QriJP1T$6VH@D9atb1e^:WOo8'>-]ZZJZKt.>UE6"EO\dM.i`uoB.E$d.$!!Lpf7f>.pSC1euWu5s"QSJ.,,3Q`c
%0R><+jnU+T`,ZKj.cuUt)ER\I,UI&aAbp&m1GtnB7pN?'B?)cXl*NtC?>)r5P]X^rMF]'2+glBh2G)J>9T/`S]e><7Ip%(c=YuqV
%`M6$26dhH53![WFprjXKU/9LFL[k]/`aJu\o<EY`$;G@>H'VP2@:0*u@H90]QW3ekR-\*S[!Di\8FcC5<U0etZ9?Dhgl47mde8fF
%1!.mPW\*Tj*ll8eN6(5)@eHi-gYc!uEmAg6A2LDOZ)["2BWsh,FSUG!^kURH)sK2\!q%2VE($7[.=1MM6Dq!HF9G'*M+5n12?`28
%LJck(4E8`,Y7fu*7RLG^''^_>NoUG?]1Hc/-DR=c1(GRaHn!R$UiJeX.ZU!#&clB59#%t"3t"0lgCF>pRW#_]'qQX&LM-er$oR2R
%22D(MOZb_`g=GBpqI>KJ%(BQbRhNG"Le`(M3`FV@Q:-oL8ORQWH<moD(^@@CTf#VR9G-Ll$"(-LA#<nT?<Y9P$TdScJ]75sZ'E6V
%cjA-o`(Vol`JI6@n3FBJPac0@,[Q2r"GNWn&VDVp@V9tSVbq,r)FUl&5VF]fb(6Im4,_rJ_PRdh"JV;c+;9=W3Kn.]b[t_5&W1T=
%J.Cc%f'A7RmR^rudWf!h$PjPT,cfOAAsTqU_1$b&-6b*%;SFUZ7bIBa0dhhV[P!KD,$O!:4\>iiF+gnm$YEgnf\;Ot)7($W6[Gb"
%6S4Vd&1u;md3P.b&2Jr7qnlgbK!?TJMT=;D$'5Lf5jiUC`tAbL[]!h]&^,9S7OX[96tI;)S)-ZG9Yb+nk2BJHHF'-qd_grY/])Ai
%1`BVVl`Ll:8HG;q,o-W?imP.j'8+U4O,ZJEqKuuK8^nf4F'1AcD.XU7duc8Op9%To`RQ&F4`n(ZXuAqjK:n/T\Xo#U+[_*cRu^/,
%JR%j:!\>328GfsIE(=F^KsaOO++gF/;TZ%i`+Q4UbHqMaH+3$l'4E;F0=A"_Yk(0(62)[l.rT8o\`/TOH$`ARe8V0'6_CFhm_<=I
%PIXof:@HN\#R)?67HP+!Q:Y*83;jP;ea<.IF6FLZ,Ob1qpm(2^Z@9J-94La9V7cc7!:4qiWp[R]ou]FO81+2pp<kP;\(]d>3mI2(
%S1aeT\^?@tg!j$sg1n"9=,hj;0"\7YSmBN0:-RR9=m1C3oVO+<?!A18P&[iG?5qjk,7R8c$VF\UZ%gf_/B\H$*_:CmT2qU>Sm)Q-
%+GiRToaUA%M3mkm5a"49f9i+hmY#7o!Eb#7NuKs9UMNfgk<>^&bX\0'5O@qZ;ck0cq4!Sn5FGmF>r%hD5YG'D@=Cc3A":Oa1)p4P
%PgXnNE[j4!]CV)>9M6[/0L$^<Q`YAJ*)W$!+DJ/=2b\5HjG,sJFi48eHM1N/!A-$>eD*2%Pp>_+V,`'W8V)/;RTr`,0cN!,1J"Gi
%8J/Q[*)K7De@+2aMp1;t]=5ihN_?n%7[7bP*%1tp]bo04K]q#_8`:u3H^r)uG%U\4X-a6g$/Qb$'4mn+;$//E>h+YZTPZV1DEL](
%+IqP$c&iGSlqUecr$ID*+3,FA^JmH`LYK8WpV-@kP/4XR]*\Y2R,k/dH(Gk/O?REa?k!<@IrAn-=JK^5^MlMKI\!aT((+MKjC*PI
%^AVd8_<)Z6Cs,nu9!sS*q&Kg\U$M-A2fmcS_:I&K2<+`^5W68n;.<!giilp!?(@;]Lg8RLOZ9M,\WCH_DPKF8=go!pGhjMH_JZo$
%<+]1L%j^tbqdb@(.]nGSFHk9uE77g^FJk*=%MkO+A1<I:*-XP'joC2eqLPTQ^,%6N^I#+eZpKo>f,]3\4po`UTta,tPboWuCf4!K
%[1R<oHP*N#m>0W+)9U,.]-]^N+<jeBA;00Q-*,><5C9DjPc*b)$Y^_Tof>jm8k$C;M4I-rl_@aYJ@qt*!L1C"`M_BVlPUgr'\MlJ
%iX"eQ6eo\i,si)WLU[f^Fn1IQ)G=p9B#bH,!gU6Kb1gOpHLMfoar3kAHO9soLB]_KMTQBAPlgPu"i`s\i"2^t/09%PCXUj3&b^I=
%,,6oGeA(:]2Oc$#f7<p\/lT2*[!Y.rU`7_KJ;aMnbp.lJ4?K8le"ufBBiIdZDll+(&$!T?4:):0KG7[g1sDLW$.1$uY0NL>>A,r*
%7+EKd]k3:#1:*sDe<uT^IM<?8`QNT;pQ@3`2Vh4YgGPFrXWfQE--pb(@1+.)-\0][4!#jbIRAEn9ei"Ldg\n8WaVbF,Yts4>&ae4
%:N3G]?,#'JEG-Tf'2*[3"JU_:Oa8#0Ee;OVdBk3?-q:Ng>19('FtYQnnlDD7L&D?tcP$6f;AHt['WGs9jjN6?aHA_1/Z'M'!rLX]
%;E6SNml5c]"!\L3SeOSI5R@>#OuZ7\dN`T"dIYA88NDMg4Zkp$j+]Wd`R:FX3LhWPYK\UghpUZYJJ>MlaZZ0V@]*!B#-!SlA$8th
%(pcYZ:)l#]^]*Wg,Tf^8E_E:^Kk/+Aad&)&PVL)U1iGqGTf'H4IE`-iQ&I@"U68_gcN8e]jX`orr4+\U];X:E,$9?PBj+(.\nln0
%=X2k,>Gu\f!Z++6DKBb+7JTr$\3EB2D#&oroC3qpiU+%`9=/('a6jHG=f4.1AoqP<D!C&X>OogYME?#FG)bEpl><2Drp=MR8AMga
%j2<%GBm$HV$:b"pQ8t,*!5VLFX7ZS?:D_L-2D_ue9%H?@(8+Y=_%sPQ\tcsULuk_6U`"`*Eu*F<e,oGd)R7tqZY*p5<LB1?)6c^N
%nQCt@j)?,bnqSb@<"Ui/e"chc+5nlN[k#+_,=QS2f*\[i,I]XR<'CB2WQTsEDL_pX2!p>tLT?eXoMh_.YtH$="H[G3R6"NE07l_-
%qdV,$&>C[%4XJ.CSG^_<<u)c3,^=T.)qN^TE*XZSFC;,)k,-O-QZQ?4_b?rT:FcL@JijPk,Y]QkQASD7VrZ7O>I]8qW!`DBhU/dB
%nNP049_^>p0cD$;^s,Zgm*r_%Qk3TK,Xn^Ab;W.?6ZU%<4M6JR0o,m>;e7FmTNP&>P>"4InWS*q%g5!>,'+V4@ZQ5>\mX\AW1'o_
%i]sk:lZA``N^ME-h\X-J8AU!i'S.m"+d3_.Z]CmQW7-?$Z?W!`1+,&8Q4Pm5[k4m5P47VV.as-u&'<i>]F%fcQK/aCohdIh`(U/#
%DUjGL:\3L6P!<n43(Tr>O-kq9UL3G'Pq.rF-*0u*s)BOkM^F98EKi+dHV991e!e+-bCP61#"^[aElO+/2Doj(g@j;A;?VDg0:B(,
%fheY+^+QFpi?2<hQ!*(0Rl[Fs?]U[l>ft\Q/QZ08p)YL*AlUSAC1/PSkgTmOjmZm*+3?Ki?')]bb%OZi8[](fj=oF+@%\Qb]A.[f
%%KX9TeLWbb\&$(-&J]Bo:T_DGIsp;sbK4Z^VBO/ak^"23[6\>`S)hX$&\AjcbpLs5T\QFkCq>2bb4_=2Ce*HAp!70o)%VlFJu#R:
%F;@mf;)rCD^Ff2n:QK`N^37der/H!"gnDtT3ujtZ6-"Da]_indlIr^kR4Lg`15CK&\E!J3,[\":,uqf:U*K+8r!nV[P<"ZFQXq1,
%8$5.!N><G#JK\SZN)5--A]OYO84hFX`&O(pg]5-!2.fC?&t@p@l'B6r1nF+OH32Cl2[2[LY`,8*;b;^7*-:gE$_bsf-8>3o"Rkg7
%aB=[@-p/RAqa+QqnVlP!$G)ns.cGKZoBr2faWDVm-7n%@2FT7CGlagT^)dp5N/<$:+ksT-Y?+qcrqH6KnMr/qj0%N.*Y4+Re9P;S
%lY(9$Flrc;&L^s([>3;O:'Q#tG15R0-8o)(7K@`sXFI,3oE<QJVl^mX8^slZRJ"U`G[EL]iqal)#_RMeea$12KN/d;=b+q]*8iZt
%U;4[?X(J.B$;@[JUR`eQ!0j@PVDU<s;I1:Z*9oFiee&iU%VY:rY?!\M*Wc=%,["\NPWD\?]7^$.+dA9C]$bmWh(.d'G*ftlRXSTE
%Ao\r/GTl("O!;hgXQE&P7<:T\ZK*'P5rt!&g9NF<W]9ju1dO]A;1r1[8@34kK:k?akB*>eUce=Y9k^k!A]4]2O?Chl=^oaCg'+($
%HhHB6IIe]-eDga110j$n!Yk3.<nb!j%lUOt\KDAN2.Gii)mm[f`m@VWM+E7=#1n_qIQHPe>a@@gP_p>-NQR<C't9sJ@V^?5m@FNp
%,fdP^aBuF072JV2#q3(f]Lp;LUUW^*`hQe.dk!=QdaBcl3<Ds/i-6)odP$i6GBO1LS:GV?9sVVMko6hL(CIqtq+t[[`H72C;[$0j
%"ENN09[`O@0:Ho@cuFSRYpU($LmHQ9,tV)kPuV)),dqSfd:=fJ.Z5WnCO08=;PW,^.lK#)5iFt);jNc5_TZ&+%WX67*/Y1s$/upY
%%*p8!T8ioo*`@98W?kekHjbQZZ2hNX8=FEsMR'U7h.L!tfG=IH926d'a<\Y?;o&NV&`><qdI^r;Ds\a*\cF+9*&*?Z'l/N*5=s>P
%g0/'_$h4#XPIKqY8Wb[,HQk"LP1:u86)gY@j$CLL][Z;fV7:U9X&AaZ=E@f#1QUrE>#nOcFI!_&C?D;3^HNTk*<>H:.?d'#,I0Pn
%!ajcd'bV(5Ni\sA3C]ZP1[SfMgsPD!$_CZ>odnBeQa27WUI9Wd2VK`Sc&^A:Jr5k-:(HYDR<NjDR[45JF:-PKQhfRbB`$Ru1LJU$
%q$7/f=.D93VEPl3Hsr$NU#aj^"J!?aZ;(`K!1(3`Jb;IaM2*F.Qk1cG-11HrlS]t<TJK;54tL,&dSA6X]+fXQ1Rur&XqD?j),!^:
%caG'LX&]Ya2:r,=oj<@U8;AfR/jCUa+:oO05Wmm.q!6]-Suu=3On`Q:&@<E),p$uqn6;guU8`AnAaT@f,+Z^fMRQCn(qdq6>@qL$
%FTZZ58C!hC>a8kj:*_EKm+Y#IXkf_l>ArKggtgU?J<.VGF8O/?h]bZnE@Cd.NKlsCg+?=L8%Zd%Y_?uBb;=%o#dTZ+0i8_6f(IHC
%d3K9ORdCm-C-7Pi;n(h!$F]Hhg"k68s7_*$%Po[B38cR;OWKp-2:rE]6IM4i<'b=Gb$/jpUmPY'+`GIEQ]b2+q0HeYn8M\ch3*"k
%r%<YQ@WCX;/Q)#:5$qs=++MGse:-WHpMT,1G]DJHkDKY*(ahV'^EH9*m"N$&l?5"J`&5n8=lf/,3F$FOZAWl?;,NFpeV^DN/88pr
%E<(XPR3P5I`lM!lBWA.ro+?\%=31qX6prP*RL0"<Mj[D7>X'4EP=cbM:hbt.pf/&4ejP!-ih(^pZ<$,]g#g&m176115Fb'H^p3gF
%Cs;#uPZ$&6C94&)'Ta_CT_`ag9>[@PE0T]ES9b:<&bYgO=@g"1A5>doPC3`)NpDIU\8I,`:=VHM_Dn)VQ&Ee]E6q)Z?V7SFW.rmZ
%fHO[W06ZQTB.Z[Upc-&BVXOG&Xl#L0&jr[GhDq\:>1h='Lq"h<8-08K,n1i+R39P4]RL'L@5uCocYb>6f\T_2*R.j1k"lU9jrkE)
%eN>8YIf$*%>t:R.]*KC7qB/rWo,>$D9:C!g2Wfcp%kW>MPXq-G$LMth?VFifmt(K,:E[d*dWLCET*MT]E?_X/p3Ai$@>^;>8:hI5
%!Cb&!pElt<hIXr"^*.YW+>HDb59fK^m6k1s,uf0?-:'q0`[%j^\L3/1_42TQ#tlFE:9u;N39#.L1<o7F+i?iE=2W91U?1k(qdTEu
%\b*YAI9!XW.T1G%\OtY>VU_1MUm(rra$/Lfb-@38;&FaO&J<iMW_2O",c-*'(\A&40=1l4//+1=;>2L)7)23u(rXaY`X.76>QC:<
%eE[0$dB]Cd]<DbeWlSIB@c@%*QGh#+4aS:2(K3:B'_@;5"=FjC:2.qN&r=dQ"D:ZpR`KK>brJb$_1OXG+[`S_U)r:&FNIT'XA^`)
%Vc_]AeYF%'>)d*oF-[\TeGqeWZB`M1R6G5-apub1h(Pe?QH&o76d14:gfo0!Y/J)Kr4;U^I=ts$i-@32q2G]VOSq!b`?<:`YLTW*
%_pK:6+O`j&=i7o,.T7u].\Ht*L^>>^\sP6F:iRa19!,seF/Yq0TFG-JA!c=.i@j/?"K/G!d=Sa#;[H]9XAiE@C$d5!9O4A(V%/t9
%gagOj_HZh"`.+;n,`fk5N>]q?HF(8FD2.a2.+U*@CB7puVCkI]SaBSm+<1njW2(Z&0W!P0UT?qKJqF@p!9s"$puQHP6-IpP?Bpe7
%lYC2XPmFJV0ar5"Hun>KmN3q<j.*DICrVMNolC2%IimPadmn*34,9KURZTVmg3@.*WscF8YfIpmB\S=&m0fVC\T-')k8RQEH;uig
%%$DgTiMfro!81K`#/cU]N?=?jF[jVfh^r>%";'RJc%9b07BFmPcAs+AaZ?>b!bM7P*:^/&A,B`p:5,?j6[O@ae(dA4lGL@P*=hcL
%STFLti?@/*LWbL4PUqE?AhR!6q\H9/&Aocea[r?Tqr@mgg9omr5FZnsbu!A,G;'W.[\&=[jI;f=3G"F4]-SHC@ti@Pbd>8@b_uU[
%NaCWk>Tk30pVl3YT#u9FN>N)_A\`874UE/b),UaT?dk`CVc"VCB6LX:p@NWrJY`(amk5iGMX$F4it2]s>tZiQOJNl9JnIQ0;nc9+
%%#Upc?8Lf%-70('nGX7-.lh(r7et"CNmja$h?*=U&mg>1B<4Df3Vg3bYkm(@E_T[KM>`@.\"*2-nhq;MBdM)[NWKgJEXc?%b1Ta.
%DoEE)APq@[hOP!sl6tIm=N$2-/70?ehH&SIY1#YHB->>\)<hqnH%,V_S^k6rFQJ[F#Qe=F^DIrOAfm+_%fQ=0\NVVX70UkSXc:%=
%.4`<nFPfT_l@h:f51fI,Mc.Umpm9m$V0QD[6DqBdmCl2GG?\9ug/j;)1&MO=928lqlc1A_rF.CQ6Muj1Zh4\L#^bI\Z*Y'.%>>h5
%1_mQe7pcdd7PU1A[kGurZ+`,EP?L+)5dL->NZjc5r/m[K=r1%,T7H@3YaF*(58>-6^l`<=FjZMLc`%q.I77+,cKfG2]oMe.-W?FO
%ofKb0K&h(WJ=37KU%]WTGV`@f9:!@!8LW5cgPc^;<Tb(qX,'4SJZX[*gd9NP1_E+)%VrLTdbp/K#aS0[GEK7,e>Y9R6nQKOTgh,p
%rb7l4i0/4]riUZ6=NM<VA>ij/AN_W&n(>ck]*_9[_qT<:\3ck[5qa`*fR`<k?cKB+o1'Jqh_qn3'N>(F%<#f=Bk^iWXH<(dB]isj
%.\I6*s0dXcB-1\IXCcm^)T?\LlWWLg@)BAVN^t:EpVD;5Q]:n-)fpitkm2OpA[R?(DHuE:=:lCaWs(Usl0K>"8:EP/Bq#^%Kk%%H
%Loh9pE^+_F:VgL=&b%e)F$_SfrO0>6WH0dRJe9"nNZ>e7`KU5Il2$9OL!QLt_md>jhupV8W3Ja04ao0?04qP_]AX]uI!"Bs4OO4i
%+hdFJVr2<9cM3h^4gMld-#s<&G\C'o=anYJaCQ/*+*0Y;E#sq^BQiAGA,d=mY+9sm(#IGmn\l!4Hq7!9lH6E#Fh`+pUs<DJA/4U4
%f*<6Z4rN]'P=aWLG?hH.a6\JWE,';m1d[\XQbV7BBsg,%g<)j9FZ/%!/S89Xb`CLIY$r9LVMCes=o@4s]DU&KVsg.uQd]-[H$n/c
%\*`h\4L\DI5&dFnQ11BkSXJ0Pk]n9:5L(Qh)!B<:n'<9kdH1AJW;]t(gMG3pYC'n4`Z-R7>d%):5d]p+:<tq:dg"l??Ns@jb0-Fh
%(2$/)YnINa4[!Fk#tNH.9]^j7Ej!HI1TpTP.dmK<@Nom\hf1J*"iK?KXV-s2A/7q-:n^rO#(+LMR3gLFABYZL)gauh<pE6YVMhB[
%aaesj+DRZ>P&:Y%SVX\Q),*<Eoa6oKl=aSV&='\>d#;7sIC1)9bLtD'Lh`J8j+WMB1=e,@o!D;UJ)BN?a4@BeWV+l[PuE#LD[#GS
%mt#K`Q:$U.j7TW-igSc$!d(Fd)QQ*K?9d!&l`l.#o^I:C'ifgUj)G>Kb56YALS]c'b2ZGi'XkqDHJ\u)`E\uAd5RSV"aFm!&+/G]
%KtV@(W772dDAsI*U$Nm?c4b\@70R)9dH<lD.Yb.o,X3Kc:eH[I?F>t@h)jeT(5(fVJr%crkZk/Mf04:#KZ>pX1R+d=5]*Ck:pJj^
%qo)eM''m:eQRbVV0"%+h'Zsnr60^>%)6g8?_@)I/cnK?C*GHc3Dl$d7^,+Znr:SOll`8`uoJf<hkh!JU(r*YiE4W^)IVPqL8B%0C
%lh-)!bir1-58ii)Z[(iJhf,_5./[/,%)rB-VSAF?k?r(-kFcpka($ge+mI9B"cO8?)R[U+fb>6W<X9"PZNjS3_Y%)seT[i9<l7t#
%VHO(7T&?]H+&V*U%^8@Oi@'."i-rF*i?fHTe%%jkKr?Ztq/*?C9]gqWrYq&XK<taa^/OssYGEIU8o\RrLkp/*Uh,^aL1mA(N%DBt
%Z-a@X>sYNc.RH8-l3LL%TfNLSo3_s1dorn"NV"W]-J5jXkXi=8NWUn+I5"_t8]bc\nL6qXfTd`JD`2Zr;90RCa`.9"3XIU7[cBBE
%PD%#gh)dT6rYguqaOBP85nk72p&e1;1t:iH^BeO3fthh_q8"+i)EFEh*Au7WDU2$S"h#+-8945C._T.@*_t\$(%I'sLp%Z,q"?97
%3N!sRs65a+IPIC4$[q'nKEO\*>MCgSCgtQ39iNG=/YWu6hX';T\iK/=\XgQ*U_tZF&l)qc3F/-u*6Uln/*4`+91Sh^\,3Tnq`Waf
%?@A)Z(%eJ>UTmk2W4&!%F:aBk(q&F+INR\gZZo7;2dD`/W7UH"Z2r"_?Va*KA/7>&H-3_`?;YSAA-7ua!kZg,_!GP@gCZPk#D=%b
%I9H,kP.6++<7dN]/YgfYLT7sGQ%A*9;dLV!A^&4>ZCpFu:1+7q]-\bd_AG6eMsEGbF\T6ommI"^#3WN=^Te9P26d67Yn"HhFr9@J
%?9;,-0>g:Jk?b8Pn8g8I*?;YW`"c^k(X<N.goG3\C@4Oc#jC&ZFiSp5jh*rJmfWJsrYC/mh`;O:o*-DCr&;nn6U)doN+@b*H&&>\
%fJW8VA/DL&6m4&5Kq)3B8<9E'&j'\HJ`S(ZK[oPdZ`]u;]V(-ZlV]6qot#QJ]$o)T7(i1^)%8SVr]\>OS3kS(r>V?$qnh.@L;+N#
%@bhTOqtAi"M>NTfTIK<`I"O'>.t7XWm^r%@DRf/b%>))Ch@5^Z0B`Y4ikEJmm,GVC2_O-=LgS@K))'mX9XY;;!B,EZ[&UTT34D)]
%Yr]ANpji"llK(M7g`#BG#MmPW"(61#GoMN[CP!M+F)-^F8C+D@DWK-GIVs8Sq\[)8_HP\Q:jKN=Ti*6e[$toWO=aL_gpRMLYY2TQ
%gFt+8&Z>I`F^,*u<f$,dQ0[Z*@7ft#H'sf'2^#*..Cb?MGa$la&*&B?+D%0sgW8?+V/Fc)QB4:4/jJ45pVld4e%5@p7=9@f5TDAB
%N4h@]^^%,;Dmr(E?1)l3o[)VT'B-n1ogIK"gXDjo7_X9R.aG8J[Ts2+0?NG7rWY&Pe7?>L&j6rBGb)Ma4]K,L`M(=3(#K5j`Vc9J
%r=*+:3C41c+I[d3S0FZ_8BrD[dsqQ?mCAJP0jd5?BPoG%Z*C(N9XG&9<&O=5H@]aAjU86]5]W%=\a$]/Su@gH6[Sr%=0VU0\5BgT
%Q$WU;qEDVHVJl/#%JSNB4l$t@^EJi.on$X[Y1O,b]fif";"s)']s-C\o68*i0A#Fj@D*\_(C^1]_-Tt*b>nF-FC-ZV$i%Ek^)&^*
%D0Z(?HX1jL^Mhj)ce"[!ORqYd0HsN=3e(Li'Q]j7\GRu)(#ZGqbp#_0eQ_Ub!<5o2IQU*i2'2n3WEU!RN#uBC+U@Db'StHdhtMT[
%QMb`CJ3.p=p)&p]H5kn:.m'ETTPMVfiCA&V=WZcPooJ<j9-pU(Jd"lK<EJS:\RR&.4H)5e7s4T<[)42Y%O(L6mUW89moL&g?>sm=
%E9P\GDGf(F[u_"aKTI08Acm<np:(cX5T5X'W#7NBh=pI<j%B/sC-Z=c\cfr+FrX+2YX1=UZ*Nk9]?nJ-l<cZT?9/Htb!1XGf<,Fu
%XZ?pT2tWX$pgL+M2Yc'-<oRc2"kCOsOnI4GWhO1iVg<=-Ui5h4!gX*'Dp9E<=<k+3B(a+pp40UQIPH?0bmbeeO:3X8.rs?ON[h;+
%7T1X![[jCC+Hmd:&QVHq^B;]R.X=lVCO-43hj.G)fL\W28BsW7<p0-C0`Zh?@-Q-h:">\o5rN7bQk]^F:lj[p6J3i()(KPX$t>6b
%GCITQ+au.uhb4N1J&"LF<RW.t;fJt[1!rSk6^!3p>lfO*8#!uUU:R`E(9TQC\;:_\Q5.I_Wh#?'pmIM;EEp9E3U41%+_n!;B\K,B
%PU6Na7+D0+Gor=D]m34M)8un!`M9Ca3sjtjHs]QS:%LH_:Xs!BVQZ^3A`m*i;Bk3?Y6daXDRC:b5?j=oi@WVthJ`1J;V[&-$i,Qi
%bJ:o!rn/pqY/1j%N)(<@'Wa&.aWQce21[RV@M-!,oZ9OB=F`dR=N"+W/s[X!;[87sn&,$3p:cq2^`Jr,I6,dg!"maHYcq.S;G\du
%UM78Bcj:ipFCF^!=XlQa9&^-mH:W#$+YGJ/M5L3?jRT[KR0)D\#`CY^['Psie<sc;qCXqrGKd;JKE3Q"^S@sjO-Nm-W-p*erAMGE
%k3oor!Rs-Ume_se-nYW;#8;c]gI$jOCR0cMMYs%pC8&R`$cj,1pOqS'^g-G?a6"X.+I#_j3j$>I\$9DkFk[%-LQPKJZ?m)cDoMG`
%;$I8:W,[3D>,1LVo?UZJM+k'q6po;ZI/uY3DFVF;hTg6A&fC![YG[;;PN-rr1^ES\7@B@5//nklPf+!lc%]5-0F\C!@FAX(FQH\C
%C9#@dRUgHb[O5D%].2]=cZ2%?HE?>!4R_)=0g3RipS#\X0%C`0a$`V3CVbK?iYOEGh4t&G1Kp"p.D^Z[93%t45`CnhPI;!fC(<8U
%@u6Wfs)K+ATJ0rE/QJ[=!b!E1LJf_7-qC)D3jp<?mtjhL#$<p/S^\lJFSUU/QA22jQWPanIb9k,:?.jpj[)B]%sPD+DB.m+#eubB
%;^qZ7N(E!V,lkgu)K/<B9As]\TVnLg`#]i!]LqVal:ZpR'JS*OMBkr[m-Zfe,\H$iV#GZKXpuaV?VOghk8PM[kh+G8ebP89r*g#f
%\TkipMd$m\?E27,p(TE][8XCo$Q^lQlS.j)k=SeFct)--d2W#R&$$%1/a*oHe5QHHN-<]07VM?l)#PSlT\ZfG+B2`_67tW-fE9ZB
%KQa7qZ?nW%^4&%1;?t[4fEIOlf$.uUPiWd1*T@kkptZ((IB!tR'7XCp,<IbLCuaQrI78ri[FXM@ih@^=FX9![W#?b,b]f4CP,.n5
%gWd"7U"K5P&=8j<:Tf%2Da!7S3YD7'aqnaEf8ejY.GjC&8Pr7qU:cQ\$Y83TZ.QR,F,c9'K>_;5gSPk:.;hUh?Nt5#o-k;TB8\27
%81Tok9S+&0_$?l8(?(;4^"N(>"\<KQmVqk(>A?N\["qr)eWu-*!]E%L#@f?bEP:95De3!ARDS%%8%Qft1.>tB)=86Hq+WjBAShb/
%dWb9[[`S`+EA$rCh8E+F"af#OT("q1dD&CAOb?f*>W*DCTJmo=Qas6iPsK?;9_?mqQ#H8RmPUZ.\!cDW,a#]^R=die5lPiZN;>+?
%US!M=MqOW`\,22n]T%DLMUIVG'nMnYRZXJ]D+B2XLkndsE]C"Na9iIAjd6U08dV/WpHlV0KBM>!d$LEF;>f"Z!eHpQ]js2=b_$WO
%"Zmc!.\8;[KcLkrWM-]qmDTXfLdIE"N;&8+>U=mCG2=9!J_&6V)"CNSXOZ]o'751Vnblaf(K]DP_<lN[RsPatI82o#!9S>#nSA[S
%&!cYSh@R@[*Ua4T_q<5IO7s"bP$AUVo1H1oTuT2#\+HXNpZI.&#[Ets\a7,!Nn-CqcNSH;T$N*!HM3`f\_JVC(R4[g3^J)1RCsCN
%W)[oZ>g%#a4C8#k5#J+fIBI(-e8'uTg>@\_`H6P>"08@iC!g-"T)*5:2[G]Z"3W"CYZ#IpI8^KCjLoSo(?'FM^h]!J2g[r];Q2sp
%?\VchJba+WeV]t/1XSRp#AZMtW2N&lRSBs38CWm^WP'fM]GmN^Oc(=*f.dY)e0h$i@Q(uZJkZH?m/che;S7<P#VNVO'T@sNW8!;0
%`1FE$QKfeSU4Rd.q/EbcW9#K\7[-<epr6;[Y.heliX#PJ6=03-\k@ArGRolUcM#*NS:(Y?q?V7CQ/>'ZN%*eXi);fWkSFnXlGqed
%],B)/3*()]@NqM\nbQY."-u&<,An[S(r[lUD)(N[+q/km1.DbD:dk<9g62/4OZHT2,_o.mm(>VBMQn[D$&q=`Q#+ZVO^1"G^04pT
%#h7-O/Z.)CRs`h#S+SI#r51e7R)n`+M49B:Wr*nEA:H1:k3!BWS)AU[ZW@oR9br_HVgaRFM,-4\$+d2_E6,)]:u*LZZ6E2g'j7Od
%/eUJC['m?W+BLsW.I?8lneW(lX!RthI0B+>h2.a1-\*?!\aP-&;eu;J\6gAB^'iShId0\VPsl=IL>%!$QnCg8f"<%.%Y0LcV"j>c
%K*9XOa#73W@eAU4TM(\Q72E`;@$)Qp:Q_R>U/)@7&-bla&iQ?8QB4:,g$hk,9SiPDd6SXNT8`N&q35Oi>N"jWKK/i9r@bt>6fjl$
%%RD"4d'2U0@),q1YsO[GapOe9F.OMdXU/^ZK:<ZT7**$W_+&!tO2*6FiaN7(8!OlAijITIN!K*g^P0E\^:f!UFJ;5PcFpg(g!4h,
%Zn(!fqo*Z+(B@\+T%3m^14tE+=&*nj3U[#bjV/6&S1H.<(ZX_#%nf@UGF;O-!R[9=cl*=K6O!)8X9Q@ELo1k9;&idplasUl.*E6M
%7"oM![I<S2X[:ALa@[&h0Zgl4\rgMF#5cAM(0ITOKloT_LY5FmJ@[[b.CQDba_LeF"pq3Y_TfE87R\,+caR\HT1r>Ih!QO8<KW&l
%$V,_'S^cECUBRfhLYEcDorWP#&#YP%a+W"%>:RoFR(*+[I=ts$i&?5*bZ,UuInD1_?k=&35rJd`=CmYW4]X^sVk0%tW,q&`JbG"E
%8*De)._nUC>P@]K,0)5Aq#6\=giNosnj28oIr`n$M]&:7\-(HU0muFa)q*jsS4-B@OFJ)Iiq2lVNphnj4#N"9clZpd1*j<K25W%j
%cpK4GWo3j1%Ju5L=Y:d_\R?RSL"#_b`nLs'F!4&uLNoo1iom/:LZEpE-+l9^20F'@iu#Ou_XmX#L84.@-6*DL)2s7_&VGFI78VsJ
%!jBtgA!of:ia0_=_g&8<3tUm`2A%Te/?O^W4BCA\H?_!jLep2LF$qb>`qRI=I1sVL?'78`'pjb1diG^)DqlA`\o6_$nE[g)GDtn&
%k'%g4^)nH%W;@Xl+fkLCh-mG_:4>UGm^mfNamKOc#L_JLp]ZB^48sU'U@kr8%1W!MqV;XMhFc]9XPV+Z,Q<!>PrhZdCS!VLHY[GA
%4S2\@G1?08rZ\Rm.uAKBp!tF5N:p:3G9$@*J7$OX2du'QR5"1@AI.Uu"MCG_>U[T*"X$.Hd])fQ9dn8.";eH'(!8tI%g3)^SP/;B
%JRhTK-o^i'G];eY=uRi2aY^7$L/&GF]p&c;6A_\A4LQs]n)O:SqS!9OhQ?kb5_*GNJCknGi#YV<QuFe\J(AMkXpEF+fNWKF/:_T@
%iZr$G28j78SmDFbF=r&p]a)32CrXZ95W)&ngtN:3>)rRP?cZ@nJs0g@L`IE'S(.-#HgJRs0m+2sq9I.;*ia`5Kd4WeX:8.?SR!2Y
%F?@G_R&A\aG!VlU&)2f0\pREe&CTs_]!+enTBj?M?2h&5m-455D04:p>hf%Q[ip2TJ_rh%"*8?0-,2`bIk=W3irt]H@AF-q%Q.<V
%bat1`-j`d:4:TP&#GXKI%GtBS;N@V5":k1mm#`N#U`>GtfkrJag]e],G!YO3hX$UI,P+ljWmq?#mqmGZ9],Tkf2)>6GKK([EKQ0R
%^).<ag"a3kE>,V-/M#><YPY7"8p3j4G/oO+&t2dkD7Q,ko/qp+ou9YC:K<6+^HB"[D<qedX^.[a>;+sc\Z;uN!,odQF*#hqHN\0/
%FWK]AZ5LERKjmi<ql*="I[j('1(RS;@X2jOX"e0Id+7$JOD#C>(_#!UYpD0PB2b/XAIc0<mb-.Ah>d5#rjb#R9i,34?5uEIPni^&
%&di_4D;jr]&G-"b@=CFirL*$Bj8ZaC@-M_,q:8Y"`U[4CJuF&<97^\'r7tfd`=;Cm:TbT%a==+dgMJ"Wbi&W?"Qq?s:<=fVs0qb%
%;Qojj9jhrR"K<)&Ik!/_S\3Tg9/UHVm4^pgj\<j!^]!aZir[O;@BE%9*q;T?=l#,blI*>[2u6Ip)W\>o-j$+"<&/#NVNB$T>od-9
%m51)F.3TtO\2nUfUHi^*CG+h<)MsVJr./9G,Nn1U^$\ZIP")n>FD]Acc"?nu*6C(,fa0)2`op?pIfB5N2Lg2_nN"(r^O'3,=3#(j
%bK]+oGeNVrK<Kl!<dB"[L5W8T$un\m)u6h0D"8]%D+dM.murW[lW''JN`V/9o_n/1Zc\:XIK+?pmK<Q7m/IOZmh_t'_P_PDag-u/
%:Sa$e^50:jVTq,uG#6l+"A2)$]]_MV<]P?-%rM'MV'X`!XW2TRDn"(G+pR/&L/_`p/7n)m18QD&K#6IEjY&CtpY(T&W+2GT:LPIZ
%r7gCJhp.0VL&1W6ceA<;8X3q_bl#^W"[q?tn)Z<PFI\kCh6J<.?nq\i:j!gkP`Pb0?Y?n\-cIh+]S%bdEs`^gP^5o9Z.B"E]Y?@"
%,Gs/UGoMK1hOjR*LTNqO'YBe%/g%=G6!E$81'uJsZ7cd5&8'<X+loli-#&bN]uu]8p=`m2X3#DtjJg6I.Xt>X^9;LD61]e7)dNrf
%0-*o[<YCSHF7*>>.TpbackQDh"Cq[i9DamC4&3oGWd]Ud^)Ag6;U*U0\l)*;8\o3W"Va)64\flWL-cDnO[,J7"IqeF,/F]2?aK'(
%_OGntVE+^s5j1(=Cr)s>P2m1%LCjkV+1e0Zc^^naB!];9Wc/35]?+><5UR[ignW6feYnLJl=[$f5^@NQG,1TBUVuiHLeetQ5g_<H
%`SV:\X+l>HY-Yke&Q1`BC1U@LFfp,",V97qE5">+TX%hc7`3]Pb&[>%A]NPT3;d#L8Dn7Ie>Q75c\kZa90/c8m#8W>dX+_HA>Veh
%+"C=nRA=Sml#S;,7agPSg-`rQl<<7%_?A1p;^GlF'hI/k(7Z25+-Jkdn2)CQJEsJ)'PP6c\cmDP3jE8C?thkj`CbJFDpQ+G2OXd_
%e9B+0lp!n!ebYN1Y-*799E_@8\*W!5G)_3D>_5U8IlfOtPs6QmOZ82bGtHSQ@%?M[E5aDI_)T)hNEin'T*(hPU:(o;$D:qW3@'Md
%Fm=[V%OABY-bK6ioo`dR&$8V7K[1^aNTU)VlCmJcdDItLl0TjW,f]$s=+hC8.&o.)[9HuJrb?lgk='Dg`h27A&rE%aR$I)X7)_fm
%+B?BS>93:2A]`HGo2B_`/]_f=q>7-PCndI$QmG32?jnXmWA<?,IMK@m]QUhRmS?+X'W[`rjO9:jM7tF=PN9)QILQC3^^^@8#V]Nl
%NF7XE*H+f@VkRe,s'(eGP[*Mmaa%@iHhh"]/cXHLO2k]W4dp[foYQr#W/fPs!4l\$-/Af:Pk!%7?D*Mp(D>"'`?-Htm#ZNYI6`:@
%)-%`SopttOhb),lKFpWsgYsqY\kbo(mKK&cK_nr/fPY+\r7(:E1CafHEVPdh9<]rEdMX".>eI>b+/t&%H[5Q]HRc7e.iPJRWDMTI
%,[W&\$9WA62oSS_PX5*CgNT5%+=%(g;RoY.4@Z2t'rQNI(G4Q0qOJ7_OA16<<BdMt>6ln[qfVc$;>H4"K\@oQ23g'Mjskk8Q>G31
%7o,3sl;A/t2M*h4oH=D$MBA70qLF+feO*j-E[*<!JQbSe-2=/Jash@"=*MlN>u/3^\C9?_02:WXG3D07[@p"lW$p3:`LqJ+;-oUM
%WH_uZ_S8;@'C`d6@K<V>3q^3([cHOZ\0$X2Gdhc&oY0M-5fXua?pn8V3FiKrEa#D@NbZ*lPkpTJ;Y!b^iqMP5;41!q']h%/Iu;sc
%`i_oX3af3lJ)Z/fSS7Q+drYX8$LXllH>3g:*h<)\<%:su[iUba[np'W?@01Elqaj"6Seca^psd$(F_3n5$*I=m3e9Ndq-?6j_FoJ
%@`8ZgBDF4<R);V.O"Z6p(G@LVB+/k>1Ud&qZW]23NfPLirZD/`MUipW[VY^]'RV\X9Ldo:cFl\g^qJ6em(+S0@tD&O[u^J9$o+U4
%k`,lF4ah\tZ$eQ'I,`E@)8LT6r,[''`,A:AgiNN8NI*%lEEZ>dc"Ogg8P4,Q<t2#@%E<Esa6fLrJ>]phMP$n$(X0jD(i2R]2#%fm
%P]0Weh4d(d`)`c6`;@d+n.8`:WP7e=.CU%i$2dkJF@":$%uXW#-p%F+hV\IDVHl/NA$YW)l1BV6,3spJkTfu@*:r'9N)F%kQq^-"
%Ti(Q#[Sm(tH?E-m4`J-7`,?T*7DCqmeV*>>8HA(RhN2%n^l,j5?IA7<0ZOWEXNk@^7X7LVpso])itJfY%-I?UnZA7;MttQ:(Zdq)
%37k'H_ojPoI4UKbJ"K$MHQb7?G>hW3("Y8_n`c=<PhjAPrdX,uVl$Yio-&7[L8B=$H>G)6Xgt-9BFGR(r0$Jg*id@MWULDA:h\uR
%oI-<n+_qlu]7jdq5gB*JjNZ++QU;WTM(FT"dO?K.WqTXXr=f_6MTXaE\5d)KomM]K4,7br+f.!)I&u+$)Hna#.:fFuNJWn)i3)+O
%-AUiX7lUU2S,4Xu48Z`5.YgH=kZ=,3WF%e0gDA;oe3frH^0G:B/GnX-jmX2e5Bg5m<`LkhNDf'e?Y'6fX5C>9'D7'[kO%1qr@Q]%
%D/"Z[_cOcuEWoIjggh[6dZW*BU>e6sAFUC<<^gG/1R^'P"hE5F>$=d0r'01^'%X>f1LHs8<C@Zg15B.m-)o\(o3`TmY76GZeO>pi
%6$07"h\%!m(Z)b)M+d7(/OMY\B_cddM.CnW`tln;d$:B3pSg]XFdMOp9K1>V;tOpIDpf'p>=\%q9\0[!>Zh@BS?(<3?or0gDJ"b=
%e<9sNEAEg.RS[eh%urWccJ+kb%D7OC+/d9L_<d(%p(W@>YV,,.DN(H'*$OD'e5X,`Bd."Z=C]+An[;\H2dlZj)Eb.[FhuEIC,FJ1
%cMf9-q(9/GLkfr\IQ&1Qg#0hO,'_bn*FER'FqV,9K'5eW0-ift-+%!POJKrF^o>7NV28"LB6dV(D:]^."d\2R:)53A$qjU18B;FR
%eDl<?=f!Yp?e/'@gC1hQG+q[C_;\.'D2?t=#)@6.h_ab.=*3UI*G(Re$rYkm2KkIiMX*CHVg@Qk;8oR,.j@#S^u=rdYpaV<*X6mK
%19d;9Tdo(oLJbtU3PV:cgH*=m60luP',K7$dDj%G7<t/>&sACE44%)`!k#e"m"TR"!'0mNYNW)La1tN?Uq=LUG&HiHUn>gLFDAXM
%(3N8L`Imj.QC*6aP/=2D.^Y*X"'\YHF[MdE<3dQOm^uDNUr%2\i/iZa7m;S-C$rP3V@q:_-&lF%r1-)AEf*`AoDDVAQ0\m]cEfr+
%R@_/F3W"ZVFm&tb_K!+ZB^+:iV]^)h+uG1[/J/%VJLI0[cO"7#NY:AFY[]t*?u#HD#^>Q4818R;6>e(p>&3dbJX-Er"N(g&d\GP/
%/uq:4[#15D_M:CsC=&&7+0RA,CODXrff)&k`cM#7.T.OafaW-*WfZ3(N=I4\.>Z;aTf2Gu[i[2s,_j#6+K6fs&Eft^Y^#'A'SW-B
%3(=g.[OK_1"APo!!hZ)!/R#lsjYr0Ol^Vn.d)?"Oo:8Y`DK""$5D0DXFJ=2/Ch8l-3*"U#8`*!+m#MlKCt:T)]/b(`_aUBe"b[WD
%IKZF9fF-?6)#)ec*qcaL3q0#T*0uc0;h4:W0cVe3ecUsGhlm`)<blpdcV6t(o?nftr:,0DO@%A:Z-qWeTQ`diJRdi4h=3i:M9Sbc
%erRcjK!V6):qgT:6V>I\B#lp"@L\4([;8JJ&:e\%9L9.-J/_r:Q33'Jd\OuFXLt()Li]H#-0I3u=jWfV.!+r3,.s>d(3!!YWA''&
%2rZlA(Vp5N38G]@ePUi%$-EU(._d69W3%%p>6EP2l!Z]88?_%p61$gK%;;,L(kue,l_iu$7AuNp+D@eHG_LM9gt;"LZ]Fap7<IQ_
%8]aVBa"7X(=&QL-W3"<tN5JGoJVR`*i!Q$OJsj2H(d&X9_mb`@3;"*s35@^ra`A\366Ho]WB/m1kq"t>]AL+ESCO!Vg;mKsjJ)M!
%ejK(Sk<liXG.4pWs$"Xkhn;`mn?F8@*cjAdP'u(;DjIone;Ka4;$H2(Ou7BRj16.P_Bq_:Wn5:A/"7PCm$2"kBsl3so.-MA-rpFP
%HJKnm$k.Qr]h%`:(,kf#8]D@9JlMB&>LZgDG/$29-nP1aIl["YD-$eo84'H24QE@k?Mga^4sEB<KEhTC[BO7?JT"oEZR&+][%*bG
%D,iO2J4>pJ3*[Z-Os=;;:iM(:$hCr0C7k$"r*;JF="7.*kWBTD70?qZI%[WZ=ET%;l9U`(@)$=&N,(lL#h,b",=rL?jLu:-Ljkf&
%gZ-kepinW,p(eGZ(MOMaWLHKl]#.fkPQ@!Eah817OL]5-`e+MA4"+@3GZZ%i@0YGU)50)bGSjrqA_j,Xqr3s=lBi``8rqr&dN7!8
%1`nLeF>u9XW_i-s'k^"f_kfBg/ON,^VFiOFi`pc3YYu:N8/Vt0^3gd8n&9s!*L7HQQ:*QB8S-i.KMt+s*j?_S(!B"[4mcaGL2'Fk
%]cS`i<2>7Gh\Bl48d0>B6m9^/:R!T'ZuWe<D74gf.Gi8jZ9Sbs253GXB_qS(C/<5eHT\,!7["pQOs9\W%s:@(.\6>[MYGqp&KZ;<
%2U3V?JU;3o=lia`?)r?uoS.;#,ST;GX$EV1c[@cBnRHn\l6]`FCPuhd;q+[o,mNXUV%p8/7B!3G09[I?OLE#*h7mN8G[mk3Lreeh
%j%OalR4,0MaN?lG<=4b\e<^F%7[8QkI(?T#+XA`"NlQCkjq&"Je-Dg>.3>9'H?p:O*m6f,?45A/-#(5V906IZ0PBE,$(,*PBb2V-
%3_G\QbphOAQH3biVuia7_1^rajbYBn:-+cd"3+d6/*d(*GhfAT6eVDPSI-/;MQ5.b[Zk>fc+ejd\=a='e(!ke6)J=QDQ.*+R\:)!
%SVFKS2s,0Y"O:0lq6h8TS<;r^JA`OK@2o^=W?2WL$kbm5TXs-l$`'7M^-c#82N.n^D"bNOSA8I$Si&g.Oq*6*e4]>?gJO)hP[/1o
%\oan/qp2MLKP7-k,Jn!^U;ejab@aElmHag4q5a`+#I%N&O'V[F<`@ZoWceZH>V'W$&[jd:)K!H5F@qV,rOW6.LS<fb0@5Gs2Z/5+
%S\+GIi[A="8HH`4"H0`YlO#-)H8si8#9+5`#]@o7]FYB+qHTkpgoU`UiX3A4K#'i3Q4DtF[!p8JE]6cW9-e:B1#-BNcjDBU541F&
%fb`_L.rGbFAYchiEtLBbCaG">b//-m/0d9W8@$9"53A6k&Zp;(jSJIBMKph.p>-cnoZ(15p/X@>fR0G;,**X>n%+)s$AcbjMIQ"`
%=e#HM1/F/\;oX_kWnQ&TSq<];hm(tj'^X@-hfmq(Ptq2YM,g_MG72?Hes>W<<B4h]6%FGqKb>R^TOc@'iAYl6R`VZ%nKlV@$WH"k
%h$fQf-EA)mKcu=/Q5(;!]5Q;H)I";Xn:kjOZCK903O5*^:a8&u,op.-ZpPZ423nTiQYi!>rGCe@e.f5$p24TM0"(s6MAfhtd8QaO
%U`+anBq4[Q1Go7pA-ssn0sH-<K,o&3fUZcEFR]D#isXR7D';o\8=%aFl^#n?*tcba.k-<;dH<F#NK#e\d*8gRea`,ejTHE%&/1os
%7*VR:aTFr17l4J+Ft$>VRp+Q0%#ut5\`%(]2L_:iD\p:*BnZEI_[afT&NcaI`M255H#$OT[Yk73EGhRjD.h[Tc/tOE[SR)unmU!2
%=(1d=X`BlB`K#(-c&PS-U8RV7fGAiimAN,uINLB9<"(qechQb(_oKcq`@/CCc/Oe42DigKOFhK\][n9!YPuV2ghP*_H*A<jMG3i>
%TsLh>+574Hq7rUZ/ubE:[rAnM%akHbWZ'6aL#"%JE3-1!Jm3YZ!)Z1Jmft:s5_rU"^t=A)#%2^bXQK06>P^FW>4m-4;9m_qa#C)<
%2"3s!Z-R\p]kUP2+1dBN?@I[-(+63NmNlF)s2^p_0fB=03kV:g+DUJjib.AIeg0*M_UBrGO]u_S/Zo!VeW*agL0KV8qA/$?0AW%%
%Ns@2/itVigoA>;S@b+_1bSQ0qV/'OM^-5)UmLZM@8,4:]Q-17I:)cKV+>o9;$%>[[R(,bRb^43,?_;5Dh[`7O<Jf1AQEK/CZ3/f"
%640q43N8fP=n,p5X_9\nlJ0Ps/h&CC)$X`m@3+6<97\NOoZA6>^1B#3O41sX-_9sWJ22ni.c7jO"nh]MU_0)[&=6C1migd#G/Hh#
%5!bq9&A;nC9<&s.a.kA:q5HPZ91WNs*6D+mO'u"2HY_Hc/U2`r>Io1TBP[ABPC_S'mWUFg6qLgS3oQ!>N6MMN_D$a(H]!uQ,BU19
%&cs%P8I$?+5*"i6romi"X^&N`$.5br.#kO0aC3pL@Zj$JF\D69/j2b@jp:ogf722IO9:P%MGO*li<\YiJ?)/u3?3jq2J!@5GWQnD
%ZaWgM_7/X]Rp4U6K^(mUH$amC4QgSX@O2)7aHro5%7>V9V)>JcjPm6A]H"G;-mq2k5c&)NC*,bhgH\$SCN#Mj7c=2qJDKiqp*cDC
%GugDs*Nds5OJGk1RnB<5gPf*"-Rk!_GW@pg5+<]e8$.#l*Y\73!k:,^C#,G?Q@c;'9Ja=rh$0?/=ERF7.aK.V4Fbd::qh)'PK.d`
%Y0)"2ms.ch-ahRJ.O`G/oK6`So)nUJnNG5F0XX.@E8F`,AX\Vd.H$dURo]aXnYWRnQh%=)?8b1PbEoU`Z:07:JTr6Ol1s95a]^jE
%PGTp#?&k3$(=ed+U^eJf4H_/9DmuChil7!/\@*S8^K;L$KIe.TO])YF>/M\5p,>BhS520cnCgc0Iu)<7l:5-B$uS!Y#/r9$:FoRJ
%FCeD$ZjF%87;YJ!h%*F(]4i9IBYP5e=O+fIT\o#FW<O#+IC@Vs<E-$Jkap4?F7/cmBu?Ng^'%GTRTX\*-:IAaX1\h#k?=2[k1SH?
%dVGU6>8gfFrD@m#-/S//n;!G-'2p6V7N<7*"kbV[2KpR!assA#An7Mb=\D?$W,o`,kljVIc!<;@B'96\6J4/hVK(Y9hbt[c6PY[+
%Mi?j*7X1^=F\/%WRqXu1bnUsVb,,gDH^jE>ll]Vm5(`9`hUG\<L,'<!M:-'a,'"B3HC^NgBu"D+J8Ps2$=;$-[rT&Z?icC6-);iH
%mC))qNV=^FS%nl*fA6Z?^3hG&BXlTULX-D^,DB+hSmi7(0"RFiHj%:R;Z&'7jb[7mB$N6n_:*o@ZHcs`g7nj5#Tc__^7ne&=)Z78
%<o.i'W&*P;cA5\GDa$k>T!Q-3M+dS6ODj^D*fk)f87^p+T%^30,%WOtYE<mBL\"(&2&'mrQ[ae?O;"G,7$0alO39^X(?ONZ%StkD
%C'P$$^u+nJ9`*i%[bd^;0W<I5/8E`3N*'$g&Ymt&8/FjG&_UE\k#PbF*c+97o5/79S;CY/GQ&dGrR\pNe1?b0LndT'iu6<EiAF`0
%G?hc505cLJ)2DE:r#O4j#BWe-7:k0]*(FJm>l\\f`XYn3rWEn6Yu=h\=ojOLWU94&7p)Kq`-YK2nsB.a;@ND8:/@,@.,iHWZb(nG
%@8u%qLP(Em?KYnG(BC"NZ5hgB:j'=>6BR1^&_?'.-T,S)ULJo2?aU[@*aWc55Nq28R73/XQIa9eg=qMa:p@l^=c3&+%/Lf)GpH[(
%@u,9s&DSV>p,"=7[AWss^8X`,jlfN$U4ct2,*V?VWU3AdD=5aL3\A*6<T2p(nu7.6K(u+/_B-'N;9DIf*,g[3oK&5Wd\;Q&#$f#U
%05r72<0)!r=8W[D)$M-7`_f^c93`d56V"C!DYfY5)*Wi@qLYIt=EP?_ck=SD;`JA!.N9!&<m64P6'7*Ga4b9GXHsROgl-'E:Sq^L
%(J]!n;UpBR`A*SCIO=osZ?qh+O+_2*?)DWGoVCPI2tMr#X@h2Hc][ciMGOI(WIF+c56Vl2<N/j)4jM!6C<W'&NGRhjM(<^rHQ3M6
%UaT[=:d@u=)6Sd)j(+Tf5=;eIS6t:P6uljYFcQB,T?bZP1'e%G3?5n%_B>f!MG+$S\.J=r,G(&.0usD,.M9HWeV!Y"22[eML34dA
%[Q-=+aAk:C3q/"qc]'KTK2@#TUS&C[(m<Sh+h]>ZArUa<g6MYDC>(b^*FlE%`IUmIY]OY#F,+O?k_G2]F+Dp+oZ<oqfqRhHMd2+l
%>eEF%_f1_Z@KP]G/?^7ljZCFK^Q!0C9&!K.;#@pu<aRLEm7%nkQW)G8r(Z@Ob!<NS]9nD9lua<M$>nDmpu*<qp/+$VW>G8,,`M-V
%Db#=Khl#T1^QgX(r&B0'YQ+4Os',N=)'_rJn`,+hruhsus#AB9l?T<MrZC7):r3^m:HYQ=J,O;7E!h&)gALul4U6gC_soroLOYk$
%J$.)hOT,5-FW">?G,-/4gK-t-&,;5a!ZE+3`O&,<-8J=o;5WuV]0Z6#V@Cf4Jg[ams%d4j)RpQbBmq%DUSk5bQsL6)D05d$N\M8c
%\;8/dDFecp\oKcbn/jo-fMT;.JC&pA-m3?C;pMog)aQ*D!*<\Ds.Ven2=_OViT"!2pf].&Dn5.h(+!7%A3])"/^0"&8L,47)kV?&
%GpZ.]Yga+GUsi$58srYEieD)#gN"td$B/$nPOoVR^XT<K05AUTIeFT*%$X./$C]3MX6,Yl_`2@l;&nBLFWBS3)EmF6WnJ'S^?T6:
%=?m@;:[?0UbT90Zp3"tT2(KNY[BSrMJP=;W!Pqrro\uc*;rX\@8TYs\$))PGh]A42U1$pUp8K=](Aon1@9h-`k`Y[(nKd[!h`'3j
%@M#/Y7nTe>%C.T1&r;cnAd$c86'cY<M,ku2=,]9%;2[C@m5O$\T#']bXG.1oB!r'>n&G&@.C%jb)+<..r4S#.eDHIaT[RLeWi8.7
%7F3PP?tAB.Vs%^^>uC]]d$3tL#\VKSr"<3H?fJ<;F$6G2TMb*g[9N9Nm4H$JG;lu9nStM:$X2%Koa'nd,uOC)WtYrBHc%`ONZ&D6
%`8.'ih2_97P9YjJDe-Ejm3Zg\O-J]j!3CU\_5*=C+7`#]:/p()]c@*<MoYY,Mnaj/A<M`\E573Fs4</TE-Y/8[nZD@N>815d9iD6
%\HC,O<O(%F*3#r4L**s9=Qn,\XV&_9/U2Yq/Q9ns%Z-kfdE%/Fa@%[$2)6(;B@F$9kj,YCrF?9qAPq(oNbnF3iG;;M>dXHbk[cX,
%;A`[$d^but=#!T&07>To0qmY8[2`pP$3&;,O9g@*.uD"tE64"oZG6uZ)?L1,&$ZljXqYbaluJCY!K/m7+OQ5fbUkjoB6a=>TcEg7
%!NLn_!o/t%TPl!.$iFgkph,XqF9a!e'OkAFK:dq)QR+QQfP]e.l<]do#tflT'BI>ic>1@m#B%2pZrCd-GGcKFUmtR_H8GS$ML/R*
%I3BYtp&Z3VFWR9Dd9TXX8?*_N2^cW"q;_Fk`<Rteg>+2D9^c=]]@2;P3?m=?-qD-'VQ*`"E8ICM3S^F76k]*FFb8frY(BY_r>.2a
%'qG:KZBZ4$;#2W.fGps%_&K-"k!j%jc%Th@OL[h=#G,[0Kb3B"%4qf*L_?";)/KEYMB[TPHPbqihiQPV7l`@Xd3;rs%!I9!IHFXP
%,Z5n<3&(dcEfP^k6/teWMs`ac8Ht@!(`V=Y0#.A>m)1B<$46g73LQ4dq'c4``Ms?@50'7Kfc@R-UK^0WQil0DdduS@-_oMHE9\n/
%F?/!h3+A0$WpK/21Z\IVcRnX,hSl3'.WKQq*1%G&?\`feEnVZtk"au<C61haK>qm(:Ad"Q)i'5M[*D,P#>N1j0mD_9iCeuIe5i8q
%@j>srXO4h"O:ESAf,l*S\gKa7=-4bj7sJ5PrcT>>H[F3q*eF@5PK5-j78ok5CoP<g1%]#t?Ma68A9HU:hJ/$<IYjrmJKRh6Tme.B
%+lj?5d(GaHD2*mVU*rpaArp73cIpQ%%d3;C=27D*;67#[2\c8cdDe#YmH7T5)55NNL?=X889(Zp2:JgS[+46hUgkK0#K_>?T9OZ+
%Obbqec'a?E4,GpEmnJ(?&fmH&Q>#2M6&0N#[M2VldfrZ,>c/2pX^imnaD1g6P,ZtB6T!l0C<i2gL-ZC0PO\'ti!CX7_!W'_>D*p]
%!JTbT.sb!%lSRci8S#8mH06PI)ItJi(5Uh$.qD)GO&iF?la$srNs\(DS*]!#W`<<G_Dia+-kW_L8>kKaY*TiH7+`'<DJVUBCVF<s
%"[:[:L:cUl!L\Ee["$u/n9IUdbVmmaaP+(9U[NNuq_7,3[7r==mn6ieTDN][;Qk;'&!H5kgqobj(KN+k%6gM?K+(C$8C!O"j"@A]
%UuIsSb!<jD_`_+gP`9Ig+T+dhra]@7HnZS@]SE)^LAu4qLD3HqK/d([:TFQRTf+aE&>=j^pBe2,4fC6[a\J]I+N+Hf>f0<ZME[lj
%NqP:Y66_[/-*rQnF&PKf!Kb^*InO*ia@eS4>%:d=R7]c2=;*'"M&d[?VQeoL!'[]f3l7FAj2C)1j0MPVa8LaQ^[;`IF<kBkKM"sR
%F`C9UCPL`\7$omea&GIeA?0DU]*QhPX:4D))(mrQao%S0=!gNJ*drel5`$i.\=j-km[:k76]eF2IHdH[&JL"Vq@t"eVkT#::iODM
%LZ*(TMVu#></>c;2FiLHF!='cgtksHdbeL1ePNbS:,Z0cOS9=?&iVDK=<h&/S1?[a*n#?eaS8ZUh`ZSS8#5_[P^>CR@0iNFe#@\Y
%LilRlbTQL$m;tg"@#?aBA;i%->?Q+cg\cjuQUn=Q>6RhJ#W`Io[Q(,S-eT?:?[u@S3,QV7#C?k#;BVh3Ead5#_q9aEYV#CN#%">q
%M,4I'=r#eMj4C2%k(1*R&[#9R3Klt_W;u2LX&?>K207,U3"SoZoU-=4]n@g,'L"L^89u7\8!22BSdhir`)/,R(>P#3E^L\6n1^j\
%E"?eVZj(mlB=/7(2/I^3<#jWnDc;98JR^HRp8::C,So5R4"N\8T8`Nrm6+j9`coVuoi)X4W#uLGfp0:qdmZUZW%Yb@,_*\G2=eq#
%'GVOKT0JZ%Vj1!n-gJidEg,!4#.`R"@hH8)C__dq<HEq28ogG&_r[$3@j?fUS':>D7M?E/:QH!@6lfU:kjit9kYh[frZM#f'u/If
%/TEch%/>CGJ=J$5\E4(>Jt@=ZG0d_tof\bls8;(s:Z5NuG@"/6$?OU]rP%H]X&.WO&F1*4nQp7[bC2[&F\<d'iO;X;p@rfT>>u4e
%AFJ=B]L;\+M8Z>T*sD7#>uYZ"GDVop]nBJUY/[UV]FFMZ]pG?S)GUQqBir[$f[:*SW1DAdf/poX[m_q`Z%[]F=U94]:qr1:G/&,l
%@MTGn4^O2+!fCi:20DJsk$SScSm?3hrI5pQm/jrrD""nq80].H%4*(F>?Do\>3=K!cFkOMSm=Z;IK0YagJZ<CB[K>r[Rek5\ZYVr
%T^,.mB60F'q:\Jdp$QS])St/n5@5+8?'8ThBqQN<NmKA[#P\0-0hEnT^BH9S?kN4%:c[@V.(?7koHbb$IuheFH43M:60YGL9Cak7
%/\HFQ[<;6AI>IW<Ga<r[).sNT:ac7ig>3p,S5"Oc+ns?-,u*Bspl$T4@l"T^k&=GGXUq*sUJfe=dh4c#%%IAn[.h.gBr]5o7*G'g
%FW-<!Y%\;(Ht?.\&^,&81SPX.:lBWRK.l<cDscq<D97njZ$-6F&*HB3"SeS1&*B5We@IF?$uE]]gB62+K>r%,(>rp6/[^T6pWa%"
%elkB%5.=,sd&=*NLHE4+P7]'mA[PQ!r\cb$mYTr*4(jn-[[eJ7K(U^2o!`dWG*.j9."A5b\]sH;[^^2M9sMse?:;B;Y=)7+gsTL:
%^oZ4EnX]WS\@j<')96&jXM360PHu`q%J.K(IbE91br'odAT_OSr>f`Y>,LIqkY(=!C"kWGSoICCm2T@#RiEt6[Y>SVfclR\2F)%r
%;="KVB<]l%b\$_i9[omSVlUooft)l@=j(14PKd4R2V)6\kGPdGL\1k#0Pe#hmX9:bX*q/FS<huT&=iEfKR'U/ZCRH^k5>I$+cCh]
%XUMmIokUVe@abg&&7St;X@l.T^2Go"[%51e:T)iZU&(Ierbf+Q>HnihI`0NL?*P8bZ,YDP,L$Qe2QJ@B$>3DpC<o-Ah;/p5r)U#O
%J*4l<(Ir9BGgJ+nhJ+j&Dnb\I]lEGDgYD3gghhX]9X!/8`9p("'\_F@Hb8,)2Z-PC<%-TLAo5iaSrkX1I;di1Wci*C8[hCdH<8i^
%?7/Uh-bD7E=5+BpCjo=JNMdQ#GDI,94QWfLZQ"@:[L3goX1fPKbnp7NWQU"_eSOMTn$@>Ah)^DFBm\=d)hcfiQgO]rZ2(#!<bYVI
%9QgN*^;Ck"iG5JjonIPu1qEOZA%gf:F%KN:Vf06dfc%l\ad&Pu/S*U?g@cU'04`Zb&1gcQ:MHepBmm=os&V@)C-OlIm[M0jXkD07
%ot@r"\_+1!:?2VIaL5E`-e&3;Y&E[[[WgSZDX/-^fBMYH2!Zr1Vb:f2CA-t;r=QSI#&_gd09(93no(-lEfRAN$Lb"sm-3VO0t!4d
%hU9T/]s\W8Q<qNkrRCYK[.GiUF%jdK]qq'NbI+_M(N8R"e!r3p:njeQ5G$'L)F8U@0/L^N2`=*#YHmsVN;5i1H51?![Br(,hUTfh
%?+%XJ[.Q1fDJ,!_f?<!fVXAV&b2usLjSk"]?5CQX5.09;CTl`'!k5U/IFWPhAk08(B80DYMOu#//"Y/EX-fRCd?\.A^K3/,V6iu<
%hRT]>3JpsdH21BIgEF_&`bcLNmA,C%3j?EVlYXJdj3'Wfo+eAh]ZJe(@PfSnotAOMSJ#1%f4ad;ke=DK+5Z2(+hs0JS\?QfD*OcH
%=0]cf--i61ZS.q%e,i6aq^UGWok`e&>.ZHf9%S]RdI58mUS[D2NK.?M*UD)cZY9/7]K'7j]"I-kIJq`BC:d9CkEgU$f2@[YZftPr
%g\g?af')sAhpQrD=$X.k12=k;[KHBRpWLoajc@Dgc?>[]B+aV1V%C6L.GB)t(%8/+gH;n+?`'qA_c-:_T1g5G>JIBU%&X'1Pu^*C
%ra5BJWuS5_*Y#o"VM"`SFT<q@kc2QFUqI8_AP9_@96u,VDd2hrBEDd3E4-d;XUCLlc*h:5*GrT.#.N0sT$[ee!k3=9W%GaY%'U7E
%YnQ^$3qO9N4/5F&=RN<,Cn@kId2tDqJ_>[g:8J]U]G[*M!Ns#50Y2hgS+jMV<kaW4@.lXmquSj""1+?F;I_GmJJIMCZWun,XW*Y@
%nmVuBlNZKJh:`t,_!IslmF!WS^e3u`dl-cA40[^#Un]N!Grm^,cgJ&]fXcXelhIPcbb?&D^WNb.b-g(9XOt1t/f[JF0LPS<@>f;:
%p=j*J(ML/XHh`2?QgAM&l3/J/\SQE-](cll[4NC8>F[H(AW@u*AZKRb>:;ofZalW6oa+HC*EZ$UWS;NCP#Ye)H>[kD\50KofVNT?
%aTo.tWLEp)m@i$$iDr#BSb4JSp*lI)1Yf2m-8om[X&egs4-@+`cfjV:=h11lV6-'ZE^p#pe97$np20\(.4unbn(FG0bm_n+=kr:S
%2Vmpu%mGOOaM1o%oUsEZ>)g@96!Ii'Vr+"Dr+k*mGp;akVW69M2M1O"n,>&K2<Ze%)cgdiGh]NMPIAf;DqSkepkug<IEGK$Gd\bE
%-EgH=X(rYTHu,A5%:/9O.omS'lF&YKAmX*:N]<Q[>h-TW7m!GeY$Q(QpV;(]j<$bdcCITHBHOcF%WY`$=VDRBkc./#$p<ebBbSj>
%'>,g+e4Uja_S=^"l^"9Jqq6k<I[.6hde;=fm8p[KqsgV]Ra\11m3?.W\Q<k:I+21@L/,.Ib%WG)RM0;FN+m5-OI+cR;lB"IB\lpo
%97T=)p?rF2hr-KbN/2-L2nOMsQ489-<UU$(0:g?_4TB)_l#F(al0DU?\)XP!SrTj0Pk0t&)/CYf8dGBhe.qPL*kuu#n7]MkO1GMg
%eNV#d1q>*e<meWa95VLXSaYpI9uK5RF\,Otj6!Ap6G_/0j0&8cPNgiamIm8ak?%1%m1VXlXq"4QYE>CSJZF!('u*Ah-`V?YhIbNN
%(V:`@p1_<G^YAMGT_6.jY<i&'q^RHknCnFSD5gt&;iTVY,+)Ne%b/a9f(F<qMn$IWiY1Br]j5d1hBjo1).?H[s*Hi4lZ_Xh\%<]3
%.XTuek4P1s[Be:\0gAj[*H>D7[E%.h=6iht_,ppcbKUg;7s>9<?DCeldVe6JkdgIII]iQrD-O:,7fT@q4Dg!llOZ/23C8'4bH\Ig
%SK?UYLt,EcIc8b\7bT`gEAuCYf)<sMY''!@p7T#!4mV+6mjkX\`p.pNIA#\u2Ke"0,9WU@=MO@ZeLh&02kmmti8j6!>\nl![L)T6
%e`)=sQJ+2G-KEMUgU7^'-6ZF_Y-#"sXgXM$l#U#Y)p9&+]&7Mu@#JolO">DiOR7oblQo/X*jm-K)]7kR*L<$Cld9N4mIaS;TmOJ5
%`?s`U6ap1g<P&8G5It$lI4:(>rY_u[XD:B09=4%8f':`LJ)30d(M:(m>aA,ZldT)o/QVZ<%')9<p,q^6T:U2][<OKu'=F5kg)hn:
%q[@;T?`J7!g@mk7471Ib7ido1eaMYU>/r2fC:=`N<6oHM60FUqfkK2$g.>XuqiKPI;+l6kIBQbs+_H4tS!iZ$40*er[H;%Do!EF%
%U'&?Bf8^5'lAXk=f,XSbjid8UXZdgjWUgFgoj-G/hSsTdhGD2cZIf)-<f*l4#^o$]f(PS>6*-_"%ImQ*ae"b`HqLis<j(<.G5HNO
%F?M5e=R$h'QhMf+_56;b7/blE`HuFXkG"&\EK94>ki#SpgC"5Hr(s+PqqrDiMo0_.$NmM===jMnKTn,e#Y8u4A(3Fh'B$';f$5&?
%>A\a@lRAdGJBtfWC);ERS3W_s(%Tq1DG/g4-KONAA(M(phghq[ZkjbH4n>B67jUYrq%AC3,R61rIFFY$D_ED^De&+np2.(/R7G^b
%]:Hn7H8k1j059r?%h8AIb5nMh@MbMEq<::uCk#0Mkm;*3'L-C6>'<\O9=]Xa5i7cAJ\Glshmt<OW0OgCCDI[R6kfZka?lr-24-b:
%+r/.!pZk/BMVc^'+&9Mb#,p?O\,.GuUo\u8#UPB@[I(Bq&LG!,/sWKB/P^?MHga^"h.1\59rR<TQ2^4gj"*k<;PO7%Z%ZF2pL"qX
%:rk!S=kGCX7,I!XW!,Y-Tt]0ZO`tjhPY=Kp:/9NpRcG7!;D^gB5i99Nq/!0D#emsPrHYOA@nWElp*akkKTZlTM+K2H,0)s_58rY8
%S`\DAfP`kDZtJoi<5%)@:qn%?7Vsc!eH"<\]?L-.ecpL5+J9]>J[PR4]Z3!.Mi5^So7;`a>J1q/V"n>h\j[omeY)JFU&O(to7440
%7(:T^b;3'(WdqD6!f[Gf/3;@#^-)?S$7=YXRV^FQQ12VIeJ7K2Fgmh$(p/(a'cF],i%90>mT6mDjHj3+b'35X%cIN4_?\eJ00X4U
%l4JL?CEo46R.^;i8FsO/?Pi/g#5$I&+kP4mmUu'LM'"l;*p5DWk9HW>!J.Zb35#G(e=GeN'Z%\8]j,1cn\L17^34,Ln1TP/fR<dX
%c$-k()jj?m]Kok^(;Cs?PC'?dc5kP9ClJ9-h_Qu:B<)Ii,MP`#*gu/:[$s&gURkpVcZ[sMHd.MND+fOT)ep`.]N&r\1q2.fa$!@[
%1X_nZf+Nb!V+$\j,Y!6!WtTqbgRSY-;,=GPMH)WI[.l!)XScPp3gUV:X*md0dV`-jVeWY7GdomPI)#Q\^5)C\bnB_Tj+49>""K6%
%A(n8;]SnT>qY;VWT#&[[0I@YJ^H$0J4aO!u_tM?%-HpND`p1cS5>f>RI(-*HWa.M@eOsls*GAK]rU.L-6Tn4-PQX4'J]c$]<lD\;
%+HX"RDRZMU4f6eEL?+dkqU0mW^=esg\*OjG8#`OIQ:,oBr)q4pqWiHhXafX&db_fqR9jB4e^lB;+1;R5C0HIR<?J.,e[#"Zf.MLV
%MSK+2rFY'V4ituX2VHG6q$p56eTN.lT5[&=\oV`?)%(+od79a=<GGRbXY!ts25'jj#W,>l"6I0V=9q5jA<u(?eu=$qm(k7!;fM&r
%D"lFjUBR*ai.9%pg:FE^Xcc*%BUl)0[D/_:k\YO]P*;19III."BV'b[WY=^<7%e'LU/bs%(90N"k541VZMEO)s3r*4:F)K0\_<8f
%W&:O.r,lm1JCObH%r&CanRDfSI^I9AlRSG,Xdm*PEeK&5O*64f6Z!"[/&jlW[-k]G2P;/^^2s*(:ipL&7W!X^(TT,Qq>=@>5a6;m
%F`2s^B."#`oqkdZb7JFn'*D&!+gidW6>?ZiS(sf/.tFa*!TJ)=2%,TX\i(cQra0;N"JQI^H@%5-'7t8Ds8V;a@$=CT-n4;aP?@F=
%C^MT0!n$KYW'NMN<@^m0$l%M9[8G[j#/A^H)!iAa88cUK8+s7EQtYl0Or`n$H#M+6d-`kU2&$%H0Z:!4,SOpTS#@u<6%.:_l2RDg
%21Wp\]^qbq:G=%Xlk%:=RT_/HAo=?TD+^lcL]FP_D+tk"'G6Hq^a_&fKj&"8l;Ohc7A3=fe?E[OHfqIVCJGH#DY7CnW8tEjFO>"W
%Iqpfpm=OqI5p/Ta,S@7p%SEE-)2dR@$cAo>UGQXd2.(1Oc#R@>#sqnOno3jZcaMYT_a;n$YsNpYAM'a]6j\Z!:9]T`63qh?'>5h0
%L/FL2B[EsII=HpJ[JTk6KXB=+p<r,OD.W.2pZ`Qgl>pk?'E-i'8.cG*"K_0W;Q*!<W]B-lk#A9n5%s`O?a\j3o(dl5=flPXj`?$u
%g5ONcibY6c+8*$*l%`QPqFW""iS@_`F4l`EgnBXKK_4N-&C@\AfBZ"Y='d&TIV$79ZhVnYDl)804q%4%FVDA7-hqRMTA!CcBX,RI
%2s;`+[ir@"KYi?M0:fo4"734ac1e&#6Jj4Z[+0-n5Z>+MN:lQM.*r-'7Bb9G5Ueh:nG63<,5B1>qRs9p9X_XqQV)_1AV`VM@`6HR
%&DJ7E2i\c_qp(nSG@T5t]53Mj8'Hdt@$pk.*e&"R<@Yu-`35<t3F3hF-9n,/Wo,j@A6kWX8'M)@fg^\'7-YKM(,dO#?aN%_D*rbO
%M<d>nNiPd:8o8E.a.]VPpRYQrN0\2AX5,@1AW<<`6Z9h/*C=0cJ%3.&Yme9]8cKFR'VZ$ND8oIonF$nook!aXH7Q#)$oG85nF[U<
%I)CK^>c^9XRl^<+9u#lCDgO%A+Q$t+E7P^]cr\ISmLT=MkdT4`BUlrUOK6s0RiL<-A;bJd?+X%g'\h[%Z:s!Xn)$srBslK'2g05G
%=a"O/:InTMn,D#J>q5R=fB0?1Jo0A%C_l<e1k./.`V2mU:kuimq:cs"]:6u;mqn8d[K:^(K*t(S)7:+P(@RXaq^7?;rk$67]pY-e
%K<8qW;-G1]qck-C^(P*l)_8p85@OJppDU<c\4akVY0DbX-\A/:?U%tePO2XsY6_&Fg\H&&#tV)oob3WN=mabs8]o-"`Rq`a`/#Ol
%o#D8;An1#2I76Ku=Qf%Qdp>9Pjfb;\bfObRnm\)/Z6s_\Zkng'q<KCZF'@9%n&3>[>'5dSOX>STKOm?2>qWBp5-m,83'6d:,ZXj?
%#tpfVhp8`<0lsW6e9e+-J=nC,I_mifgZl>N*@G&80:c2HOt(t[KOmo%U[-Dm[(Z^K%oWL#Q+qdb1+2OkhEA6RnQ%SN5Z6^IT<Q8U
%rhD*<$7BUbGBWfr"&8UY':/Fg@J-sRQ>A@Vmo7cP!eRHMq?]fb2XeW>`OK9QhEQ5dJu\bF$-Q,.or-`Z2r8BJ_lc2o#kH*rYFi&;
%aj*<s^)^K^IC&'MoiS8T:G><iM+96Sr+;;Tfpt?qU!6#lV0fBo$Hc!!&^9UCO42t!s1[0C;;^2o\-YdEr;@:pH.g?offra!X=mXn
%Gl^K;If9UbB""gel9FpuCr,8h]A\X1Z4M6`41A?GX$03hlU3i-?5$9XK\o"&*Nu;F,a"MJWQ1iZR\3!7"<PC>SJ<)6h>B%ZSf9qg
%bF_"N*OEFsj6W/d%c.,JXJerBJOcqSGM6lHH]usm(VQ.M(!7fk#j*Sp@9N=&2Y'KBlmQ%CU7Zf\0Yj$*p"l%HK+'to"SLsX[\=6J
%Ni`9V^?foI;?QcYF\%$f?M&Ta-5RNGm/=3$D1M9l0X'mJ[Fq]ogiQ1%TX:EtoVLl85dA*1(4o?sJg%GH$H4(1o!f0Dbia<O2G7uH
%9338=jPlnj=_^](850<<p0.:j"/Ij.(<1ZN%A%<2[TT7V?%iF(`C2Hm-s;OC'3iO8h+#"q&b6FDh2Vr9LlAoLNM':PC_N'S./!`d
%IV58.)mdl)&6=qXXN12&K&F$C)GdMaPlY'YS\D\FqF78p<G;)Y6eMDMW9o6tlLJSak.Mu(KmCKl+PTk/p[QIZ]j.hc)[r.Nr$i<+
%hbK-Sa2_kU+-J)-JM]SEgA^C74pXo,JEd%l4-ja6<;5Zq=30abF86Ng[OQTE598hp4Vspt,T,8(#l;*]o)k4nB"_QgXo\5H#Shuj
%9TU.AqsgjCAIPcMWL`3YD&_D<9>Q(hNQ6!g2OV!j;bIX)hjh$jlsHk7U#:+$la@F>4Y)R*S@l;&5SMVt0KO10H^]Cgn(7h`4aNQ?
%b19cd.-M&ZeeY#JYBGTf%;O&sG'5m@G"BKQl`JK;!/CQp>ec0lGE/g.l>?9=q69si!`fr'G5fc=k%JVcD^W-iJ<g]lm`8^A(dr.l
%AhrkVdOkUP=_*A;9_d:fe3^t!V5p3.9&Sr(ch7BE]hbrAHTS>_a6>Z'cALu>9\Z"2eQ7b'l!N_L0#)q`?#C,KCm[Z!-!9L$8#U2T
%f:28XZVKqTQ0d4KDt/jD%E0ed6`kXJoa^Fe]+no57s*Ri!OZ7!AO'n0K*Wssp@,<#oODZ,k%nCX;;.&a4jm0A&B)B;g&QC5g<52N
%mDZM'1qjge4m*:F1\KY[&kt`qYP0nU+iqZ,6E^L&frKOXa[]13`k(Jd*qc188&<>2F6QNe_bgrhg&96`J+.AP0")/=DdM/$lKltd
%[PjK-,prOtQ<fVp$#$LC]-#2ubcZS57t^c;m^!#_[+0GD^UAP;AadF6h1qpnpO-4H%pGHbX8BHbmG3]2H<8Ybf5&(908%gbZPW3S
%GqH^sX*no50s0q+%q9i,PO@Vkb]'0-,]rWQ9Nrk5c"9CnE\a>D+,&u0fR_!;[9*"+=n'g;YY!DRC3tf`^6q&[Yh@1a?g*/H1G#Sa
%HhYG<fLBu>Y;qc5bAW@0>8jBm.G<GS(f>(5\CEt9emN$l:c*f$[+)^t3^2+F\dYONj+DRRI^Kis4_X$/O0e_oFgKl3*kgB4p@]g&
%'\?]`Q?oVO[Vbo;6o"#Ym"&T!j/md]r2P_Kl9IQg^NMiN7TZDkc^6ocf6..qr`CkT2#@\bIV`X<9.-NBs4[oqYOSY0dcV[bOB\jM
%FPq%Ln@N&^b"XPMfp42]a4FMH-8T=".SKcO?ds=d%^Z<a*m"3LUY]%96&WWlb<MWdEk;2d:qK;-m0Lpb8`-rM-st.rD&2bir78NB
%_0e6Tc$Of>_j\hd(RsX?<o0,oc%karBqVTmH9\ON*d7E1>5hJ?VV[qi>9ifdMr!/j&'G+NW`.T^!,e'sjo._ShR2$kfhHA8"O-_s
%cG!"(ORN/iZR`mg6/t+/(O?2V).VK7<EX^VC)/'DYp)2Ra-cp7'qEUMM!O1VO2Xo-LALW!DXH(X7G<49dp#j]f]"LDf1KfLR>sOJ
%m8)4%jZm[>I'&1@JstL&<I4h#CP.)cpW^#=E>oBM@]ePa1!F]E<h<LZU0&Ak[V<R`;pW_kNVW;-j^DB!p%@b%H;R]<-d.NfX3_^b
%IJ7BTq(9DY`#SGX9Rml[ZS-YdLKcBlPS0.Lp"m1o<2ZCm\tNO*)pkU2D*u/+kM_mBl3&R\\O!>5E;It))0iP)X"_7SoTGrnSOtN+
%N;`j@6bh/4c"*$GEW7>Z\o,o/BT;;_GS^FSrWt`9f=&.\3YPu)@-[^HMGBdJF^G]dRALWBf7:T9J-!(pSpr'e>,Q3*r"BJATH"#6
%EChQX)@aQ`MnbJD:YAXjHdQ6-4W,;OJ\Gs"@Qj.YH@)sC4[.8ZUcRc],NlY9h2X2B0hV[OYB6<1pS._l<os+;[_d-hq%pbWF_Bbu
%D<j8EboM&Dr>35R8/Z`cR/2c*Te1O!;N0D#BM/^LQ-+!k*Mi6IQG$7q?RF3`[En4_e`FEN3iPU:<@VdC;3,UN<3,2f9;Z)e$ML=f
%DXkt3*EbU-n(WEDNOE*Y07!d,mT$9*f(e!g60&$Po<@C9G=K(Ihm7m1Ml$7meI&4I[JVrkC?m/>A(f]R;siC-aIes1-(_%mhD;Q2
%0'!_\!I]GskS8FZ3WmsH$DRX(HdH09AUZ>+c!CYLg"(bkI3\J%X#PV_;H`s@Pfd/ep/5&nLJ]O:^=Z)$e!pWA7d_oLKcH\Wg(gIq
%2EULk"C&-4;('oZ=#KWDDI#2JWCH;/C^D"rAJKm7<n:YuHj$;O>:mmJXfU_@fP9LHMB*q:X_bslYgpBLfZLo:K<8tN?n8!4fP9LH
%_H*Et.R3)VfZL@]*hn'u(UPPoXo8t""PE)ffLn)@k=keT=+tDjaa4s%<aT(LYXS1k12=#.>*cK12R?a,p5E2FHs>>0?r2*'*eG/(
%GX<S,lVZN=qNj6i=&H`_):J:/#.lj=T0!pA-7qOB*@`gJH;rX&4JGD?OmEs^A3\[dKg(u>)5uq[h!B!ogMmPc5,+_>HDLEgV"o)5
%eC^$HpOorF/NrG?[>D;:UV9aT=$h,cJ%\n3Ohrn('`=M?p\*1(!EPSf?(7sUd<te^d6M%V?+:_"'V80"kSW%MBkU&c%IG"dQ%>V:
%.6OB$O;V5goeLah)OT42*>D/I]?9T7;%Vs$fuD.Bbt'6A[,YdX.G';U9&UX6L!7m^RP+80[u_*,@sF`%V369qKgNi,4sEWA0nEqk
%G.11M),Uae-n06HrG&o-@KPp6mWP>$O,Z(H.3sZ6A9YInFq&fk,$\^J,NBBtmlOR*X]h>[Z\H2?&^IFX3&BM@PSF+7>i)h'T3`\M
%FOIbKs.Z/>FN:tIoe`Y+6'#[jGWeoPaYJf6XC'](HC=)MFaKM[c\B.J[BIJ.a0W"&k7aj0r_5PXXDR=`)ahS(!0\;G$QlGt</i\1
%<TElQid5=-irD`W%FAX>+RfY#=N6T5CFemk03;]ld%6ZcWmu(':2ds=mg>>9<W]HPW\*:cYZ5r5mA5]cF`UGNfZorrgoS2#6g`*P
%pZA_D9oJ\5R/LgfV5_Z7"BpXqAH%"=b3nq-p.hX:k*ApnPnD^8I>A7,gE[/<7\!0g'l'k1!?ZOs6<R)c46"]qjYr,/6J9=r7h6A>
%S`kd=',J3/7YEh9]UFK\hP3oUN-Ft^=aY/TX[iA>)PtL@.+?VdjEI+f=f0`pF_7$[lTqDc<]oP2-JMUC%K,V=['^/+f'TRUb&/b9
%P>M!,B'XR=^j?d<f%NbMP])%SHD16loA6<6]u)`9Fng)DB+i@qCi!7Q`d89>RT\<eM,(#&(*X!WCdIFQ6,1L:(M^+T(Ib:YAejM!
%n\BJcb-nBF]hl/S<6eeugSSB1)Kt??H.<,W,*cFTZRf7Ze]L'YWlBFJb%BAn3_3gnR!Fd.Wjf!MW3%]p]i<JDF_s^Mq\qcQEpWu#
%;(C<2ZM.63];MLt;JgRXe'Ug"/]4cmIk,>aR:@#U/ri'"=H32#QE>dCF.c:0fm:^L@SPFnGnA01dOp/S;n]A8`3L>7Cfg62pJJ#k
%??DIOneT$Y)n^EVra%.fmA"L2=Ot.?cU*LkG(&VD`G405Yu\WeB+W8WhfTKGW`NJLW*Lr9]\7dh`f\3>2c;$.K)>:lgY'>^:FlA.
%$/7GDQBjq)dOs%X$YGa5`MBn-o8[I,A`Yt^"#"7AH^6^7T\JT?[Zp.1A?CXcgHNXtZ6&`5/PT/bi%;rZT:(`34Z-Gl^PJU/h8\rg
%HO"q>hdI>JeB=CpCO5):\lX6FD_7"9$51,>+d'3kPl.8@KT:.!0sH+DQ]1p?3dmWd[KCE(PN&J\77^oq:BY"0,Lh0`GcO0C@J![V
%b[N_E=&kos*h<cp-%SQ?IfGLPfY+n']3jk5>cmd1]@qEs>=%@Sefq%Ye)WU)XZ<\(nQ"e]A*Yp&k[eVcl;hXg^%M6m+\Z]AB30nG
%1]`##Op>_90C.E+.;IIrpd\,I#h5YiMEjQ"=%5PG14^T<46ksKqa%HUNqV`_=R>VAi^DAo4PIJ5`=QerD_9]EIBW(LH0p3p0tf[+
%Tg-$H[e1dF%tU0#brlNDh!GB)6uA5tSb'q@H=Yb^efmgRDG3SBkc6bHC5?67$=H/qM=UVeK)^^eZGsW7f=J?d>&E,!-?#D^X"-\^
%%9[Lcbou:$TlrT8;O`pZKkF@5`;6E/=r-Ep=RS;BeooG$crWR$[(=fPZRjG$;#%Zp#N&<W\*<dU`i6C'C$7(@f!E>5D<XSUU-bP`
%BJ7NZc-i&Np^KPT?Q!.OA+ncCIRZmP1G%pJ).*QQI1j/BY6<R5GZRE0)<B+"1N0:#b7U%-e_^3h?Q$8kSTV-7;KtZ&+Z%pPhXGj^
%a>t@0lQtaFTpqn4CEFJ@W)0Eu*i9jT;nYfF>8ij/c6_kDo;-X/%.of^gCUYKSOh]W,m?ISG/rn)HL37AATFr^g--O/^+sG)V_l(X
%i">&=]=HLFil0K`b1\9cBNG&>rR*;V(CJKe:j>faCDY!$`<4ABh\2ro0>3OpW)37(Wr!O0=0Hp;?bJbfG*"4)q1OpJKBbAF>j>dO
%.bW0DFhc#&oVt-NV!rHUmES7<b)o[7ZjV*49[gWJ&X;0;"oDQ:dr`F_d&ab5mal&n6K&ds$9qVi%b>FKO&#41Zf9Orr2RFqKYfMp
%'HU5_8^lJ,]Ra4*]8>!S<p@Kt&LE"#lTO"iEi%ALd&a]0NjlI:inR%'-p6_,fE?Gf42h<HRa6H/m+U_!N!b7tWf&pppO2;`E41O@
%h3VH=7l2X,*pJRIU5nUkYV+)5,f'TMPdEoHa3bje&JYYDlG$rOn"4`k343IpD3!NIWL_I#m,f.k<P8RA#\oMBG5@nug?3$_*PX>W
%2[6]K$Da]#T.TUZ3DgV=huq[8[`&0HB/Yp/<^ZSU74P%&6JAWRB7[<Z*7.EYh5\0]C5t(A6J`6jHCg[hVf.RKHQd6#rTrpeYt5q^
%9rNPM92AuXTbF^ImB9he]4Z.JH6KEfrUI[tNE'sh2kf*+C@<R01A!oiPM!G?[Oi#:@u_hpAXCC3H'ZALA!8`82M'H)_9WuG!ke`M
%KNGe#/;r^n)Kl1RQ"ih(ND,LcVP%M+h:hJRs*imu"Y>l1bc`b&!a96(qJ>Y6A]!,kN^XnV_u\\ImaeiHaqPn-k_8XUB-dpg-L8`o
%0"m@Y2:jm9()WOZ!F8-,4#bReIZU39dBD.pmhckg:<"<FAp3"f4V\j9J?_Z_cqS3/igqQW1;$_<nb[RWX!p,qV+G?K]*)p?*I]W6
%;6QI*A)q/@m+XsnUmY%8p2kDk+8KO_epG4!dcGc=4u0"g[I0m#j(8O$*j!`.-B!Fm6LD;5\b6^A)3Q"agTS>6G4`s+j!gWIXU3jk
%pQiVIA2V_.W#a[(cCVlq_il[SX2<H&+8n+;A(u<6g0OCCdTZc_eS:nL:qK,ursCm0TXM3k[U'ck[^9+E4KPc`2%-JJfodX8<inj&
%$+6N,H$'fj)'3X/Mp>8q4gZ.YX^cKd9=peD0*BIb^t<0TcqUJ+hs\<\%l,D7>0G]7[K0T9Zdh4q.^WdWQ:&>30K*&CF;&C:JHl7/
%#`kjiomtt]gDqX,fc0KuGLcD!BOd7J)HFb(#Bp,A*V_!,g@ae%`MF16S$JC;LpgSs0EHnTCOrR]et''hdRY&V&ST,_nn)[!?"#e=
%HiJf,qoo##>-b.c@m7C$$cfNoJtST0D_9?M(dq3<Y%tZ+3#U;Z5q\_22R[EWA_k4,D/?L$kU+eTOS8/!;22"<Zo_3qXoFR=`QlNS
%J'"fd]TiCgcEYK)TW;b2DCT`-%3&kL[^;9>m_@i6/TgAeRW^Od>5M)UL*iC@WhQrA].X%dGEh%-P'4gE+5=u)Zs/jAr`egVnR\p,
%`[71+DF/3LbOF('APc%R9tBlFJ'1nX&Cl9RD1D5i$o*I@a_IK<:lC7BIq+Em4PKA1dWGL@0C*74O.U7!fkPU.Hua&/)X&NtDJg=u
%]V>nWQF8npp"sf%3bP&\YUoIiK&.+WS#ch*$+7jAqJZ0X_il[])4OLRQH(!pHiG\Tlu(]lLan?`X-%9df/l2Xqeu9YKA(@Pp,$F^
%/[t&7bLM*c]eT@?6l!_AeOVWm()brs7gU4g\Tr$H)q+.u?2OQN05[lJ%$DJ^2OQ,;-I?Z&3r4p5+@.dCB#X3;CMjT[ca3Y?qd%U_
%&MPu.$WIdcLW"K2+7i?]-St2!)eYah4'E;nEqOT<mJPNH:)L#Y,Me#*G*RE@`]qP+/9uXb_q]8olM6(XOE[:@8oD4oH.pn]ZllEB
%h4;5M;RY\\?Q.@nmX7@geo.Mei:sEg=!(0SRLBD#$/P&4F-oFV&uZ]8b#CU)RI%H<\$+E."?`$W%k*H4-3N(Wm]Es&VD-*\BM$t)
%FnO4*]/OV3qmql+mCCNY&f@+>#.f]Gp7\7Bku!+E9%sob/\NUBeoEL7d^hXbI7/'k1)f@+H;*uYN/kat_ilOO;9XL_F*"sJnQPe"
%q-bjnNda=:Z,p[PRo%l01JFT6):Xtm;HI;5/T%D'M0B;CH!#:[]alTQ9i_APK\B1uXe/.D1-F:]YUq1"Pk+>"7f=!<Vm29]292E4
%BHWd@]AmLj7u\]<;]\u]mcW_fDgLb%\_I,.5,L"jR1*%.C(5be5DpF+GWk2Ms/Ik'G4+>Y]+oaNVB'$M,6n&+a%ZWC,7aV57GZF>
%m2ZM=<f+6KL8&nK\(Z816EXF;eal0(2TY;(R]N.C]V^7<,ug4m;i#f9D#u2tVT+8&5B;IM"0@d@=h"6c#(_Z'pB,B;ILQr63u,/G
%p@'[4a0,-G>s@#P;;!iUgOfU%AropsC_^dG.CH%kK=5^CZ.iF9X,i<,<D?][\]t?6:R5inmd+BT]DH`Op9:[P>DeJl3dY6Wok`\'
%,%!d.J3km<GgKMq\u8T:#CEVong@YsS.mi?g3!:t0!nPKOBP$!kpY;AP4Jc$9<q$>RPd_)l,J;K>\f3<QAqD$C5kKJJ4cuDnY#?3
%nKk=rZYg%kT7t9U6cJ`m[sD>?oZ5Yhjt8peM9(,sLB`PT3aUD0^]]l(KEL3-+K&%GW_a@'Bf-&81jtCErMWYc*$'Tfds#^VQ4TF7
%OR5JB1bc$"i\>"q)O(>V"6"/p,9fS_W61s$Rd^hkIN9)k]t);6`C-BaD/1_1dX,K5p"X$_Mkr<`dBKkHW7.$-CJYf_(eBE@EXIr4
%U.mlr(MZ(rq^+(9Ap1,QMi<Cje*Y#`HO>iX>(c$<2npe%]-I8J;?bR(#6rWJ+@dhaK;]0VjI-ttqYha0<c;-ja%/S:osTQr=\=:I
%2Va)/SY"[U6@*]hIS?gg=#DC]#RA6<5u&T-<Nq=Xe=%!\g-/#_B@`o/G6BCU[o7'47`5uJY4FA`I+U#tf#q((2CQTN#K#jRVi[8i
%^ablfCFVI1qK6nEdr(W?h]RK-f<*9-?WW,FRnAOl.#HgKYrbf>4R<um/\OFOlG<W*l1RSA+n?@)";GmM`e2!DikmC*DYmMSV%$GF
%ch:[<DieK=7ILX=]g5?=3IbWCaq;LAoK:2DUt,gY$)fT,e9K@7-S]'X$MLfeObRV0fNk@EH@o=(inHb)N"in4E&fdF]SGd@?6K@2
%(u[`k^6)?MHkgK"._2FrK>,Yd@Wcb(nK>kCT]5fWc#qKZ-Q.Q8D,=B`9>mk-HVWZ(l9YUUiH^S2P`68gPu"A:,p'Gl3^QkoXk3<I
%\27$%]Id%7`Ln+We)t206G!MkD5AVn7>eSH9>X])MiS]EY;]VlOf=usSPT\7*gD'd*j]-`eA"<O<OYct@bWu#V>t@Zr3kq<pfRJg
%H'YHr3BfD6DC7G66FI(q(Jk40WUZYM:BJI@luW16#uh#F:;ebhJr3h`ftTjS]6`[3YE8F]%A6q28qV/?E$/HDa=0NkMDbL#>Z9ZK
%hrbhZI>`=L$40[;^YLQOF\\$%6daGm7jtq@c:E#f+&Eau(s!Np3JGs$JMmOo>Z9ZKho?Seg)4NTP$*!j14'b&eYVpK1d>3c)AF>H
%<Y7c#Mr[_3,$upbfid6HXks?:Plg-;a:V=a6m3\p6&e1f^++d:;Bunb=C6ZOX?mM^C)'$6[7Cb70='+P)&2!oW(D#_KIoKG7qtk0
%d.XS%Udug>Ye!4[;1g'gjVaekC=+*$I8M[MP#2;iUn/]!8GNmPJ07?>#(>AJKG>Xf#RW'.P@YOsW(R[g$&>lakTNm,#Z5sXKT[TN
%#YYOj1t$sWK;RmUb.h[[aLVTr!ZH)l;,+l1GTd->#Xo%)KM^eS6`gU\G2^K,#$SbbDh/F.7)4p]LdaptIF.NM=/aW$`/?1Bd+9\T
%&CO/R;&!sd'I`QL3irY7OVgW5K,c&r9,%GZ*7YnuI1mE#%tZl?8"n+'D,H*U&OlX&e553L=02\SV&2b<K,PnEX([]XjIjJbm8"pZ
%eKBh_'N3k6Q<OVd/V5+f2l)0P&(t\TL`XN#pmpIO$!VumO49i@T^?fJUhW_NPa)rm*T\%\,*IP[H37>!nW9["K&BB6K[WLe+`J_E
%_N>Zl(c;1P2P_*6hII3%5%gjK@A$U+U+"kP3)JV.FBT'H4#)gl#<>,n(FTFi3N=gtq^+A2('K\mL-iAEdR$KY;RFtlJf5"ZPY!Ak
%E%)%?n"?Nhfb0!dN"BYWB`!u!@3nGh"=4aO#RW/:Zj8r3V&PRbJVSW\&k&'q+<:u5KTn,e#Y8u4A'js16;f*85",naN^odsLrr+"
%PoC9%H&#)$%`A@`5kpo"#UruP+WdUKLI'Oqj$W)si_\3&i-&.)(^XB!+H"k^j!+mn'MdpYFCu#WcU!JN1'L;75`If5b.\/lXTQD3
%W1VH$W3Rg>Tn'Fd'@^.>ThJVnJj27,:+%p=J[/:_aiEn$(5'%[#nL'f1d"Su@<eHd6:gDQ6rCB93>?\Y=0"T..0e5j+@euu&qti]
%#;l^6T-GU]J`'I+:[!&Q=9tm&MRKMoW1gRcY$(p:KO>oI"On,0>G@4?jIjJbm8J\^Fp2d;9B8"AmU)dW7"._p?8()%M1q&B@Ygal
%6ZQ&X&\_-FRf.J")J?2C9<'BH,]!Vnq+**%(q&`dHk&[^+NVmg$++6"KohO.#bkisC/NUq[Sd-Xr#>qf5trJB'elF.Yu"lYorTrH
%r<M>gE'bjJ?6Q+e(nrG2cl,d4&](:B6No0(=p?j8KWUmj+/hJ^;;:j-d-;.dJ`7!CA;Q!OWXsh[Xs'nql3L=fr_Rp"K8Q<K;",/I
%,U99"J(4(l+]?\i_R!E2'i@mPU^8tW<%2L=W+Ccm;Y6U`(e601RR"_jd#\dfTZ!erHZNkT:NIX=L6bN,#t]kC&1KW=7H,q9-,ZYY
%(^D?Q9d"Hk0Vfqu:gqlHXYE^G$h9Vm6:kdJe6CBNU<#W7NQ>'f0M,uX!6.mZTI,c),msH5%8)T5l?ks0dY-3>%9sW*aF!)@_?`O]
%+^dr.5mqD,La;eth:B"2YoaI_50QsJNY=fR&.S/#%Q]QkIQcLXq(0DcM'0\<koq9FVMHDs-+QQFKs0RDF=>/VlTn5f@4Q$47r"a9
%W9nYNUhl>L74K.'8%Jsk%07$n-V6ae.Qf#FQ0?"K3$%&_;F;"4dL!>.?rZgbi(1s@]ZEPQ5%hIJ0[O'^-k]>\8'=e!3$ttRArNJ%
%K9SX<P:2(d0k`8@qBdsSQ)-R)"iBFn'a:9K!bCR&>"DIY,fsT]9Fc`r5u*"s/YQhm:LYPj(mY%kChP0=fK]ebfKc0%8@'_=83KNs
%&ldg?R4KA9EV+QR'1ga_)Y0"o-o#K6*$-PiV+ZpP_XGPZJZ'jtCj@CB7<U.S-&n2Z^d*WEO@p-:5r?LnEhUCLlsk9VTC\=Kqcc_H
%Bh8^3lYJ/09A1g;OQM`pOa*$/dSo_e1tI\t:2:b]f>l0n)A)!;&CQ[VF;U80-Xdjb=Y.O)$4%rG-PDSiOs'<j;F>V"[[P0%!=fMi
%8I^J0"U<XN$5s>Q^9rYAZ':jU+*Bu784^'YU.@@[$m__b9TrRnJ:UN1e:8rKJ<18JW5G:pHYZ.^/(Qru#UPlf&jecR#[&Nh+ZC]G
%c!`%b#)8/6"p?K.5V<\$oRiTNm@YmZAS:^,%?VhIdThq`P"qGIW@8#"'UBYF+OgNO+NbEAU]W460IZhT)Nqpo23@f'8`kh^,aTd4
%S<MHaR?F[aYZ(T)6VC;Z,#!PR2NiXrK;rj,Ta<9HBC6!FR35CEc(Be9jeOVmQr5V4@&X/26;:8YU0IerFJ)&C#%c[r6h3+>##ZIF
%"8NKObnl0[_]h,%@H=Kb)E#;qW!R3(PUf!i7p=8J:c?S0pfC&=DV;Mp8un"r%JCi9U2r+c+P@BY,/k``,[t;b)4TIM]Bs=*>oLFa
%M&[]#9/P]S2(11mqt7<h1H,)nq$t'_UkjSp3<N-S=U^A4`@.6eCij>!K@<*nLp@GNU4F!n(c6XS)j7F^2j*IRk=CFD;EH_"8J]B%
%'r+`sZb`1P#bR;#_a+#Ig&tr.5`J(eT1"IqC_@aZG8M@AM$Rh<5SR?:aWVHF?d79f<"+HC5n/Wj"UO?`$T\^=4pQn@CuS<f47kUt
%,!srs6sH*KE_+3k=0jdh#R3%L5Y`Kn,mjZE%VcFK4pB"_fd3]t#5%`(Vu+$<_<lgFSFYY\Tq"=NMEHgX+rM'.P-ln5SW)oLQ#^$q
%q9kCg5_4TlTHTti$T1D%]?`&6Ur3]\0^XF_9TBCT*%F4L>,2r0R';joN='VIe-%d_aB$(f:T/s[UUG*cO`EB/^q>G;,!.!5Z`$-O
%D:'DeP)3S0]86_/83MTq5f-UL&<PtG`i/?QK4t*NK-12HSkP=R8M1_h&h_UiXA#!RqBk33+I!!hJV'jd+e$ab"\)5DRNc<^&>.Vd
%PsgX#.-FKZ,3P[X+u'bI,_Ha>0T^Sb3IujeTHPH"6&eb!pBK"jNWqcV"?i/$&PDjuJ4R:C/TNXU.nQ6ZJ:UN1j9-Z2!CJuC(.sP>
%^,8F'j.HBn+K3CUM43Ud.SsY^Zq$p),+.G2U&bHrcQFTsn0JDB8IfKoqWduGUlqRqq>.1p6FhttIND!1O1)G[6>?otgZi3D_\/`c
%,\rOnanhO21sg-O>Z[bf+PME\a@C9t@at,;fgj2%)'R'/)'R'B$0<]o:h6=H(FcESQ/#DFMLfksO:t1[$5rsQ\PQecpGkQ<H4->h
%0neSL4VCUr&4JVe@Zdu(;b:jQ5VNau#;q(^'L\F867m9rFo=?b;K</#1,jm@R6`S@Ei'^&1/c+^b?@=o-F`![(e1,&/V/R(;+O2l
%cs]oI9lOcp$\'?RUskGh.RZo0ANh$^OL0m=P24QY*!iHpR`'d26I@9TKL]]1CAX4ad-R(WJ]s57Jc(X,c8,Pk5"]jXZjL0^DT/Fh
%8B1rqJV:5"+eXo)2+E"d,:"SFn0nu;3ZdN1+Z5"K/Kk;*aBF:uUpgs[(rushC'gUdLk^:D0!lJ'I>e_a<McNRZ\_sN[cW4a[fc>F
%:O?j\b%YI\a@Af3=Y';_HFql'g1d(bL0[``/<I.`$Mcpr8dsGI1GTBcjHf?m08,Y8*XSYo1I,KGUkYD)Cc/a4q)JpWOr>M&8eBF%
%(fV>oI;96cD(.Yi67Ri9O\ee-"%=h7CER,`@%,e9!K<e>TLMK*&qt^!NCjW5^,Lfm[UKa-L!Z"9,9b/`"%">,>0'de<"iJ,O)\!Y
%e-LUQ+\2f8&:`'uXW]O'V=;\6W?SW;692^f'R;*DJS^U'Bj(lJ0TK=g)BiZb'_2Db.PYW6hAh^.ME-b/6;(pMKMlt2+L4gA6`s%i
%RaaZQN.[:h7S($%KQJ=@'a@sm#F9k)Za4h1:VA7]7o+&G[aS:[g[S5E,*64*XK,0T'=#DPNm98#SWu/3k.prerYk3]S3g\>!(/XW
%KD^@r?[l9;]r*BK(W54USf%VjbmkH`3$SN.4/LEu*mV\`H5tE?.9iI00;qa)6/+>l+j%DW'R;FGNoV(6MBlS&`^,M34%7TQ*rb4c
%3Z[8q;G.-"nJE=o@8QYFi?>bFKEmZLL'LUh693'r'Zi>V+_<$.c0aIdN2+ujNKCFl$Mcpr8dsE;LPKL8i_lSkiHM*C!)t.maM^XW
%q)We9@aF8R5WG=q#\?@+)Ua`d1`03j3]Jt$V`1"X_rj^a)$W+A%M[#EK-N-p$7CZnS/J*cE0)9>4FpD?+@ZeE<Sp3!V"N_BAAmst
%dUkcn;LhHY6&WiG7FJ7YcK%68SE(Lifb-]BG`3*q0IZg^fT<1@@KYjK@fo:YTq#BnMDUjaOK=YLB(^*k`mO+F7S)2FKm]Nt,mJ4Y
%_aAKkE@K=Ep`2@N&/@dPQ@kA:13GA&Pb-ibJIE'N;b/JP.)[>jkV+F^(`o#LF03QrS&?r38F*k]r;V4gGo_Gb1Ek#FM'<6R3Mbs$
%.k1EXfaXK$VdJoBX=,e'_@p%--A8&-TP6VJa+0E"6[%V/d#\Pi+\AaA+os&KV!2D?kr]]r^ebZ^!0AM"&5;:Qr'AZ<L.J:+6t[9/
%"d(8Jd[ZaSP&FM*.67Wr<*hD;J^?0.!>(j<68T=L!e[B=9qc8`9n>DD)DYGBKTqo:&oZ2bH;:?#`f'UH0N800!5T43#UNFmqOh>E
%BC`7S)XWje>0k\;m=oMSl/k^]"G$RZ[<?.K.=.Ql950E09>4Y";1m0">s_6sR"/"s9.3+$6-HH=QDp/N&$cU/5GM7E8;dgC;12h;
%TLM63Um<1,N.Gql&-F%;JV@b_6j3chho(2T72&Hd7ko"-oGpR9m6EKhR0gFfG:%^60q,U.#)^`ZS3Ufs7B:r*%VcFKrZjP3[);)m
%>m*o8nV!!'(C6`P6Y\%&OKFaj`2>=Dr!m09a:_;T-?LC0T]^B4Up:K#ag)1WNnOdO0nP"Z'LQ=XfT<.5G3DO,Ur,JN5qiGX-Ck^#
%$A5Kga$m#p^lp=,^u)5`0Eebe5SUUC"pQP8PYN\iim8MJV["pV_D<m%7RC'^d.C%CBN9i56q)b]8)8i[g-O+eM#fWfCFGG^G3D[0
%'V>W@"ORuQ6U6J<W%mN5PN^B1%\j+`&Om!4-\Sk25SU%3P!d'?I&4%l:5sgDHk6B&4Fr3"63mo,RQa53.dGBO.#Gb(W1+>q1Cutu
%L=B&&+^:r388uL4qAeQ!;H"-Dnd.0%0kgH,Co"WPSB7c:>gCb(UHg=;6rAnOCdc6s_Qg6g%W0,Ao:Q4O(^:2T8;GV(C;'u_Xm+2t
%W/&aYW1#,&,629q#38mgTi=q@TeA-^%L5"N!O[WU<Bpj"W%mN5PL.[^%RU=5&V^M4-A8b+5SSnhP!cd7I&3nh:5sgDHk6B&4Fr3"
%63mo,RQa53.d><N.#616.%1]F4"/h*0I2E_%J`Ur8"q448ot3H"ORuQ6U2e"2$SK$U>r+T0@/4Dc>#<,k(D9p7@3=4q]H$i!XhlT
%@7Um9)R.b\cM"eSgQBM3\QRTaM+Ab#9,-rZ*44q;m?2_l?0aNc+,(:Vamo`].C'LQ.>H>KXoVTUlTfcVK8u`s8@T:cFJK*]H<oF]
%6;'D)*gI>b&bQf(>%Sq8C(-)QM@IMPapuD23%>5LKTn&ca9Qb8U=WFQ*L'.`LpZ?RUq7@[AA6Wi6M1OPJQ*m`l^a'3()K2uWE^![
%90Q/#Q,_YKJ8JF&0nm]6.)[>j.+.AWj]b)f>nS)R0VZ`n<[*4.$R(b48.-^pnC1>P4c+1J2lRAj:I:/%Zljk%k@7J)\I3jS_2-B+
%<J_""+VaSu&4-g6r3Y#Y%rrZf$sH'7OAJJ:8eA\fnB4q\8f.G]6BQL1jWm/rBd&An'Z0qT/BF]B0"MVSk\*d;UhklS5*2NT]sc6!
%+iQ&p15\KZCm:(sU.@[LS,tQIYeX3g?$%F5dGl?=8@^5(`$78jdHgXOCe1*i@Nu4KF?.N9KV[0c&>^gR6hq'o[EM'H@N7L*C4q6j
%5tFL\d%T(a0f$,c"^dut7#.P'6pq/UYa)(N$hZ$Se2eBca`28YM(&S)"@G'[K*&`X?Uf`M\`cNtM<JfBOr+1&AKcrJ'Z1!k/'+SV
%/ijX*k\a3AUhkT[5*2NT]sc7,+b_QF1($G/E0QIjWCVoT_Gj?Aoa2=GPmbmu3-lR_'I$VQ&<F's-$ik3NX_t-8SgeO87D[T,XP[F
%+c<Q>ae<e[[T_[b1GOnB#;nijQ71f=3G?fUq\U8Uk+Xf05X^s6MF9iY,)WZ?LnStqSm(/`BODfB:1Am@/('H=e=].3l'IO+'e['1
%2'P)OPpFA"(0QHf0#bnfdM506!Z)jpUZcQV,,@>P;E.LJ$GEIc@3J&lH8:@Fibk!B'V\,`=d08.XB\%8X`2+?*!^\O(aD;V.b_gN
%?pKQTf<59Dl<=l<;'(n95S8j7elR[%,Xl`%>CioB\*-MEUWYr_OKp/>q+)!!o\)LKL6f@5bpX$Xb>CMKU`q8A8lD=:\eUTII>b@]
%EJt><;i"\869LE`'"tH/Z#SUKOL2X?/TQ;8>OG;Gm`OWC+Bi@YLiO2DTkHll;VeqE]M.QFa?-?h=\#25ODkpkUa%a10W<\AF>+h;
%[idmc6_PdK7mNlm":W6tP![9J4JfIiiA$?2Jsnr8.U^=e@ZZ(91d*)]lZp7+i^7bCYH,2>H:*tlIP)H:$gRV=moDOFcsL^`a5PK^
%Z>%[Hb5@\<7:#nph?)'&#pPfgfL-o<a?1mFoi$ufHZ1(-@dl*EB0`i0";%ChL&q^*'MU'(oNmIi(C)gKKWCah*N2hf6.Ip!TTqZd
%'32=/6d'(SDh&&!nf*(>+rqP823/6+J`>f7QQU$='Om1Ej;o$58N^ZLO7@aH=?)a<1E`VI!C?O@KM\Hh8#bXuI5-aG"uUs`V*H1?
%8O<&9alc2ceNA)>26la?C1_,,r;;YF)h3a^*-l3$%pm.=qDP8Y!i63W1o(7g#IV;>J#_JDD6/3&[j[@>d0^LOPh[)W.*POFWSl0B
%0i"5Xe-$DeJqeB?7L]Q%haE#rnE<JD^Wm?AO.Erbc4;M5nb4HOOc`]3keJ#`?4LuWWV23-Yt,@F%gr:]*jfh*GX0M(*6l>;&?-WM
%6^`q0:lHVpWS5aN0ofQE21`hJ^lXPo+TJ+uF#9\m*PBLoQan&8Z*VonrHBcon^f2)Oc<E,i&hFDMa8s]:n;"86t27';"!X?8@:Lg
%O&`@P0hYsE\lO[gU9qp:5QQn>8YqI(MfIb9TI,b>,mrm%N>`5*^53#qeBsbaEh+:U#!7/61n^,_n9Yr,.#(dci'7\b0*f#j;1##K
%Mt$eX#6fSi%pGT84J9!6GX2'4LmEerU7=\V.(YP?<9NJ](aj22C'"]C5sm\2K*Ht.cgd*sF7^hp>N^dk^<U'bo0Z/ar&G+$jJ*GM
%L-lBFQU+@h<M!kp7;@p1;"*^`82WDPO9Mb*1TOi$]G?2$U5Hs(Lf,0<@muF7CSShc5tW8.8JInM(r[ThHkQijOeXR,brS(rgi`>E
%T-%5p_s^`5UDR0gKD.']/d=?+\n\E^'8s[,\H`:f&e%s!@kaR-Kj[06$]%i7!2=:!=t$P9WDqj?_&+P;%Vc%O=$]27;M,1+WmC3s
%Wc7SX.Tl+XPdo#q!"EV<1B&<u2)<V&)ri(G8j!6e"AsN?&<#TlpRpGC4P[-6C#-/;AnEH'0J-1j`NQgib!L*+:p,BRMK0T5Tr(;^
%>'mk;X!r5mZBsI7g'J?gV>qbZBgIG=eZSPa!Esf%oVc"l7@(CgV(u/'.$oK%C2.:Z[5WofJY=<F!>1p=+<!g;JO.\mQI+%nKLaif
%1dl>=:p'j'MK0;&JXR4jdb5Ara$;$Z@R-/,5R7Tu<+/Vr]e-&H6<ck>Jh"(=5tHkU!MNHo;Q-LTV:Jp#49gOp,R+AkJNtb!K(+DU
%qQ?'t9%h01>hbCd%%8YEm-=.VLEI.a:t/31$,mXbPUan:*qQt@JbQqG7F)AL!g\L+/lI;jK9flZ0XV5i+/4E3N^fRl:bIP,MTQ5L
%!p(0>VI^T*&d.*0&-JY#!CAcmU'cOQDh:<U0]L6RAr+3sk)gbn72/`9P!c@*I&/59rkq&_*TRJT?U^H7,R612I=DkN;NtU76qr;?
%BAnJ>.Zadh64/OBg-VZ?Q(^]&0\fE45_LL=Ldk9=?r6JU34()$Dkb$5T19Va&.qLM<`C4sP[;F2C,GQ/#K#LHV\%Jn%-^:k.L`n;
%*>htTJM0mYTYjn9@1;4;8YE#_+>Qc@Tkmo.TfXt?4pNebatu?j#?k)8;"[Or8<$*O)79tEGuR07;P=eA2&;9`-&,;habKfU5WTqH
%'I$nY&<PiO2$SJY&fsrV@<b2R6c&po&OO$S&h(mRTS?VY\SBBD0#^*N*Q3IV;h,F>[%P:/l>q2`a[Z1G`=I8X.O9VE9LM`u+Z0sG
%aAscM&fhepVir)Dj\%Gk,;gl(B_upkBE\Y/6j86-B:4E]OR"?HU@<cmLuJh3P7eA])8kBQ:]d@2"/KHM7JR0OhaE2uE5\)?#n`4g
%]d,lX$7IDY+NHMPV36E?S]QHP36<l\PcpfU5fO#X)"dbuCe-jIYn>LtM%,\C#j'c4TI@[-)CdW*WYHPc'Ed<<&-JY#!CAcoJdR.1
%cf(Q$*V!bV7`=Ui4qU>>;R@0L8.K2Mns0'3KEh]:4?uXbng+VD8IfJDqEBYSq0<b3J`K;2?gE(,VW=p&Y:6`067A1(!_#\8jA<;d
%>H.)DkB&?@jPUJQqj+6N!XW's6TuXu/UD:2>X&.Y$9Sll"VN6*1('^SD$^bB),`i`#$e"A6g6=c3eEecj=4P.-e+eVYNn8SU_436
%B7Y^sU5VDeQWjM[=bap]m07#kNCUpJEM?u?'1ga_)Y0"1[HP#HCCMldcl+<s5Y78?#YE8e+;AEY$e63cPU_a8*oj1BW!O/#"U`A)
%(?FrWHtS46h14jn%8]Dk&.%Ai6_LAKckIm45V+@&M"i]"PRM:.$!T\_5*DZV]s_j]TufF!JRfTi11_es1@"q&J<LnWFE!L]?DNX%
%e.L15,$+e43hZ`uH<oF],3?"iT%P3-A<'3gF"S=YE_[MTM(-B+"BNI%EM?u?'1gagKmY.9/UD9_<!+mi#(*sn:R_bTHWnjC+G&#T
%MRJI"W%flX7%1jD^L-4fOHDNbPRT!2%1t#,"$%jYlh]]o,:0OP%A\H3%4$a_EZuAL&l+TW<XQ9u]o"UUS@C\[#pa<j%JbYs[-4oG
%N/a(9_OF*oi,W@`7+;c9O`#afE`2DVgm+QFj61Io'.DTYd#a:;TL,jHQ][Cc=1FEm*urQ/OYMq2aZtu-1,:%&KkO.c`K>#%GWSG&
%,WpoM3)ZLY]rKCeTt)[9M4BXp7V8S1blF!=Al)u($AgTZKdSU8mKPD&J8>Lc9frUaPj!8g3\WC-ARHYF@pgE:,a;6K5`ofE*:ct2
%Q+U+e)<8Zs5trJ1.qm!OjIerFm:0t.`"h,s_FKq;/L7-X:p_O;TS@7s9JpTsCrA;iN?FN02+4)KO5us%YNo,'gbY&*Ur@\eaC`UJ
%C&Qo&8X9Qo;@#[S7t=,c8IMLGR;1#^1T!0lZQgXbOf/jiY!aERW'Q&%eSa*[!Lg>mIcPiPP"?f.aW5pU`?ZlXU?&9kCC&7+d#c`_
%#ucG;%E'ChT]fTQBZ<[7Om>k7,_SE>E<M(#PGUS`8uXXSL%H3P'g[h@E[;(WJf6K`<./Zma]HFsOmbS--A=^H3<DKm8O>s7a\fBE
%LlQK%O44Gd,pC>5;NQ<'nuWW`>G^i1o;Egq5p2UQ!^q'#6QcQ/<19jSHAnVVTLMJ_&qtEnN>`5*^:/gWWa^n-o:R@m5p2=H!^g]o
%;Fj'p;_qDZO)`O.e-H@ZJrgG[+TJ+u>>&Y,9(A&(5t<8Rcs$#dJ4M5*$Da;Y9(Q"QO)\,2e-IL)TTh(-;1h0bpU61-9Pb;$%;g[7
%#Da]2!0Kg7(=Fcie[u==@iSJO2+#HN.&6r&BJ?C]eeX^4:ju+!Td4:J:g5<b!0KFk(6N'&.*4k"H]4\J+@Sh(!i9QrN8b@ol=<g=
%P"ar&r&U^>MO6/?>,+uK+pH';!OS5%:aF.NDUI'I?dlepS)[%dU'W-SMDjuiN]ITkIQcN:>XSW<B(69<9_Eu#9GemM#LYqj6)L*-
%^mc02Q\-2"j[p68JJp?^<.0c9bs]LB0oMsYA#`<m71ui$%]"d]K1mR)Ok@H7`WjL57(,K,*m$^'6.s<23'YTP(7Er'a6.K?F8akm
%\^l+H3S>dU=TMBq&"nXsK3U8MZ+8eTf%FkPgMn\t,/TQeKHi(I0W<^?5VXCX+sB*^nkbItI6s)4&4H?p@`U:F<-&Y-O+GXi`/'L&
%0o/:s:gd,lXX-jp'#J]2:CT&3-_slG;5=^V"`b$/V7?lnO+C7cL_15r"<eau;2%<dpU8FJ"Lc*^*\)3Q:C)dX+f#VkKcG^r2&DtU
%0b>7T(m3`I"CdK)KHHG+CPA"1K]nrH;a3tL$#*F*'^5].JK0;OBeDaJ@j%$F@RPku5mR^!<+/Vr]e)&UJLrR>LPhVi'9]_Q+OUK+
%6]OI0RYt#?(^M-JN!O\AK4lM6"U7EQ=sBde+["rXd#aH>.]lhS;5=^V"`b$/V7?lnO+C7cL_15r!%An$;2%<dpU8FJ"Lc*.T!lFF
%T9*Xg7$0Z`)KH7,eQddua$;*l`/"[tJe3sLTYdAe>?dn&,c'U&*\)3E:T\b#9GA?IC_9eSV35):d^NZ70IRMFNW:LG85]@PchE1@
%WAb6:Gq0>TaXn[,q[peh):U@<-<Hab;uRV)-%d$H@7h*JOVUn5<)$;0r`,lQa$$?Xe*]*NA%qaI)O"AlC'd>`FID2DW?tuCI:%0b
%@G8D,)P*:b+QNk@dZG;e(mKH;HJ]gJA_1D%=lfR29kQZAGCREjogj4KJTMZ$'XMA6_iu'UAa4\noujqDX_Th#3(o^]$`%Tq69^Qb
%(;704PCgR8gmd;5mRec[_\G]h_?;T#-8eJs_,Vi>Pb-p.,H27fXoomgWBl;Gf6=[Mff,bJgf8HT)6Q4c'./SS1Q?s"28k[B[tp)b
%<"d[d.9iO.&*0ZXYO,P0aS]8D&T_&(M4(M3QjseHS=-`<Ym+!lJ;`b2#7X7a&9nh>A>BD)HTg9>6"f,?*V3@[0P7isl"l_8B$E.9
%VUc;OVViX^`_f<(,G].469^L+(;7.pXW_b)YsurGW?c)e!m-+_+QgqEL<2<_as:5fa#N9RC4q6j5tFL\d%T(aSLnq!:?aKgV2gr-
%MV:*9-An3INIg=O`0+iELlZOT'%@19>G.2kjJYMNm9=AI4C"s"ZWOJ%b]O*;3AFCTSOj;)Cp91]\;62c<"d[d.9iO.O5us&YH?*]
%pda#=Fj%LiX+7@t)@I:o*D-m.LhQ.Y,-fdR7@peflNXQc9UiF`QRcsPDo;o1=/$iYWBl5Edk>?=R[)6bR+BaFR/BScBTbUpaTNh5
%&e9`;ZpYlOUZcQV,,@>P;E.LJ$GEIc@3J8hoOP$ULq@.+,!cnL-rr2j%8.e-8<ug18WJG88W47S>SV,80ef7gYNsek+^(6:7cZNA
%(m,+2U_shCA6't2oF#I]9bV/K**j%hKTn&ca@C9tU=])n2De4)2^?9RQU`5FOG]iI9rpl;OtSSU,Y__Mitr^XV@^9NKm4jJ-$ii7
%)u'C3lG*=Rhu2eHro66@pm6L*a$9S&:]KhB^GkM/Y^cT4?X+\&rAPhua8`;.FJf.^J)5Rfig-tVd@CK+ffN1=C@gZTn/QJW(=Q?>
%Nn[i\I5hAC548fC%0X4QqV9]OTO8^ps7H6%[NgdDo<.ai2l.j_YS@lCJK2)][FHD"Ip=M-r@!$Fi[UX_UQtmc`L$)Vqd[@po.Q15
%<Bm:2hN,H`*GL5_G-eN@#f=&:bo"FRg?QK>L9<+j,G]^D69p]d)M>b_UbBV6s72c*1eW*VSq=Q:QdREb-L8;qO@i2gs"'X6U4h=h
%dDJlXA1<;&V<1tGiP=4@`>9IbNf`fX$3<^.C(0rfG>!?u,sGi%*Gh(^Tip\dXDP5^@]`$<.>A#S?mgi0!p'.C"C$;ocMdb?meI_^
%5.AXL6)6t@fb0!d+@e#0D=ndIJ(1C<D6\Ob>Nf"<o@@R.k!_X>+Ru+tnPBM%G]\VB4CdRJ\ZO&D#2\V5HL?V0+lu?2!g4PQ)"dd7
%cWL#iT!;M-S&;)=BqA\`7711MCoK\[Tb)87kTig[)*@6Xl^j\&F+%mS7rj9gV#l@$,R612I=K^%G23fXhnkJHZ.nEKb/rk[TC-L@
%cPRf7G+s425Ru*Mf]k89Xe54`ktg?^SOh#i)&#Qn$6&Jt*4-QieRtu_Z%'crktXV>r/BHdhP^:1&Q0,PNJBjA`M4Z*jVb[rcb7Qe
%)7s^Ka,urJJV:5"+eXo)2+E"Dm5(&WM.c0UXfP0E`brY)aj1ftCoK\[Tb)87kTig[)7rn\^OpgimJ>Wl0d/PDfi!BUJ3km<)"miE
%ce)s0g#h]G]C+I^pfs6GH-b]P/I+!RNHV%@/3o4+&,=:G<i.sZ3f?1]AXYiEANGL76KG1\'2ZbINBuIoR/(*Ea6`S+NmO`Dk<4s,
%#@87dK[biHnQ_.qSf[IQa6^CDNCd!rkl0fij:ieF73Neq6&e1f?i?AV0DV!kZ\bu`n@W%fDgi('6J50?^A70$!&Zl#C*u2UpXJsh
%qN/8NO.m/Q6J5+b69^Qb(5''1jWQ/'/_74L%p>=gb]oWL+hRPS<jehB-D\IQ'MenRn_!s#oT1)Z<oo,'r&g;r5@fG302Vu\E`?Pq
%=!"[@=8cmE2/Kh,kX/r#h(s8'a:qN"'#dd8Ed2cKQOd5ep=jCbI`N#"([$R4ORa\)!D*c9%/TtGLFiH\*\pZ2hduoFp%u*g&1`tS
%'dt+2:rBW7G)D(!'SDh-\D-Q:R\)<$fh?r`4A^Y?K<DuR&Y#-5A$)pFH,Sk0o@gAFLg?<GjTm3/Th[G9$'N2i6b`DQh;%G".M(=9
%lBB=%'#&sPJ0Y@W7XaqAX+0LYZ2't@>bP#Sc!-r`*^q;U+Ru.unOs5!G]JJ@4C[pYH0sd\#+!RCn)m0#ORa\)!D*c9%/TtG7na!J
%qE/P#lP)VISI;'&ZM\SX6hV$6FX0h/*97qQi2Zmcba(#[!*\e!\3pe$OqUC]$5ru/*7Ynu9`a=)h>72`>qdijJF7@J[H@N6UlH]-
%O-:RCJp\kp(;'Gm-3*^er,Xp4,risP,^]b)!JMNC)"ddO!OV3c=/du=$(tk9>oG/BQ5,U!pkM[hA>&EOa>#<_2[.PGZXF8In+:MP
%;ZI+LHj,4S+@e9nI5QQ??i'i7`BWKF"jg.2O(h5f,`k'M-p17FL^We(!'777QNP=D1-'jj.:8e\OQ<(ST^Qe/TXB/BFZDbjaDTlt
%pId)fqraR8-3"78*>p7f%W[L9nC7MBXi^1",&P",QT_Y#7ZNT$,mjZ=NbT"!C&lf!p&S\378%;n/\fT'B3X!ors0m1'Jqp)j<?40
%Y6<3(rc4j*XfVDjkPCkkOs?cMM*aIjK,TBV^H$heCcab6!4qUoq3D-HY^&nP+@=bDJ\pFiLU\I6%A:#Z4=15nD'(`0$6XnQYFm$]
%a[(n`?O`\)f:rkLlgn;_*'iZrXZ:n;W?[8:j!5F\+abSdDXm1pFpanJg@BOs+G#3LTHTti$T1D%IsV0dG;?gT("Z@O\b]9'!0tgk
%1"edEe<*/XEKF[8J?K0=oslJ@)JK)5dQ40H_NeM"7p=DN:c:b's0[oZEdUVtW7/u)hpAYVk7CNE&r!qh%RECp)Elqu.XgM=]-:11
%!>(j<+;tPPJO.cB*&lI'qqV%XZ#bE$Jn8/&p6*9^+E\f(3'*um(r/!tc!cg&*&ZnBoir.b+NbB@KEEg+0W;!K;u_/e;6uP6\K!&5
%DJeMkVl11u4\-9I-9222q+B.=/+k47YA]Eo-,">T-s(q\NjPIsT^6S,*8@-3V+h8.YC3u0Rqo>+Kh2i'6V)Vr1jfaIL^.tN^tEQh
%=K78Gp[iK0&hP6CP@2H9;G^b#<5YU4[1=52Wk.RHCi3OED+\4]O>p(`E3t^bBFqlj2Z%72F:+LATd(ph7$K2e84Qk1@8Q[,LX#e8
%BcY(QY`8'l1Aa6-\l(PRLjBUT*"?)1"u+T+3G)KXd;d2iVjupQW<jhT"V']]N>`5*VSM`:?@Cb%[K/2;r:jN$*=SM_U`Lcg:P0R[
%JQsL;Nlb2_1_mUP3U_GG21^F_THTqhK,0*J^H$<EgQ]8@OlLe7jqKhrHI#Ktj;T6,6\+Y`BJC^H1e#^C-7KpIPK>7D%O'q+'[d.B
%C+uTdO]2;67uhH>ab>j]SN?mNj9VP6,RRn2)?PLq20'2MSTElE5-I+>%O#CV'_7A+Zl$1KQ'(ZNs.:%0VRf+-g(Sd<[@2*k.f7*r
%kUWA$]`#4.Up$5E#?iTlq.N$_6&Xp$!UUWu?Ba6#/gpJM?>VGDF9?hheEW,=r"RMN:G'$0ipBXI[la?]28.=Y`F6(GEWWu/>2L;Y
%`W<_"DV$V9lV4cFBX@)fp[lT$6nD8"Qt8@\p\j-'G8'8GQVqZ:Fo1qpl;g_ID9'h:T3'j?\"WuT'5AWTrN,3pW1W[qj28$Y^Z/in
%LTY-Ul9;J5q&n5dX)$G?:9+0p2G[93mr\NNlg%$`8)ml)g"A<GMNISFF.V1_K%_hNA+P"Wri/ke<ep728o^Lai-+\JHZ6OCHCH"(
%0],\uNk2,aQVVP:UYkC/V-kNs*gqd_[S7&5!^eFeTgV;V40IbWF.aCg!*(Q,YuQ&u3_3(9q_-8WBXaWS:XLg%XnJ4LPE!WX)%?qV
%8%L?*H20O2%I<IeCr*c6Eshb9BKXeJ7,]!u$LR4>J,J`,l5l;hL#W![m:EV4Y>q,Shr&LUFh:U?mRR+UlgCMBjo$bnk>L>M5[SBS
%dBkk)4Km!gC@.4g.k.i1dEWRCmr.&;[2(^M3OQocI[d)acr@IV'=*&;9AO+4Id..CO,dNK)nfb=d!4cS5<cPdm[sqh:4V89_UfS3
%R"'Nd@:VIO^\RX8s6IGtko]p"pE+n`[t":e+$]c&bQ%-os71LUq_oVsSLt+"pK)8pg;OZcI`p;\OM-?rPHCP!DO#'m[f&0Mno&`a
%3U;#fdEu#_Vn)bR[hH7UXja\#d'Bcp8+HS]*;-(G^T=<e&G;N7;_2^"PB,;FpC&X>/Eq*?E7VSm'H?m`bAu@fd+r$,#&SKS=eTn$
%2Yla$7m$_IqPeKe#i@5"cF,<VqMt1GUFC10aL+1m\$U^\[-E3TEViSR*nZV]H;Ir,p][41>O793,L@_N&lbt\Z2]?g;Ja@JW).hK
%osa>1rr-TM0>04"hlUt2Noem(8KQjsi*RtfT([t^GpalYh]3@,,FDh7nLS:nT@id7O3$d4Zg)RRJ_se#ZUB(cWU:d+g+=CoPTJ1Q
%]]6]0'2N(lNj`#pi7a9l*L_I3iP2RWCqIhr06t!iWnVX7^*u@oZYk<HQ`47436g(Ad/DIs!e%8emEep%Mso[t5G,W4W_<ONBnG?Q
%[He*a6RWT'mq:(BrFde_(Ye5PdPRndZ(XJR3fi^lHS$?g'7l0ZNbq"O*PZdI4]g?UEmnrI<+TjAY=0F"oU_q0L_^2[o2Hq;P`65f
%(noY;rOc;p0d3o[UZS[!jPGbRMWd0@*uYTs'/7I)763A-Y`Xi/jDVs0_Eab<:<GKmpND_MCH^e3Nr*[B0%ENP>08"e6Z]quir4=q
%a502VZd`Kg!Ln"FRDF?%76\"&%f%W)]"a$qmBX+@KAEYLm=ICK]"QtIg@d6-["4fXY6!Ceo$K1r<JO<^K75r:mqW0]2W+C9Gl?o'
%dUd-">X@[lgRd-`3WsQc/=S'861oZ`A$5o;I1NR12u@c=)!(+nf68(NSbB)ID9k"`pP(U(]Z*3g[\/tkf7;Dm;[0_]kDq0N6U)Wo
%p[@F>?[WLWcS^oV4L8d,3t@a-[AqGnCo+:'"'t:j`8XA:rR/45Ct&(n%19:/]!&cJE7Gsb2^OqNr)+?9$W7rH?Q#@tX^TR,s83JI
%chgYbW`Zf;FUm\?>G>t2pDIf^?B92.h>:c0Q*$Td##f8;_+rh`RGJsJ?U%uonQ3k:I<t=H[FtA)p1cac6/hK-2^qrppN:>`q;.9#
%lIE\OCmdKMUF(9Wo1'?Vs$GO>Cf36kHY52fhcFrmd73*f82l7.(E6Sr\U+C!p%gSR;qMRh='#`[8!(Lc9&o7:0H\!Jem@EPaYS'd
%7YASDOfiGHP^?U&g#5ZicCK9@"77qZ5,7C1!fs#PrX4]E.l'n9YH\g4O$Vf=Zr)'2dS1Y+pP4!.hq.[q)tb+.1i'c"iOYm,.6OB$
%n<M:ClFF%1cIOLRR<n7ld@fuTUmpATfS-Lm<LrLgH*;:^S^)Bo]Mt+0Sl)3NL!KSoWOZZ*^!=[]\up\2cY0*CHDI$:?,uoCMI'E*
%4qB\52!aM7qta/k$I:+LI&6F/qm^sCn!&#KH`u6])AHM=FB.L5$$9_LS$e^-3X=C'I,4D@RKs1QB2g:,U%=hh0@quC]\>?Z60Dmf
%;0Y7Pm64DA2gqZif(0`#DJ7VSR_.tQ'd'6En;NOI=$#(;bI2LRh\mM*b;#sO1E$s6O*&kBCg#ZP8g;G8of<?3l$RsJ7pV>l$I>YI
%pd4.bYmSgMo7!U=gS"-og*jTTl)+3`4`+D-E1,j2d(,iQB3U*NYDN[@B9X*ZCKHbPhql0;rho.urhi![?a&Ae[m0fTgUA-sX8i+p
%^]24Op8?gJ_uK=`5Q0\Nr;Ak[rr;r7a7'''8"98QiLfO&IJj&9rp\86nrJ:s_oG"AhuEKO).GhI&,tjtrmUoF5Q9bOr;Uu-(pE~>
%AI9_PrivateDataEnd
